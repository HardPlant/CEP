<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="6:SerialApp.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7ef83190"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7ee72e48"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7ee72e48"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7eb45300"/></to>
    </wire>
    <wire loc="9:SerialApp.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ef90030"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7eb350c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7eb350c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7eb24e58"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="13:SerialApp.nc">
      <from><interface-ref name="LEDController" scoped="" ref="0x7ef516a0"/></from>
      <to><interface-ref name="LEDController" scoped="" ref="0x7e8c3398"/></to>
    </wire>
    <wire loc="7:LEDControllerC.nc">
      <from><interface-ref name="LEDController" scoped="" ref="0x7e8c3398"/></from>
      <to><interface-ref name="LEDController" scoped="" ref="0x7e8c18f0"/></to>
    </wire>
    <wire loc="17:SerialApp.nc">
      <from><interface-ref name="LCDSetter" scoped="" ref="0x7ef414b0"/></from>
      <to><interface-ref name="LCDSetter" scoped="" ref="0x7e777890"/></to>
    </wire>
    <wire loc="30:LCDSetterC.nc">
      <from><interface-ref name="LCDSetter" scoped="" ref="0x7e777890"/></from>
      <to><interface-ref name="LCDSetter" scoped="" ref="0x7e800b68"/></to>
    </wire>
    <wire loc="21:SerialApp.nc">
      <from><interface-ref name="TempSensor" scoped="" ref="0x7ef310a8"/></from>
      <to><interface-ref name="TempSensor" scoped="" ref="0x7e243328"/></to>
    </wire>
    <wire loc="27:TempSensorC.nc">
      <from><interface-ref name="TempSensor" scoped="" ref="0x7e243328"/></from>
      <to><interface-ref name="TempSensor" scoped="" ref="0x7e231760"/></to>
    </wire>
    <wire loc="25:SerialApp.nc">
      <from><interface-ref name="ComSat" scoped="" ref="0x7ef23e10"/></from>
      <to><interface-ref name="ComSat" scoped="" ref="0x7e20c5b0"/></to>
    </wire>
    <wire loc="6:ComSatC.nc">
      <from><interface-ref name="ComSat" scoped="" ref="0x7e20c5b0"/></from>
      <to><interface-ref name="ComSat" scoped="" ref="0x7e205380"/></to>
    </wire>
    <wire loc="30:SerialAppM.nc">
      <from><interface-ref name="test1" scoped="" ref="0x7ef133a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="99:SerialAppM.nc">
      <from><interface-ref name="testInit" scoped="" ref="0x7eef0d30"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:SerialAppM.nc">
      <from><interface-ref name="sendDataTask" scoped="" ref="0x7ef20b48"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:SerialAppM.nc">
      <from><interface-ref name="test2" scoped="" ref="0x7ef00080"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="23:SerialAppM.nc">
      <from><interface-ref name="setData" scoped="" ref="0x7ef21170"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ee615d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dc41d20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ee615d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d7d5450"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ee615d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e0daee0"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ee615d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e07d780"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ee615d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dd062a8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ee615d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dc98598"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ee615d8"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x7e2e5dc8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ee615d8"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x7e2e0608"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ee615d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d8c1300"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ee615d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d8fe010"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ee615d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7eb12060"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7eb45648"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f230970"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f230970"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f070960"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7eb45b78"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ee528d8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ee528d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ee308d8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7eb45ee8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7ee615d8"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7ee33ad8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7df38f28"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7ee33ad8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e451d30"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7ee33ad8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7eac6d00"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7ee333e0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7eb74160"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7ee23010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7eb75d58"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7ee30c48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e833cc8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7ee30c48"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7ee12610"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7ee12610"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7ee10af0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7ee12978"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7ee33ad8"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7edf02f8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7edd3bd8"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7edd3bd8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7ece4330"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7edf0c80"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7ee12978"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7ed80808"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ebf5998"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7eda49a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7eca2bf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7eca2bf8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dac6c78"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7ed93af8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7ec826b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7ec826b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7da866c0"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7ed83808"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7ec70ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7ec70ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7da4bac8"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7edd1010"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7ece36b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7ece36b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7db84010"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7ed84508"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7ec71840"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7ec71840"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7da51718"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7edd0348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7ecd43a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7ecd43a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7db417f8"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7edb4508"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7ecc0f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7ecc0f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7daff0f8"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7eda26c8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7eca0890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7eca0890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dac1ac8"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7ed91808"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7ec80330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7ec80330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7da81538"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7ede0f18"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7ecf26b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7ecf26b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7db8e9e8"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7edc3068"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7ecd2030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7ecd2030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7db3c6c0"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7edb1190"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7ecb3ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7ecb3ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dafa010"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7eda0428"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7ec935d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7ec935d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dabb9e8"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7ed81508"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7ec62890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7ec62890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7da469e8"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7ed737a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ebe33b0"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7ed947a8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7ec83330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7ec83330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7da89228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7ece4330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7db899e8"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7edc2d98"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7ecd1c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7ecd1c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7db37538"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7ed74428"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ebf3cb8"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7edc0188"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7ecc1bc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7ecc1bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7db05d08"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7eda3348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7eca15d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7eca15d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dac4718"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7ed92508"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7ec81030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7ec81030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7da840b0"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7ed82190"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7ec635d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7ec635d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7da49570"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7edd1980"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7ece2030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7ece2030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7db839e8"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7edd0cb8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7ecd4cf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7ecd4cf8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7db3f228"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7edb4e78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7ecb4890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7ecb4890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dafeac8"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7eda1068"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7ec94250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7ec94250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dabe570"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7ed90190"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7ec80c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7ec80c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7da7f010"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7edd48a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7ecf1030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7ecf1030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7db8c538"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7edc39d8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7ecd2988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7ecd2988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7db3a0b0"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7edb1b00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7ecb25d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7ecb25d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7daf99e8"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7ed81e78"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7ec61250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7ec61250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7da44538"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7edb0e78"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7eca22a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7eca22a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dac72b0"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7ed93188"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7ec83c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7ec83c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7da88c08"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7ed84e78"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7ec70250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7ec70250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7da4c0f8"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7ed72188"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ebe06c0"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7edd25e8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7ece4c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7ece4c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7db86538"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7edc17a8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7ecd06b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7ecd06b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7db35010"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7ed90b00"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7ec72eb0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7ec72eb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7da55d08"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7edc0af8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7ecc05d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7ecc05d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7db01718"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7eda3cb8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7eca1f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7eca1f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dac20f8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7ed92e78"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7ec81988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7ec81988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7da83a88"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7ed82b00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7ec63f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7ec63f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7da47010"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7ede05a8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7ecf3d18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7ecf3d18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7db8f010"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7edc46c8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7ecd36b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7ecd36b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7db3ec08"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7edb2808"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7ecb3250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7ecb3250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dafc570"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7eda19d8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7ec94ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7ec94ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dabc010"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7ed74d98"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ebe5050"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7eda0d98"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7ec849c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7ec849c0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7da8b7f8"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7edb0508"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7ecb2f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7ecb2f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7daf7538"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7edd3268"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7ecf1988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7ecf1988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7db8a010"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7edc2428"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7ecd1330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7ecd1330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7db39a88"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f062120"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f051540"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f202c20"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7eb24e58"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7eb126f8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7eb126f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e932370"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7eb12060"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7eaf5c20"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7eb01ea0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7e8d7a88"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7eaf5c20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ea43c78"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7e8e5380"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e966440"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7e9404c8"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7eae29d0"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7eae29d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7e9c5608"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7e8d63d0"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7ead3870"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7ead3870"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7e9c4e48"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ea42078"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7eab5be0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7ea00e10"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7eab5be0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7e9f5c10"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7eaa0848"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7e9e52f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7eab5be0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7e974010"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ea25680"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7e977ed8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7e9e6320"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x7e936bf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7e8e3240"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="10:LEDControllerC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7e8a6548"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7e8b7aa8"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7e8b7aa8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7e855730"/></to>
    </wire>
    <wire loc="13:LEDControllerC.nc">
      <from><interface-ref name="LEDTimer0" scoped="" ref="0x7e8b4220"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e825cb0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7e825cb0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7eb24e58"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:LEDControllerC.nc">
      <from><interface-ref name="LEDTimer1" scoped="" ref="0x7e8a4160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e861900"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7e861900"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7eb24e58"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:LEDControllerC.nc">
      <from><interface-ref name="LEDTimer2" scoped="" ref="0x7e8a10b8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e827280"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7e827280"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7eb24e58"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:LEDControllerC.nc">
      <from><interface-ref name="LEDIntervalTimer0" scoped="" ref="0x7e898078"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e812010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7e812010"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7eb24e58"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:LEDControllerC.nc">
      <from><interface-ref name="LEDIntervalTimer1" scoped="" ref="0x7e895078"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e821b08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7e821b08"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7eb24e58"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="20:LEDControllerC.nc">
      <from><interface-ref name="LEDIntervalTimer2" scoped="" ref="0x7e892078"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e8165a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7e8165a8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7eb24e58"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e833cc8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e855410"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7e854390"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7e834010"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7e834010"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7edd48a0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7e854d00"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7e8349a0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7e8349a0"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7ede0f18"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7e8536c8"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7e833368"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7e833368"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7ede05a8"/></to>
    </wire>
    <wire loc="28:LCDSetterC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7e774310"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e775d08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7e775d08"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7eb24e58"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:LCDSetterC.nc">
      <from><interface-ref name="Interaction" scoped="" ref="0x7e765cf8"/></from>
      <to><interface-ref name="Interaction" scoped="" ref="0x7e704af0"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
      <from><interface-ref name="Interaction" scoped="" ref="0x7e704af0"/></from>
      <to><interface-ref name="Interaction" scoped="" ref="0x7e701308"/></to>
    </wire>
    <wire loc="37:LCDSetterC.nc">
      <from><interface-ref name="SCSuartDBGstd" scoped="" ref="0x7e761d08"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7e264f20"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7e264f20"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7e261730"/></to>
    </wire>
    <wire loc="38:LCDSetterC.nc">
      <from><interface-ref name="SCSuartDBG" scoped="" ref="0x7e758398"/></from>
      <to><interface-ref name="SCSuartDBG" scoped="" ref="0x7e2687e0"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGC.nc">
      <from><interface-ref name="SCSuartDBG" scoped="" ref="0x7e2687e0"/></from>
      <to><interface-ref name="SCSuartDBG" scoped="" ref="0x7e2610e0"/></to>
    </wire>
    <wire loc="52:LCDSetterM.nc">
      <from><interface-ref name="TryToSetTimer" scoped="" ref="0x7e753010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:LCDSetterM.nc">
      <from><interface-ref name="TryToConfigure" scoped="" ref="0x7e7550f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7e701c88"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7e8b7aa8"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
      <from><interface-ref name="ConfigTimeout" scoped="" ref="0x7e700a00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e658268"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7e658268"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7eb24e58"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
      <from><interface-ref name="SensorCheckTimer" scoped="" ref="0x7e6f8960"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e655cb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7e655cb8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7eb24e58"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
      <from><interface-ref name="C328_Reset_Timer" scoped="" ref="0x7e6f5960"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e6516e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7e6516e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7eb24e58"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
      <from><interface-ref name="Read_Humi" scoped="" ref="0x7e6e73b0"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7e49a0c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Humidity" scoped="" ref="0x7e49a0c0"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7d972230"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
      <from><interface-ref name="Read_Temp" scoped="" ref="0x7e6f0010"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7e49b4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Temperature" scoped="" ref="0x7e49b4f0"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7d973670"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
      <from><interface-ref name="Read_Photo" scoped="" ref="0x7e6f0bc8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7e492ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7e492ac8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d8d4690"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
      <from><interface-ref name="Read_Ultrared" scoped="" ref="0x7e6e67a8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7e379990"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7e379990"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d897c48"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
      <from><interface-ref name="CommunicationWithOPT" scoped="" ref="0x7e6d6348"/></from>
      <to><interface-ref name="CommunicationWithOPT" scoped="" ref="0x7e360b58"/></to>
    </wire>
    <wire loc="29:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTC.nc">
      <from><interface-ref name="CommunicationWithOPT" scoped="" ref="0x7e360b58"/></from>
      <to><interface-ref name="CommunicationWithOPT" scoped="" ref="0x7e3535e8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
      <from><interface-ref name="SCSuartDBG" scoped="" ref="0x7e6e3010"/></from>
      <to><interface-ref name="SCSuartDBG" scoped="" ref="0x7e26e438"/></to>
    </wire>
    <wire loc="339:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <from><interface-ref name="SendBasicSensor" scoped="" ref="0x7e673a10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <from><interface-ref name="Event_Urgency_Data" scoped="" ref="0x7e6b7b98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="293:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <from><interface-ref name="ProcessCMD" scoped="" ref="0x7e685290"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <from><interface-ref name="Set_C328_Restart_Timer_START" scoped="" ref="0x7e6d00e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <from><interface-ref name="TaskStartDoneConfiguration" scoped="" ref="0x7e6d4240"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="211:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <from><interface-ref name="TryToGetSensorData" scoped="" ref="0x7e69a6e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <from><interface-ref name="TaskGetSensorDataDone" scoped="" ref="0x7e6d2238"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TempResource" scoped="" ref="0x7d972d50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e606b88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Sht11Temp" scoped="" ref="0x7d971b10"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7e6054f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="HumResource" scoped="" ref="0x7d971438"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e606b88"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Sht11Hum" scoped="" ref="0x7d9706d0"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7e6054f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="SensirionSht11" scoped="" ref="0x7e6054f8"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7e5a9068"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7e606b88"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e599100"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7e599100"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e4ca4e0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7e5a9bb0"/></from>
      <to><interface-ref name="DATA" scoped="" ref="0x7e5997f0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7e5997f0"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7eda49a0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="CLOCK" scoped="" ref="0x7e5a85f0"/></from>
      <to><interface-ref name="SCK" scoped="" ref="0x7e5981a8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7e5981a8"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x7edb0e78"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x7e5a7010"/></from>
      <to><interface-ref name="InterruptDATA" scoped="" ref="0x7e598b40"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x7e598b40"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7e52ba28"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7e5a7678"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e4a35d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7e4a35d8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7eb24e58"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7e5a5588"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7e8b7aa8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="readSensor" scoped="" ref="0x7e5a36a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="signalStatusDone" scoped="" ref="0x7e5a3270"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7e4ca4e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7d8fd4c0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7e588618"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7eda49a0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7e587010"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x7edb0e78"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7e589700"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e594bc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7e594bc8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7eb24e58"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7e52a050"/></from>
      <to><interface-ref name="Int1" scoped="" ref="0x7e576010"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7e576010"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e545228"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7e4c6980"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e589088"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7e4c59c0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7e4c96d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7e4c96d8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7d8fc6c8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ResourceController" scoped="" ref="0x7e4c5328"/></from>
      <to><interface-ref name="ResourceController" scoped="" ref="0x7e4c9040"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceController" scoped="" ref="0x7e4c9040"/></from>
      <to><interface-ref name="ResourceController" scoped="" ref="0x7d8fc030"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11P.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7e587d78"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x7e5717c8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e536538"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x7e5757c8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e53b2d0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x7e570010"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e5345e0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7e5767c8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e542228"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x7e571010"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e5393b0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7e572778"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e554228"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7e575010"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e540228"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e5549e0"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x7e565808"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e5459e0"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x7e565b80"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e5429e0"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x7e565ef8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e5409e0"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x7e567280"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e53ba88"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x7e5675f8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e539b68"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x7e567970"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e536cf0"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x7e567ce8"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e534d98"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x7e566088"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7e4cac20"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7d8fdc00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7d8fcb88"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7e4c9b88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x7d8fb010"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7d8fe348"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x7d8f9270"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x7d8e1408"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e4c6980"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7d8e19c0"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7e4c5010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceController" scoped="" ref="0x7d8e1cd8"/></from>
      <to><interface-ref name="ResourceController" scoped="" ref="0x7e4c5328"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7d8e03f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7e4c59c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="stopTask" scoped="" ref="0x7d8e0828"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="startTask" scoped="" ref="0x7d8e0c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7d8d4690"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d8d3e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="subRead" scoped="" ref="0x7d8d19f0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d8d0d98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7d8d0d98"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d8cb338"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7d8cb338"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7e470800"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d8cbe48"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e39fa98"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoDeviceP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e39fa98"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e39a240"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7d8ca350"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7e39f690"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoDeviceP.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7e39f690"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7e39ed80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e46a1a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d8cbe48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7e46a920"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e4636e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7e45d100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7d8ca350"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7e470800"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7e3b5670"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x7e468390"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x7e3c9530"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7e3a7ec0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e46a920"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e3c8838"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e46a1a8"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7e3a7318"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7e3cb700"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7e3c80c0"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7e45a568"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7e45a568"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7e44bb18"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7e4549c0"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7e44d040"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7e4636e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e3fe0c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7e3fe0c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7d8c07a0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7e3e37c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7e45d100"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x7e441468"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x7e424468"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x7e424468"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x7e41ec70"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7e44a800"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7ee333e0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7e3e0da8"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7e44b710"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceController" scoped="" ref="0x7e3de548"/></from>
      <to><interface-ref name="ResourceController" scoped="" ref="0x7e3fec10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceController" scoped="" ref="0x7e3fec10"/></from>
      <to><interface-ref name="ResourceController" scoped="" ref="0x7d8be300"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7e41c040"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7eff0078"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7e3fe808"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7d8c0ee0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7e3e3310"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7d8be998"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7d8bee58"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7e3e37c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x7d8bd290"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7d8c1638"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x7d8bc510"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7d8a2528"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7e3e0da8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7d8a2920"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7e3de230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceController" scoped="" ref="0x7d8a2c38"/></from>
      <to><interface-ref name="ResourceController" scoped="" ref="0x7e3de548"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7d8a1310"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7e3debe0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x7e3c0d10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoDeviceP.nc">
      <from><interface-ref name="PhotoPin" scoped="" ref="0x7e39a798"/></from>
      <to><interface-ref name="PortB6" scoped="" ref="0x7edc2d98"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoDeviceP.nc">
      <from><interface-ref name="PhotoAdc" scoped="" ref="0x7e3950f0"/></from>
      <to><interface-ref name="Adc0" scoped="" ref="0x7e38ae78"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="Adc0" scoped="" ref="0x7e38ae78"/></from>
      <to><interface-ref name="Adc0" scoped="" ref="0x7e386908"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="PW3" scoped="" ref="0x7e38d428"/></from>
      <to><interface-ref name="PortC3" scoped="" ref="0x7edb4e78"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="PW6" scoped="" ref="0x7e38b188"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0x7edb1b00"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="Adc3" scoped="" ref="0x7e389888"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x7e383360"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="Adc5" scoped="" ref="0x7e388010"/></from>
      <to><interface-ref name="Adc5" scoped="" ref="0x7e383a00"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="PW1" scoped="" ref="0x7e38e088"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x7edc0af8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="PW4" scoped="" ref="0x7e38dd98"/></from>
      <to><interface-ref name="PortC4" scoped="" ref="0x7edb2808"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7e38a508"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x7ed92508"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="Adc1" scoped="" ref="0x7e3891e8"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x7e386c58"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="PW7" scoped="" ref="0x7e38baf8"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0x7edb0508"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="Adc6" scoped="" ref="0x7e388360"/></from>
      <to><interface-ref name="Adc6" scoped="" ref="0x7e383d50"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="PW2" scoped="" ref="0x7e38e9f8"/></from>
      <to><interface-ref name="PortC2" scoped="" ref="0x7edb4508"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="PW5" scoped="" ref="0x7e38c7a8"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0x7edb1190"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="Adc2" scoped="" ref="0x7e389538"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x7e383010"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="Adc4" scoped="" ref="0x7e389c58"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x7e3836b0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="Adc7" scoped="" ref="0x7e3886b0"/></from>
      <to><interface-ref name="Adc7" scoped="" ref="0x7e3820b0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="PW0" scoped="" ref="0x7e38f6e8"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x7edc0188"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7d897c48"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d8953d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="subRead" scoped="" ref="0x7d893010"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d8923b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7d8923b8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d890980"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7d890980"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7e470800"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d88e4f8"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e363468"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredDeviceP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e363468"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e35fb60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7d88e9d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7e363060"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredDeviceP.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7e363060"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7e35f758"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e46a1a8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d88e4f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7e46a920"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e4636e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7e45d100"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7d88e9d0"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredDeviceP.nc">
      <from><interface-ref name="UltraredPin" scoped="" ref="0x7e35e0e0"/></from>
      <to><interface-ref name="PW1" scoped="" ref="0x7e38e088"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredDeviceP.nc">
      <from><interface-ref name="UltraredAdc" scoped="" ref="0x7e35ea58"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x7e3891e8"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTC.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x7e3522a8"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x7e2e86d8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x7e2e86d8"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x7e2e0980"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTC.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x7e3526e8"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x7e2e8b10"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x7e2e8b10"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x7e2e0dd8"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTC.nc">
      <from><interface-ref name="HPLUART" scoped="" ref="0x7e34b9c8"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x7e2e7010"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x7e2e7010"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x7e2d0290"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTC.nc">
      <from><interface-ref name="SCSuartDBG" scoped="" ref="0x7e3504e8"/></from>
      <to><interface-ref name="SCSuartDBG" scoped="" ref="0x7e26e438"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x7e2e9b90"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7e2e2a60"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x7e2e9758"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7e2e2608"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x7e2e9320"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7e2e21b0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7e2d0db8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7ee333e0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7e2cf500"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7eff0078"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGC.nc">
      <from><interface-ref name="SCSuartDBGRecv" scoped="" ref="0x7e264bd8"/></from>
      <to><interface-ref name="SCSuartDBGRecv" scoped="" ref="0x7e261408"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGC.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x7e261ba0"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7e2e9320"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGC.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x7e260010"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7e2e9758"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGC.nc">
      <from><interface-ref name="HPLUART" scoped="" ref="0x7e260440"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7e2e9b90"/></to>
    </wire>
    <wire loc="30:TempSensorC.nc">
      <from><interface-ref name="Read_Humidity" scoped="" ref="0x7e231c70"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7e220768"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Humidity" scoped="" ref="0x7e220768"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7d883da8"/></to>
    </wire>
    <wire loc="31:TempSensorC.nc">
      <from><interface-ref name="Read_Temp" scoped="" ref="0x7e230858"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7e221b50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Temperature" scoped="" ref="0x7e221b50"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7d8831f8"/></to>
    </wire>
    <wire loc="34:TempSensorC.nc">
      <from><interface-ref name="Read_UR" scoped="" ref="0x7e22f430"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7e210030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7e210030"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d8723b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7e2410a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7eb24e58"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TempResource" scoped="" ref="0x7d8828d8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e606b88"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Sht11Temp" scoped="" ref="0x7d8816e8"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7e6054f8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="HumResource" scoped="" ref="0x7d881010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e606b88"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Sht11Hum" scoped="" ref="0x7d880270"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7e6054f8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7d8723b8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d871b58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="subRead" scoped="" ref="0x7d85f768"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d85eb80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7d85eb80"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d85a130"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7d85a130"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7e470800"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d85ac40"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e363468"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7d859150"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7e363060"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e46a1a8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d85ac40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7e46a920"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e4636e8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7e45d100"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7d859150"/></to>
    </wire>
    <wire loc="11:ComSatC.nc">
      <from><interface-ref name="ElapsedTimer" scoped="" ref="0x7e205a48"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e209d40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7e209d40"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7eb24e58"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:ComSatC.nc">
      <from><interface-ref name="LCDSetter" scoped="" ref="0x7e19ba40"/></from>
      <to><interface-ref name="LCDSetter" scoped="" ref="0x7e777890"/></to>
    </wire>
    <wire loc="19:ComSatC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7e202900"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e177240"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7e177240"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e153df0"/></to>
    </wire>
    <wire loc="24:ComSatC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7e1f1010"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7dc113b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x7dc113b8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7d768118"/></to>
    </wire>
    <wire loc="25:ComSatC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7e19b558"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7dbc3b38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7dbc3b38"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e1763e8"/>
      <arguments>
        <value cst="I:222">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7e208ed0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:ComSatM.nc">
      <from><interface-ref name="sendDataTask" scoped="" ref="0x7e19f5c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="28:ComSatM.nc">
      <from><interface-ref name="start" scoped="" ref="0x7e1a0e88"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7e153df0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e0dc548"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7e177a90"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7e152688"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7e152688"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7e13ee40"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7e176b80"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7e1507a8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7e1507a8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7e137010"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7e160458"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e142698"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7e142698"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e137e38"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7e1763e8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e150010"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7e150010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e1387a8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e1554a8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e13c778"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e13c778"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7dc21290"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e1599c8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e150c90"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e150c90"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e1374f8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7e0dc548"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e0d6250"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7e13c1a8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7dc28c20"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7e134010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7e0dcb28"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7e0dcb28"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7e0d6830"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7e1346e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e0db258"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7e0db258"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7dc97258"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><function-ref name="amAddress" scoped="" ref="0x7e134d60"/></from>
      <to><function-ref name="amAddress" scoped="" ref="0x7dc27140"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e0db760"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e1374f8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7dc97258"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7dc92258"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e0b6e48"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e0db760"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e079340"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e0db760"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7e0d6ef8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e07dac8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7e07dac8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e071230"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7e0c1088"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7e07a978"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7e07a978"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7e070340"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7e0c1a20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7dd065f0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7e0c1a20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7dc988e0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7dc988e0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7dc93860"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7dd065f0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7dcfd620"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7e0bc1e0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7dd06a18"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7dd06a18"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7dcfda70"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CsmaBackoff" scoped="" ref="0x7e0b8290"/></from>
      <to><interface-ref name="CsmaBackoff" scoped="" ref="0x7dd05340"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="CsmaBackoff" scoped="" ref="0x7dd05340"/></from>
      <to><interface-ref name="CsmaBackoff" scoped="" ref="0x7dcfc340"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7e0b6a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7dc3eb38"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7dc3eb38"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7dc3ba00"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7e0ba7d8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7e8b7aa8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7dc98598"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dc93518"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7dd062a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e011dc8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7dd062a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dcfd2d8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e07d780"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e074ea8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7e0b4a20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7e0b41f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7e0b5a88"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7e07a010"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7e0718f8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e051e80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e079340"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7e070e08"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7e0102e0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7e0102e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7e000358"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7e061560"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7deb6818"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7deb6818"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7edd0348"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7e061ef0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7deb45e8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7deb45e8"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x7edd1010"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7e060898"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7deb3980"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7deb3980"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x7edd25e8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7e05f290"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7dea0500"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7dea0500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7de80240"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7e05f8a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7dd30010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7dd30010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7de502d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7e0510e0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7dd27190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7dd27190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de43438"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7e051450"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7dd274e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7dd274e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de43438"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7e051b38"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7dd27ef0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7dd27ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de43438"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7e0517c8"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7dd26260"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7dd26260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de43438"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7e0554c8"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7dd265b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7dd265b8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de45ce0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7e055918"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7dd269f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7dd269f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de45ce0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7e055de8"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7dd26e28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7dd26e28"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de45ce0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7e05b290"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7dd24320"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7dd24320"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de45ce0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7e05b6e8"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7dd24758"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7dd24758"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de45ce0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7e058310"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7dd23448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7dd23448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7de45600"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7e054830"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7dd1f728"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7dd1f728"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7de502d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7e054ef0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7e8b7aa8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <from><interface-ref name="syncDone_task" scoped="" ref="0x7e042468"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e011dc8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7debbb08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x7debbb08"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7deba280"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x7e000358"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7d8489f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x7d8489f8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7d842d28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7d83e5d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7d844598"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x7d844598"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7d8399f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x7d83f560"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7df1bdb0"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7df1bdb0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7df015c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7d837258"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7dfde660"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7dfde660"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7dfbb7a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7d834120"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7dfc2ae0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7dfd5e90"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7dfb9558"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7dfc3d70"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7dfb8150"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7dfc2ae0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7dfb6c18"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7dfc2ae0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7dfb33b0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7dfc2ae0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7dfb2b38"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x7dfa42c8"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7eaa5388"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7df37320"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7dfde660"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7def3620"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7df15150"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7df15150"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7df13e88"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7df12e68"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7dfde660"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7deb5268"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x7edc17a8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7deb5bd8"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7ed91808"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7e013e90"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x7eda19d8"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7deb3010"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x7eda26c8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7de9eed0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7de9b6b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7dea0b18"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7de906d8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x7de9bd38"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7dfc3d70"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7de90cd0"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x7e5717c8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CCATimer" scoped="" ref="0x7de7f300"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7de81a78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7de81a78"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7eb24e58"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x7de80870"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7e013e90"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7de78dc0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x7de7cd98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7dd27b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de43438"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7dd24b90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de45ce0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dd23cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7de45600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7dd30a40"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de43438"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7dd23880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7de45600"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7dd30d98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de43438"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7dd22190"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7de50c50"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7dd23010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7de45600"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7dd306e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de43438"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7dd27840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de43438"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7dd22868"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7de50c50"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7de50c50"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7de3e158"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7de45600"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7de3eae0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7de45ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de3d1e8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7de502d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7de3f7b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7de43438"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de3d8c8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7de3dc40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ddffa00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7ddffa00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ddf8b78"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7de37438"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7ddfe170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiByte" scoped="" ref="0x7ddfe170"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7ddf8178"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7de34c08"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7ddfe4a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7ddfe4a8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7ddf84c0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7de38040"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7e8b7aa8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7ddf84c0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7ddf39d8"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7ddf8178"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7ddf36b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x7ddff6c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ddfcdd0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ddfcdd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ddf3390"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ddf8b78"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ddf1100"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x7dde5500"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7dd65888"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7dd65888"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7d7d4780"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7dde5ba8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7dd64418"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7dd64418"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7d7d32e0"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7ddd8998"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7dda6308"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7dda6308"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7dda0010"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7ddd7010"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7eff0078"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7dd9c428"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7eff0078"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7dd9fce0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7edd0348"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7dd9e6c8"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7edd0cb8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7dd9d068"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7edc46c8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7dd9d9d8"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7edc3068"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7dd64010"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7d7d4ec0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7d7d37a0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7dd648c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x7d7d3bc8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7d7d5788"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x7d7d2270"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7dd1b9a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de45ce0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7dd1c260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de43438"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7dd1a270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de45ce0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dd19368"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7de45600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7dd1b0b8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de45ce0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7dd1e190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de43438"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7dd1c910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de43438"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7dd1bde0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de45ce0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7dd1c5b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de43438"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7dd1af18"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7de45600"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7dd1e4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de43438"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7dd197a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7de50c50"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7dd1b4f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de45ce0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7dd1cc68"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de45ce0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7dd1e840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de43438"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7dd1aae0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7de45600"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7dd1a6a8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7de45600"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7dd1fe00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de43438"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7dd1eef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de43438"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7dd1eb98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de43438"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7dd19e78"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7de50c50"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="RadioTimeStamping" scoped="" ref="0x7dd00218"/></from>
      <to><interface-ref name="TimeStamp" scoped="" ref="0x7dcfc7a0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7dcfcd28"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7e0102e0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7dcf9a90"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7e013e90"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7dcf8448"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7deb6818"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7dcf8dd8"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7deb3010"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7dcf9480"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7de9eed0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7dcf77d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7dca5ae0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7dca5ae0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7de502d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7dcf6f00"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7dca4920"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7dca4920"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de43438"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7dcf5288"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7dca3368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7dca3368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de43438"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7dcf5600"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7dca36c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7dca36c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de43438"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7dcf5978"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7dca45c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7dca45c8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de43438"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7dcf6ab0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7dca0758"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7dca0758"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de45ce0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7dcf7ec0"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7dc9e430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7dc9e430"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7de50c50"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dcf65e0"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dc9f880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dc9f880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7de45600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7dcf09c0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7dc98d08"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7dc98d08"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7dc93c88"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7dcf0ec0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7e8b7aa8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7dca2eb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de45ce0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7dca25c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de45ce0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7dca3d70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de43438"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7dca0320"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de45ce0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7dca3a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de43438"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7dc9f448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7de45600"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7dc9fcb8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7de50c50"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7dca2a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de45ce0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7dca2190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de45ce0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7dca4c78"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de43438"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7dc9f010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7de45600"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7dca0b90"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7de45600"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7dca4270"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de43438"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7dca3010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de43438"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7dc86060"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7e8b7aa8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7dc92788"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7deb6818"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7dc911a8"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7deb5268"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7dc91b38"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7deb5bd8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7dc90530"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7dea0b18"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7dc90b48"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7dc946a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7dc946a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7de502d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7dc87288"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7dc567a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7dc567a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7de50c50"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7dc87cf0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7dc94d80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7dc94d80"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de43438"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7dc83558"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7dc589a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de45ce0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7dc5a260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de43438"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7dc57270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de45ce0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dc56368"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7de45600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7dc580b8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de45ce0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7dc5b190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de43438"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7dc5a910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de43438"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7dc58de0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de45ce0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7dc5a5b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de43438"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7dc57f18"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7de45600"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7dc5b4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de43438"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7dc584f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de45ce0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7dc5ac68"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de45ce0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7dc5b840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de43438"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7dc57ae0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7de45600"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7dc576a8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7de45600"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7dc5bef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de43438"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7dc5bb98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de43438"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7dc56e78"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7de50c50"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7dc3ba00"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7dc36968"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7dc3e288"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7dc3b150"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7dc3b150"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7dc360b8"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7dc435f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dc41d20"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7dc41d20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dc3ac78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7dc11a50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e160458"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7dbc6150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e1599c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x7dbc6aa8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e1554a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7d7687e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7dbf88c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d768e78"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e1599c8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7dbf88c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7dbd12b8"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7dbd1a28"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7e177a90"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7dbd0150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e1599c8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7dbd0a88"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e160458"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x7dbc9190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7dbc2030"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e160458"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7dbc26c8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e1599c8"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="SerialAppM" loc="2:SerialAppM.nc">
      <module/>
    </component>
    <component qname="MainC" loc="45:/opt/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/system/MainC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.1.2.11 2006/09/22 19:23:59 idgay Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.1.2.11 2006/09/22 19:23:59 idgay Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.1.2.11 2006/09/22 19:23:59 idgay Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformC.nc">
      <documentation loc="15:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10;</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformP.nc">
      <documentation loc="18:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10;</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10;</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10;</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.1.2.6 2006/09/22 19:12:14 idgay Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialApp.Timer" loc="36(SerialApp.Timer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(SerialApp.Timer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="22:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer. </short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmCounterMilliP.MilliInit" loc="35(AlarmCounterMilliP.MilliInit):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="35(AlarmCounterMilliP.MilliInit):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmCounterMilliP.MilliAlarm" loc="42(AlarmCounterMilliP.MilliAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="42(AlarmCounterMilliP.MilliAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10;</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmCounterMilliP.MilliCounter" loc="33(AlarmCounterMilliP.MilliCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="33(AlarmCounterMilliP.MilliCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmCounterMilliP.Transform32" loc="53(AlarmCounterMilliP.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
      <documentation loc="53(AlarmCounterMilliP.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
        <short>&#10; TransformAlarmCounterC decreases precision and/or widens an Alarm/Counter&#10; pair.</short>
        <long>&#10; TransformAlarmCounterC decreases precision and/or widens an Alarm/Counter&#10; pair. This component has a reduced interrupt overhead compared to using&#10; TransformAlarmC and TransformCounterC separately. However, it is not as &#10; useful for hardware timers with multiple compare registers.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   interfaces.&#10; @param to_size_type The type for the width of the transformed interfaces.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   interfaces.&#10; @param from_size_type The type for the width of the original interfaces.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmCounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10;</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10;</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
          <value cst="I:16">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LEDControllerC" loc="1:LEDControllerC.nc">
      <configuration/>
    </component>
    <component qname="LEDControllerM" loc="1:LEDControllerM.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10;</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10;</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.1.2.11 2006/09/22 19:23:59 idgay Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LEDControllerC.LEDTimer1" loc="36(LEDControllerC.LEDTimer1):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(LEDControllerC.LEDTimer1):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LEDControllerC.LEDTimer2" loc="36(LEDControllerC.LEDTimer2):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(LEDControllerC.LEDTimer2):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LEDControllerC.LEDTimer0" loc="36(LEDControllerC.LEDTimer0):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(LEDControllerC.LEDTimer0):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LEDControllerC.IntervalTimer1" loc="36(LEDControllerC.IntervalTimer1):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(LEDControllerC.IntervalTimer1):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LEDControllerC.IntervalTimer2" loc="36(LEDControllerC.IntervalTimer2):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(LEDControllerC.IntervalTimer2):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LEDControllerC.IntervalTimer0" loc="36(LEDControllerC.IntervalTimer0):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(LEDControllerC.IntervalTimer0):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LCDSetterC" loc="22:LCDSetterC.nc">
      <documentation loc="22:LCDSetterC.nc">
        <short>//////////////////////////////////////</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="LCDSetterM" loc="21:LCDSetterM.nc">
      <documentation loc="21:LCDSetterM.nc">
        <short>***************************************************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="LCDSetterC.TimerMilliC" loc="36(LCDSetterC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(LCDSetterC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InteractionC" loc="22:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
      <documentation loc="22:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
        <short>////////////////////////////////////////////</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="InteractionM" loc="20:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <documentation loc="20:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
        <short>***************************************************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="InteractionC.ConfigTimeout" loc="36(InteractionC.ConfigTimeout):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(InteractionC.ConfigTimeout):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InteractionC.SensorCheckTimerC" loc="36(InteractionC.SensorCheckTimerC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(InteractionC.SensorCheckTimerC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InteractionC.C328_Reset_TimerC" loc="36(InteractionC.C328_Reset_TimerC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(InteractionC.C328_Reset_TimerC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InteractionC.SensirionSht11C" loc="45(InteractionC.SensirionSht11C):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11C.nc">
      <documentation loc="45(InteractionC.SensirionSht11C):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InteractionC.SensirionSht11C.SensirionSht11ReaderP" loc="43(InteractionC.SensirionSht11C.SensirionSht11ReaderP):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <documentation loc="43(InteractionC.SensirionSht11C.SensirionSht11ReaderP):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
        <short>&#10; SensirionSht11ReaderP transforms the HAL-level SensirionSht11&#10; interface into a pair of SID Read interfaces, one for the&#10; temperature sensor and one for the humidity sensor.</short>
        <long>&#10; SensirionSht11ReaderP transforms the HAL-level SensirionSht11&#10; interface into a pair of SID Read interfaces, one for the&#10; temperature sensor and one for the humidity sensor. It acquires the&#10; underlying resource before executing each read, enabling&#10; arbitrated access.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C" loc="43:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HalSensirionSht11C.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HalSensirionSht11C.nc">
        <short>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform.</short>
        <long>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform. This component provides the SensirionSht11&#10; interface, which offers full control over the device. Please&#10; acquire the Resource before using it.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/08/15 11:59:09 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalSensirionSht11C.SensirionSht11LogicP" loc="53(HalSensirionSht11C.SensirionSht11LogicP):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11LogicP.nc">
      <documentation loc="53(HalSensirionSht11C.SensirionSht11LogicP):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C" loc="43:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
        <short>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them.</short>
        <long>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them. You&#10; really shouldn't be wiring to this, unless you're writing a new&#10; Sensirion SHT11 driver.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/08/15 11:59:09 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11P" loc="42:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11P.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11P.nc">
        <short>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.&#10;&#10;</short>
        <long>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/06/20 18:56:07 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.TimerMilliC" loc="36(HplSensirionSht11C.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(HplSensirionSht11C.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptC" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.&#10;</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="30(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="30(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="30(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="30(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="30(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="30(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="30(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="30(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.InterruptDATAC" loc="6(HplSensirionSht11C.InterruptDATAC):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="6(HplSensirionSht11C.InterruptDATAC):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter" loc="79(HplSensirionSht11C.Arbiter):/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <documentation loc="79(HplSensirionSht11C.Arbiter):/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Sht11.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Queue" loc="32(HplSensirionSht11C.Arbiter.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Arbiter" loc="51(HplSensirionSht11C.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="51(HplSensirionSht11C.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceController interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceController interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceController&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC" loc="57(HplSensirionSht11C.SplitControlPowerManagerC):/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="57(HplSensirionSht11C.SplitControlPowerManagerC):/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices. </short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager" loc="48(HplSensirionSht11C.SplitControlPowerManagerC.PowerManager):/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <documentation loc="48(HplSensirionSht11C.SplitControlPowerManagerC.PowerManager):/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10;</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C.TimerMilliC" loc="36(HalSensirionSht11C.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(HalSensirionSht11C.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InteractionC.PhotoSensorC" loc="19(InteractionC.PhotoSensorC):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoSensorC.nc">
      <documentation loc="19(InteractionC.PhotoSensorC):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10;</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PhotoSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InteractionC.PhotoSensorC.DemoChannel" loc="27(InteractionC.PhotoSensorC.DemoChannel):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoC.nc">
      <documentation loc="27(InteractionC.PhotoSensorC.DemoChannel):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="0">
        <component-ref qname="PhotoC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InteractionC.PhotoSensorC.DemoChannel.ADC_ShiftM" loc="27(InteractionC.PhotoSensorC.DemoChannel.ADC_ShiftM):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc">
      <documentation loc="27(InteractionC.PhotoSensorC.DemoChannel.ADC_ShiftM):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="0">
        <component-ref qname="ADC_ShiftM"/>
      </instance>
      <module/>
    </component>
    <component qname="InteractionC.PhotoSensorC.DemoChannel.PhotoProC" loc="26(InteractionC.PhotoSensorC.DemoChannel.PhotoProC):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoProC.nc">
      <documentation loc="26(InteractionC.PhotoSensorC.DemoChannel.PhotoProC):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoProC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="0">
        <component-ref qname="PhotoProC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InteractionC.PhotoSensorC.DemoChannel.PhotoProC.AdcReadClientC" loc="21(InteractionC.PhotoSensorC.DemoChannel.PhotoProC.AdcReadClientC):/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="21(InteractionC.PhotoSensorC.DemoChannel.PhotoProC.AdcReadClientC):/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC. </short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="16:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <documentation loc="16:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10;</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="42:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10;</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="62:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <documentation loc="62:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
        <short>&#10;&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10;&#10;&#10; @author Jason Hill&#10;&#10; @author David Gay&#10;&#10; @author Philip Levis&#10;&#10; @author Phil Buonadonna&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="35:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10;</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="35:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10;</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="79(Atm128AdcC.AdcArbiter):/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="79(Atm128AdcC.AdcArbiter):/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="32(Atm128AdcC.AdcArbiter.Queue):/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="32(Atm128AdcC.AdcArbiter.Queue):/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.1.2.3 $&#10; @date $Date: 2006/10/23 05:45:49 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="51(Atm128AdcC.AdcArbiter.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="51(Atm128AdcC.AdcArbiter.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceController interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceController interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceController&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="57(Atm128AdcC.PM):/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="57(Atm128AdcC.PM):/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10;</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="48(Atm128AdcC.PM.PowerManager):/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="48(Atm128AdcC.PM.PowerManager):/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10;</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10;</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <documentation loc="23(WireAdcP.ArbitrateRead):/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10;</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoDeviceP" loc="29:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoDeviceP.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoDeviceP.nc">
        <short>***************************************************************************</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="PhotoP" loc="27:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoP.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoP.nc">
        <short>***************************************************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="ZigbexBusC" loc="27:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="ZigbexBusP" loc="27:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusP.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusP.nc">
        <short>***************************************************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="InteractionC.UltraredSensorC" loc="19(InteractionC.UltraredSensorC):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredSensorC.nc">
      <documentation loc="19(InteractionC.UltraredSensorC):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10;</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="UltraredSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InteractionC.UltraredSensorC.DemoChannel" loc="27(InteractionC.UltraredSensorC.DemoChannel):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredC.nc">
      <documentation loc="27(InteractionC.UltraredSensorC.DemoChannel):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="0">
        <component-ref qname="UltraredC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InteractionC.UltraredSensorC.DemoChannel.ADC_ShiftM" loc="27(InteractionC.UltraredSensorC.DemoChannel.ADC_ShiftM):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc">
      <documentation loc="27(InteractionC.UltraredSensorC.DemoChannel.ADC_ShiftM):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="1">
        <component-ref qname="ADC_ShiftM"/>
      </instance>
      <module/>
    </component>
    <component qname="InteractionC.UltraredSensorC.DemoChannel.UltraredProC" loc="29(InteractionC.UltraredSensorC.DemoChannel.UltraredProC):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredProC.nc">
      <documentation loc="29(InteractionC.UltraredSensorC.DemoChannel.UltraredProC):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredProC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="0">
        <component-ref qname="UltraredProC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InteractionC.UltraredSensorC.DemoChannel.UltraredProC.AdcReadClientC" loc="21(InteractionC.UltraredSensorC.DemoChannel.UltraredProC.AdcReadClientC):/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="21(InteractionC.UltraredSensorC.DemoChannel.UltraredProC.AdcReadClientC):/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC. </short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UltraredDeviceP" loc="29:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredDeviceP.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredDeviceP.nc">
        <short>***************************************************************************</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="UltraredP" loc="27:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredP.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredP.nc">
        <short>***************************************************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="CommunicationWithOPTC" loc="22:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTC.nc">
      <documentation loc="22:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="CommunicationWithOPTM" loc="20:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTM.nc">
      <documentation loc="20:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTM.nc">
        <short>***************************************************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="35:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.&#10;&#10;</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="69:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <documentation loc="69:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega128 serial port HPL.&#10;&#10;</short>
        <long> &#10; Private component of the Atmega128 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NoSCSuartDBGC" loc="2:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/NoSCSuartDBGC.nc">
      <module/>
    </component>
    <component qname="SCSuartDBGC" loc="29:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGC.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="SCSuartDBGM" loc="29:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGM.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGM.nc">
        <short>***************************************************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="TempSensorC" loc="20:TempSensorC.nc">
      <documentation loc="20:TempSensorC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="TempSensorM" loc="23:TempSensorM.nc">
      <documentation loc="23:TempSensorM.nc">
        <short>***************************************************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="TempSensorC.TimerMilliC" loc="36(TempSensorC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(TempSensorC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TempSensorC.Sensor" loc="45(TempSensorC.Sensor):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11C.nc">
      <documentation loc="45(TempSensorC.Sensor):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SensirionSht11C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TempSensorC.Sensor.SensirionSht11ReaderP" loc="43(TempSensorC.Sensor.SensirionSht11ReaderP):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <documentation loc="43(TempSensorC.Sensor.SensirionSht11ReaderP):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
        <short>&#10; SensirionSht11ReaderP transforms the HAL-level SensirionSht11&#10; interface into a pair of SID Read interfaces, one for the&#10; temperature sensor and one for the humidity sensor.</short>
        <long>&#10; SensirionSht11ReaderP transforms the HAL-level SensirionSht11&#10; interface into a pair of SID Read interfaces, one for the&#10; temperature sensor and one for the humidity sensor. It acquires the&#10; underlying resource before executing each read, enabling&#10; arbitrated access.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SensirionSht11ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="TempSensorC.URSensor" loc="19(TempSensorC.URSensor):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredSensorC.nc">
      <documentation loc="19(TempSensorC.URSensor):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10;</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="UltraredSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TempSensorC.URSensor.DemoChannel" loc="27(TempSensorC.URSensor.DemoChannel):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredC.nc">
      <documentation loc="27(TempSensorC.URSensor.DemoChannel):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="1">
        <component-ref qname="UltraredC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TempSensorC.URSensor.DemoChannel.ADC_ShiftM" loc="27(TempSensorC.URSensor.DemoChannel.ADC_ShiftM):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc">
      <documentation loc="27(TempSensorC.URSensor.DemoChannel.ADC_ShiftM):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="2">
        <component-ref qname="ADC_ShiftM"/>
      </instance>
      <module/>
    </component>
    <component qname="TempSensorC.URSensor.DemoChannel.UltraredProC" loc="29(TempSensorC.URSensor.DemoChannel.UltraredProC):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredProC.nc">
      <documentation loc="29(TempSensorC.URSensor.DemoChannel.UltraredProC):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredProC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="1">
        <component-ref qname="UltraredProC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TempSensorC.URSensor.DemoChannel.UltraredProC.AdcReadClientC" loc="21(TempSensorC.URSensor.DemoChannel.UltraredProC.AdcReadClientC):/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="21(TempSensorC.URSensor.DemoChannel.UltraredProC.AdcReadClientC):/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC. </short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ComSatC" loc="1:ComSatC.nc">
      <configuration/>
    </component>
    <component qname="ComSatM" loc="4:ComSatM.nc">
      <module/>
    </component>
    <component qname="ComSatC.TimerMilliC" loc="36(ComSatC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(ComSatC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="47:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <documentation loc="47:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the micaZ platform.</short>
        <long>&#10;&#10; The Active Message layer on the micaZ platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @date June 19 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
        <short>&#10; The Active Message layer for the CC2420 radio.</short>
        <long>&#10; The Active Message layer for the CC2420 radio. This configuration&#10; just layers the AM dispatch (CC2420ActiveMessageM) on top of the&#10; underlying CC2420 radio packet (CC2420CsmaRadioC), which is&#10; inherently an AM packet (acknowledgements based on AM destination&#10; addr and group). Note that snooping may not work, due to CC2420&#10; early packet rejection if acknowledgements are enabled.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.11 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="35:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.8 $ $Date: 2006/08/04 00:34:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.11 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.12 $ $Date: 2006/07/17 05:04:16 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.8 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.22 $ $Date: 2006/09/07 17:53:12 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/AlarmMultiplexC.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/chips/cc2420/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="66(AlarmMultiplexC.Alarm):/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="66(AlarmMultiplexC.Alarm):/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.6 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.&#10;&#10;</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1P" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10;</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="35(InitOneP.InitOne):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="42(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="42(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10;</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="TOne" ref="0x7f081ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="33(CounterOne16C.NCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="TOne" ref="0x7f081ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="43(Counter32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="43(Counter32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10;</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120ce0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120ce0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x7f081e80"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="40(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="40(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm. </short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120ce0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="TOne" ref="0x7f081ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/opt/tinyos-2.x/tos/system/NoInitC.nc">
      <documentation loc="16:/opt/tinyos-2.x/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="64:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="64:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10;</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.1.2.6 2006/06/20 18:56:06 jwhui Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.6 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.6 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="33(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="33(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10;</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="65:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsP.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.1.2.4 2006/06/20 18:56:06 jwhui Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @version @version $Revision: 1.1.2.4 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.TimerMilliC" loc="36(HplCC2420InterruptsC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(HplCC2420InterruptsC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <documentation loc="39(CC2420ControlC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.8 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiImplP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.12 $ $Date: 2006/09/28 19:26:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiP.HplCC2420SpiC" loc="37(CC2420SpiP.HplCC2420SpiC):/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="37(CC2420SpiP.HplCC2420SpiC):/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.4 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.&#10;&#10;</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.1.2.9 2006/08/15 11:59:08 klueska Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <documentation loc="75:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller. </short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.1.2.10 2006/09/28 19:26:21 jwhui Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10;</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.1.2.4 2006/03/13 23:07:53 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <documentation loc="56:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10;</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="73(Atm128SpiC.Arbiter):/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="73(Atm128SpiC.Arbiter):/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="32(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="51(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="51(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <documentation loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420TransmitC" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.8 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.14 $ $Date: 2006/08/15 11:59:08 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <documentation loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.5 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.10 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <documentation loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="32:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="31:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
        <short>&#10; This is the configuration for RandomMlcgC, a &#10; multiplicative linear congruential generator. &#10;&#10;</short>
        <long>&#10; This is the configuration for RandomMlcgC, a &#10; multiplicative linear congruential generator. &#10;&#10; @author  Barbara Hohlt&#10; @author  Philip Levis&#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgP" loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers. </short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;		S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420PacketC.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420PacketC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ComSatC.AMSenderC" loc="39(ComSatC.AMSenderC):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="39(ComSatC.AMSenderC):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:222">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ComSatC.AMSenderC.AMQueueEntryP" loc="35(ComSatC.AMSenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="35(ComSatC.AMSenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10;</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7e208ed0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="34:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.&#10;&#10;</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="37(AMQueueP.AMQueueImplP):/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <documentation loc="37(AMQueueP.AMQueueImplP):/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ComSatC.AMReceiverC" loc="35(ComSatC.AMReceiverC):/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <documentation loc="35(ComSatC.AMReceiverC):/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.&#10;&#10;</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:222">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7ed61588" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7ed61718" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7ed618a8" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7ed42988" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7ed42b28" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7ed42cc8" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7ed42e60" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7ec50868" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7ec50a08" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7ec50ba8" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7ec50d40" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="36:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7ea41010" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7ea41010"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7ea411a0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10;</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7ea23608" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7ea23608"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7ea238c8" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7ea238c8"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x7ea23a58" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7e9f0ae8" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7e9f0ae8"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7e9f0da8" loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7e9f0da8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmCounterC" loc="53:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc" abstract="">
      <documentation loc="53:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
        <short>&#10; TransformAlarmCounterC decreases precision and/or widens an Alarm/Counter&#10; pair.</short>
        <long>&#10; TransformAlarmCounterC decreases precision and/or widens an Alarm/Counter&#10; pair. This component has a reduced interrupt overhead compared to using&#10; TransformAlarmC and TransformCounterC separately. However, it is not as &#10; useful for hardware timers with multiple compare registers.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   interfaces.&#10; @param to_size_type The type for the width of the transformed interfaces.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   interfaces.&#10; @param from_size_type The type for the width of the original interfaces.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7e9c3b18" loc="54:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7e9c3b18"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7e9c3dd8" loc="55:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7e9c3dd8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7e9c2010" loc="56:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7e9c2010"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7e9c22d0" loc="57:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7e9c22d0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7e9c2470" loc="58:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7e9c2738" loc="59:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7e9c2738"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10;</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7e965cc0" loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7e965cc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10;</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7e931698" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7e931698"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7e931820" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7e8d5228" loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7e8d5228"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11C" loc="45:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11C.nc" abstract="">
      <documentation loc="45:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:07 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensirionSht11ReaderP" loc="43:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc" abstract="">
      <documentation loc="43:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
        <short>&#10; SensirionSht11ReaderP transforms the HAL-level SensirionSht11&#10; interface into a pair of SID Read interfaces, one for the&#10; temperature sensor and one for the humidity sensor.</short>
        <long>&#10; SensirionSht11ReaderP transforms the HAL-level SensirionSht11&#10; interface into a pair of SID Read interfaces, one for the&#10; temperature sensor and one for the humidity sensor. It acquires the&#10; underlying resource before executing each read, enabling&#10; arbitrated access.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11LogicP" loc="53:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11LogicP.nc" abstract="">
      <documentation loc="53:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="">
      <documentation loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x7e5524e8" loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x7e552688" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x7e552828" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7e5529c0" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="">
      <documentation loc="6:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="79:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="79:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7e520538" loc="79:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc" abstract="">
      <parameters>
        <constant name="size" ref="0x7e507948" loc="32:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="51:/opt/tinyos-2.x/tos/system/ArbiterP.nc" abstract="">
      <documentation loc="51:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceController interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceController interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceController&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="controller_id" ref="0x7e4f3948" loc="51:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="57:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="57:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices. </short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="48:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="48:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10;</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PhotoSensorC" loc="19:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoSensorC.nc" abstract="">
      <documentation loc="19:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10;</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PhotoC" loc="27:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoC.nc" abstract="">
      <documentation loc="27:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ADC_ShiftM" loc="27:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc" abstract="">
      <documentation loc="27:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc">
        <short>***************************************************************************</short>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PhotoProC" loc="26:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoProC.nc" abstract="">
      <documentation loc="26:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoProC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="21:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="21:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC. </short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="79:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="79:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7e3fd610" loc="79:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="32:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.1.2.3 $&#10; @date $Date: 2006/10/23 05:45:49 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7e3f6068" loc="32:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="57:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="57:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10;</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="48:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc" abstract="">
      <documentation loc="48:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10;</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc" abstract="">
      <documentation loc="23:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10;</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x7e3ccf10" loc="23:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x7e3ccf10"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="UltraredSensorC" loc="19:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredSensorC.nc" abstract="">
      <documentation loc="19:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10;</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UltraredC" loc="27:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredC.nc" abstract="">
      <documentation loc="27:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UltraredProC" loc="29:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredProC.nc" abstract="">
      <documentation loc="29:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredProC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420AlarmC" loc="66:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="66:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.6 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="26:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc" abstract="">
      <documentation loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10;</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7df00580" loc="44:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7df00580"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7df00840" loc="45:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7df00840"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7df00a08" loc="46:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7df00a08"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7df00cc8" loc="47:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7df00cc8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7df00e68" loc="48:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7defe168" loc="49:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7defe168"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="40:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc" abstract="">
      <documentation loc="40:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm. </short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7dee4860" loc="41:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7dee4860"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7dee4b20" loc="42:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7dee4b20"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7dee4ce8" loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7dee4ce8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7dee3010" loc="44:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7dee3010"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7dee31b0" loc="45:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10;</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc" abstract="">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="37:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.4 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7dd63010" loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleArbiterP" loc="51:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc" abstract="">
      <documentation loc="51:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="39:/opt/tinyos-2.x/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="39:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7dc13e98" loc="39:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7e208ed0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="35:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10;</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7dc04030" loc="35:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7e208ed0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="37:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc" abstract="">
      <documentation loc="37:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7dbf28b0" loc="37:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="35:/opt/tinyos-2.x/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.&#10;&#10;</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7dbc1908" loc="35:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7e208ed0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Boot" ref="0x7ef83190" loc="4:SerialAppM.nc">
      <component-ref qname="SerialAppM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7ef83190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7ef83368"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LCDSetter" ref="0x7ef414b0" loc="9:SerialAppM.nc">
      <component-ref qname="SerialAppM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LCDSetter" scoped="" ref="0x7ef414b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCDSetter"/>
      </instance>
      <interface-functions>
        <function-ref name="setLCDDevicePriorty" scoped="" ref="0x7ef41688"/>
        <function-ref name="init" scoped="" ref="0x7ef41768"/>
        <function-ref name="setLCDReceivePacket" scoped="" ref="0x7ef41848"/>
        <function-ref name="setLCDData" scoped="" ref="0x7ef41928"/>
        <function-ref name="setLCDStatus" scoped="" ref="0x7ef41a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LEDController" ref="0x7ef516a0" loc="8:SerialAppM.nc">
      <component-ref qname="SerialAppM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LEDController" scoped="" ref="0x7ef516a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LEDController"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7ef51878"/>
        <function-ref name="BlinkLed1" scoped="" ref="0x7ef51958"/>
        <function-ref name="IntervalBlinkLed0" scoped="" ref="0x7ef51a38"/>
        <function-ref name="BlinkLed2" scoped="" ref="0x7ef51b18"/>
        <function-ref name="IntervalBlinkLed1" scoped="" ref="0x7ef51bf8"/>
        <function-ref name="BlinkLed0" scoped="" ref="0x7ef51cd8"/>
        <function-ref name="IntervalBlinkLed2" scoped="" ref="0x7ef51db8"/>
        <function-ref name="BlinkDone" scoped="" ref="0x7ef51e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="test1" ref="0x7ef133a0" loc="30:SerialAppM.nc">
      <component-ref qname="SerialAppM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="test1" scoped="" ref="0x7ef133a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ef13578"/>
        <function-ref name="runTask" scoped="" ref="0x7ef13658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="testInit" ref="0x7eef0d30" loc="99:SerialAppM.nc">
      <component-ref qname="SerialAppM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="testInit" scoped="" ref="0x7eef0d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7eef0f08"/>
        <function-ref name="runTask" scoped="" ref="0x7eee3010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ComSat" ref="0x7ef23e10" loc="11:SerialAppM.nc">
      <component-ref qname="SerialAppM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ComSat" scoped="" ref="0x7ef23e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ComSat"/>
      </instance>
      <interface-functions>
        <function-ref name="initDone" scoped="" ref="0x7ef40010"/>
        <function-ref name="init" scoped="" ref="0x7ef400f0"/>
        <function-ref name="sendData" scoped="" ref="0x7ef401d0"/>
        <function-ref name="received" scoped="" ref="0x7ef402b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDataTask" ref="0x7ef20b48" loc="27:SerialAppM.nc">
      <component-ref qname="SerialAppM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDataTask" scoped="" ref="0x7ef20b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ef20d20"/>
        <function-ref name="runTask" scoped="" ref="0x7ef20e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="test2" ref="0x7ef00080" loc="72:SerialAppM.nc">
      <component-ref qname="SerialAppM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="test2" scoped="" ref="0x7ef00080"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ef00258"/>
        <function-ref name="runTask" scoped="" ref="0x7ef00338"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="setData" ref="0x7ef21170" loc="23:SerialAppM.nc">
      <component-ref qname="SerialAppM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="setData" scoped="" ref="0x7ef21170"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ef21348"/>
        <function-ref name="runTask" scoped="" ref="0x7ef21428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempSensor" ref="0x7ef310a8" loc="10:SerialAppM.nc">
      <component-ref qname="SerialAppM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempSensor" scoped="" ref="0x7ef310a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TempSensor"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7ef31280"/>
        <function-ref name="start" scoped="" ref="0x7ef31360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ef90030" loc="6:SerialAppM.nc">
      <component-ref qname="SerialAppM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7ef90030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ef70930"/>
        <function-ref name="fired" scoped="" ref="0x7ef90d38"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ef702f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ef70110"/>
        <function-ref name="getdt" scoped="" ref="0x7ef70cf0"/>
        <function-ref name="gett0" scoped="" ref="0x7ef70b10"/>
        <function-ref name="isRunning" scoped="" ref="0x7ef90f18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ef90658"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ef70610"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ef908d8"/>
        <function-ref name="stop" scoped="" ref="0x7ef90b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7ee615d8" loc="47:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7ee615d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ee617b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7ee72e48" loc="46:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7ee72e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7ee71050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7ee33ad8" loc="43:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7ee33ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ee33cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ee528d8" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ee528d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ee52ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7ee333e0" loc="41:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7ee333e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7ee335b8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7ee33698"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7ee33778"/>
        <function-ref name="actualMicro" scoped="" ref="0x7ee33858"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7ee33938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7ee30c48" loc="36:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7ee30c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ee30e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ee308d8" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ee308d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ee30ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7ee23010" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7ee23010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ee231e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7ee12978" loc="18:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7ee12978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ee12b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7ee12610" loc="17:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7ee12610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ee127e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7edf0c80" loc="22:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7edf0c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7edf0e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7edf02f8" loc="21:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7edf02f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edf04d0"/>
        <function-ref name="isInput" scoped="" ref="0x7edf05b0"/>
        <function-ref name="toggle" scoped="" ref="0x7edf0690"/>
        <function-ref name="isOutput" scoped="" ref="0x7edf0770"/>
        <function-ref name="get" scoped="" ref="0x7edf0850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edf0930"/>
        <function-ref name="set" scoped="" ref="0x7edf0a10"/>
        <function-ref name="clr" scoped="" ref="0x7edf0af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7ee10af0" loc="20:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7ee10af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ee10cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7ed80808" loc="91:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7ed80808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed80be0"/>
        <function-ref name="isInput" scoped="" ref="0x7ed80cc0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed80da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed80e80"/>
        <function-ref name="get" scoped="" ref="0x7ed74010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed740f0"/>
        <function-ref name="set" scoped="" ref="0x7ed741d0"/>
        <function-ref name="clr" scoped="" ref="0x7ed742b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7eda49a0" loc="65:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7eda49a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eda4b78"/>
        <function-ref name="isInput" scoped="" ref="0x7eda4c58"/>
        <function-ref name="toggle" scoped="" ref="0x7eda4d38"/>
        <function-ref name="isOutput" scoped="" ref="0x7eda4e18"/>
        <function-ref name="get" scoped="" ref="0x7eda4ef8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eda3010"/>
        <function-ref name="set" scoped="" ref="0x7eda30f0"/>
        <function-ref name="clr" scoped="" ref="0x7eda31d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7ed93af8" loc="76:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7ed93af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed93cd0"/>
        <function-ref name="isInput" scoped="" ref="0x7ed93db0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed93e90"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed92010"/>
        <function-ref name="get" scoped="" ref="0x7ed920f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed921d0"/>
        <function-ref name="set" scoped="" ref="0x7ed922b0"/>
        <function-ref name="clr" scoped="" ref="0x7ed92390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7ed83808" loc="85:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7ed83808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed839e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ed83ac0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed83ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed83c80"/>
        <function-ref name="get" scoped="" ref="0x7ed83d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed83e40"/>
        <function-ref name="set" scoped="" ref="0x7ed83f20"/>
        <function-ref name="clr" scoped="" ref="0x7ed82018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7edd1010" loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7edd1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edd11e8"/>
        <function-ref name="isInput" scoped="" ref="0x7edd12c8"/>
        <function-ref name="toggle" scoped="" ref="0x7edd13a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7edd1488"/>
        <function-ref name="get" scoped="" ref="0x7edd1568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edd1648"/>
        <function-ref name="set" scoped="" ref="0x7edd1728"/>
        <function-ref name="clr" scoped="" ref="0x7edd1808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7ed84508" loc="83:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7ed84508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed846e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ed847c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed848a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed84980"/>
        <function-ref name="get" scoped="" ref="0x7ed84a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed84b40"/>
        <function-ref name="set" scoped="" ref="0x7ed84c20"/>
        <function-ref name="clr" scoped="" ref="0x7ed84d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7edd0348" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7edd0348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edd0520"/>
        <function-ref name="isInput" scoped="" ref="0x7edd0600"/>
        <function-ref name="toggle" scoped="" ref="0x7edd06e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7edd07c0"/>
        <function-ref name="get" scoped="" ref="0x7edd08a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edd0980"/>
        <function-ref name="set" scoped="" ref="0x7edd0a60"/>
        <function-ref name="clr" scoped="" ref="0x7edd0b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7edb4508" loc="57:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7edb4508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edb46e0"/>
        <function-ref name="isInput" scoped="" ref="0x7edb47c0"/>
        <function-ref name="toggle" scoped="" ref="0x7edb48a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7edb4980"/>
        <function-ref name="get" scoped="" ref="0x7edb4a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edb4b40"/>
        <function-ref name="set" scoped="" ref="0x7edb4c20"/>
        <function-ref name="clr" scoped="" ref="0x7edb4d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7eda26c8" loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7eda26c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eda28a0"/>
        <function-ref name="isInput" scoped="" ref="0x7eda2980"/>
        <function-ref name="toggle" scoped="" ref="0x7eda2a60"/>
        <function-ref name="isOutput" scoped="" ref="0x7eda2b40"/>
        <function-ref name="get" scoped="" ref="0x7eda2c20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eda2d00"/>
        <function-ref name="set" scoped="" ref="0x7eda2de0"/>
        <function-ref name="clr" scoped="" ref="0x7eda2ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7ed91808" loc="79:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7ed91808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed919e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ed91ac0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed91ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed91c80"/>
        <function-ref name="get" scoped="" ref="0x7ed91d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed91e40"/>
        <function-ref name="set" scoped="" ref="0x7ed91f20"/>
        <function-ref name="clr" scoped="" ref="0x7ed90018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7ede0f18" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7ede0f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edd4108"/>
        <function-ref name="isInput" scoped="" ref="0x7edd41e8"/>
        <function-ref name="toggle" scoped="" ref="0x7edd42c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7edd43a8"/>
        <function-ref name="get" scoped="" ref="0x7edd4488"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edd4568"/>
        <function-ref name="set" scoped="" ref="0x7edd4648"/>
        <function-ref name="clr" scoped="" ref="0x7edd4728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7edc3068" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7edc3068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc3240"/>
        <function-ref name="isInput" scoped="" ref="0x7edc3320"/>
        <function-ref name="toggle" scoped="" ref="0x7edc3400"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc34e0"/>
        <function-ref name="get" scoped="" ref="0x7edc35c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc36a0"/>
        <function-ref name="set" scoped="" ref="0x7edc3780"/>
        <function-ref name="clr" scoped="" ref="0x7edc3860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7edb1190" loc="60:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7edb1190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edb1368"/>
        <function-ref name="isInput" scoped="" ref="0x7edb1448"/>
        <function-ref name="toggle" scoped="" ref="0x7edb1528"/>
        <function-ref name="isOutput" scoped="" ref="0x7edb1608"/>
        <function-ref name="get" scoped="" ref="0x7edb16e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edb17c8"/>
        <function-ref name="set" scoped="" ref="0x7edb18a8"/>
        <function-ref name="clr" scoped="" ref="0x7edb1988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7eda0428" loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7eda0428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eda0600"/>
        <function-ref name="isInput" scoped="" ref="0x7eda06e0"/>
        <function-ref name="toggle" scoped="" ref="0x7eda07c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eda08a0"/>
        <function-ref name="get" scoped="" ref="0x7eda0980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eda0a60"/>
        <function-ref name="set" scoped="" ref="0x7eda0b40"/>
        <function-ref name="clr" scoped="" ref="0x7eda0c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7ed81508" loc="88:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7ed81508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed816e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ed817c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed818a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed81980"/>
        <function-ref name="get" scoped="" ref="0x7ed81a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed81b40"/>
        <function-ref name="set" scoped="" ref="0x7ed81c20"/>
        <function-ref name="clr" scoped="" ref="0x7ed81d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7ed737a8" loc="94:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7ed737a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed73980"/>
        <function-ref name="isInput" scoped="" ref="0x7ed73a60"/>
        <function-ref name="toggle" scoped="" ref="0x7ed73b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed73c20"/>
        <function-ref name="get" scoped="" ref="0x7ed73d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed73de0"/>
        <function-ref name="set" scoped="" ref="0x7ed73ec0"/>
        <function-ref name="clr" scoped="" ref="0x7ed72010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7ed947a8" loc="74:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7ed947a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed94980"/>
        <function-ref name="isInput" scoped="" ref="0x7ed94a60"/>
        <function-ref name="toggle" scoped="" ref="0x7ed94b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed94c20"/>
        <function-ref name="get" scoped="" ref="0x7ed94d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed94de0"/>
        <function-ref name="set" scoped="" ref="0x7ed94ec0"/>
        <function-ref name="clr" scoped="" ref="0x7ed93010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7edd3bd8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7edd3bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edd3db0"/>
        <function-ref name="isInput" scoped="" ref="0x7edd3e90"/>
        <function-ref name="toggle" scoped="" ref="0x7edd2010"/>
        <function-ref name="isOutput" scoped="" ref="0x7edd20f0"/>
        <function-ref name="get" scoped="" ref="0x7edd21d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edd22b0"/>
        <function-ref name="set" scoped="" ref="0x7edd2390"/>
        <function-ref name="clr" scoped="" ref="0x7edd2470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7edc2d98" loc="52:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7edc2d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc1010"/>
        <function-ref name="isInput" scoped="" ref="0x7edc10f0"/>
        <function-ref name="toggle" scoped="" ref="0x7edc11d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc12b0"/>
        <function-ref name="get" scoped="" ref="0x7edc1390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc1470"/>
        <function-ref name="set" scoped="" ref="0x7edc1550"/>
        <function-ref name="clr" scoped="" ref="0x7edc1630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7ed74428" loc="92:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7ed74428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed74600"/>
        <function-ref name="isInput" scoped="" ref="0x7ed746e0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed747c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed748a0"/>
        <function-ref name="get" scoped="" ref="0x7ed74980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed74a60"/>
        <function-ref name="set" scoped="" ref="0x7ed74b40"/>
        <function-ref name="clr" scoped="" ref="0x7ed74c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7edc0188" loc="55:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7edc0188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc0360"/>
        <function-ref name="isInput" scoped="" ref="0x7edc0440"/>
        <function-ref name="toggle" scoped="" ref="0x7edc0520"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc0600"/>
        <function-ref name="get" scoped="" ref="0x7edc06e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc07c0"/>
        <function-ref name="set" scoped="" ref="0x7edc08a0"/>
        <function-ref name="clr" scoped="" ref="0x7edc0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7eda3348" loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7eda3348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eda3520"/>
        <function-ref name="isInput" scoped="" ref="0x7eda3600"/>
        <function-ref name="toggle" scoped="" ref="0x7eda36e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eda37c0"/>
        <function-ref name="get" scoped="" ref="0x7eda38a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eda3980"/>
        <function-ref name="set" scoped="" ref="0x7eda3a60"/>
        <function-ref name="clr" scoped="" ref="0x7eda3b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7ed92508" loc="77:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7ed92508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed926e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ed927c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed928a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed92980"/>
        <function-ref name="get" scoped="" ref="0x7ed92a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed92b40"/>
        <function-ref name="set" scoped="" ref="0x7ed92c20"/>
        <function-ref name="clr" scoped="" ref="0x7ed92d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7ed82190" loc="86:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7ed82190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed82368"/>
        <function-ref name="isInput" scoped="" ref="0x7ed82448"/>
        <function-ref name="toggle" scoped="" ref="0x7ed82528"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed82608"/>
        <function-ref name="get" scoped="" ref="0x7ed826e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed827c8"/>
        <function-ref name="set" scoped="" ref="0x7ed828a8"/>
        <function-ref name="clr" scoped="" ref="0x7ed82988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7edd1980" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7edd1980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edd1b58"/>
        <function-ref name="isInput" scoped="" ref="0x7edd1c38"/>
        <function-ref name="toggle" scoped="" ref="0x7edd1d18"/>
        <function-ref name="isOutput" scoped="" ref="0x7edd1df8"/>
        <function-ref name="get" scoped="" ref="0x7edd1ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edd0010"/>
        <function-ref name="set" scoped="" ref="0x7edd00f0"/>
        <function-ref name="clr" scoped="" ref="0x7edd01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7edd0cb8" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7edd0cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edd0e90"/>
        <function-ref name="isInput" scoped="" ref="0x7edc4010"/>
        <function-ref name="toggle" scoped="" ref="0x7edc40f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc41d0"/>
        <function-ref name="get" scoped="" ref="0x7edc42b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc4390"/>
        <function-ref name="set" scoped="" ref="0x7edc4470"/>
        <function-ref name="clr" scoped="" ref="0x7edc4550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7edb4e78" loc="58:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7edb4e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edb2070"/>
        <function-ref name="isInput" scoped="" ref="0x7edb2150"/>
        <function-ref name="toggle" scoped="" ref="0x7edb2230"/>
        <function-ref name="isOutput" scoped="" ref="0x7edb2310"/>
        <function-ref name="get" scoped="" ref="0x7edb23f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edb24d0"/>
        <function-ref name="set" scoped="" ref="0x7edb25b0"/>
        <function-ref name="clr" scoped="" ref="0x7edb2690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7eda1068" loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7eda1068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eda1240"/>
        <function-ref name="isInput" scoped="" ref="0x7eda1320"/>
        <function-ref name="toggle" scoped="" ref="0x7eda1400"/>
        <function-ref name="isOutput" scoped="" ref="0x7eda14e0"/>
        <function-ref name="get" scoped="" ref="0x7eda15c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eda16a0"/>
        <function-ref name="set" scoped="" ref="0x7eda1780"/>
        <function-ref name="clr" scoped="" ref="0x7eda1860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7ed90190" loc="80:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7ed90190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed90368"/>
        <function-ref name="isInput" scoped="" ref="0x7ed90448"/>
        <function-ref name="toggle" scoped="" ref="0x7ed90528"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed90608"/>
        <function-ref name="get" scoped="" ref="0x7ed906e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed907c8"/>
        <function-ref name="set" scoped="" ref="0x7ed908a8"/>
        <function-ref name="clr" scoped="" ref="0x7ed90988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7edd48a0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7edd48a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edd4a78"/>
        <function-ref name="isInput" scoped="" ref="0x7edd4b58"/>
        <function-ref name="toggle" scoped="" ref="0x7edd4c38"/>
        <function-ref name="isOutput" scoped="" ref="0x7edd4d18"/>
        <function-ref name="get" scoped="" ref="0x7edd4df8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edd4ed8"/>
        <function-ref name="set" scoped="" ref="0x7edd3010"/>
        <function-ref name="clr" scoped="" ref="0x7edd30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7edc39d8" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7edc39d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc3c30"/>
        <function-ref name="isInput" scoped="" ref="0x7edc3d10"/>
        <function-ref name="toggle" scoped="" ref="0x7edc3df0"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc3ed0"/>
        <function-ref name="get" scoped="" ref="0x7edc2010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc20f0"/>
        <function-ref name="set" scoped="" ref="0x7edc21d0"/>
        <function-ref name="clr" scoped="" ref="0x7edc22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7edb1b00" loc="61:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7edb1b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edb1cd8"/>
        <function-ref name="isInput" scoped="" ref="0x7edb1db8"/>
        <function-ref name="toggle" scoped="" ref="0x7edb1e98"/>
        <function-ref name="isOutput" scoped="" ref="0x7edb0010"/>
        <function-ref name="get" scoped="" ref="0x7edb00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edb01d0"/>
        <function-ref name="set" scoped="" ref="0x7edb02b0"/>
        <function-ref name="clr" scoped="" ref="0x7edb0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7ed81e78" loc="89:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7ed81e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed80070"/>
        <function-ref name="isInput" scoped="" ref="0x7ed80150"/>
        <function-ref name="toggle" scoped="" ref="0x7ed80230"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed80310"/>
        <function-ref name="get" scoped="" ref="0x7ed803f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed804d0"/>
        <function-ref name="set" scoped="" ref="0x7ed805b0"/>
        <function-ref name="clr" scoped="" ref="0x7ed80690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7edb0e78" loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7edb0e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eda4208"/>
        <function-ref name="isInput" scoped="" ref="0x7eda42e8"/>
        <function-ref name="toggle" scoped="" ref="0x7eda43c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7eda44a8"/>
        <function-ref name="get" scoped="" ref="0x7eda4588"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eda4668"/>
        <function-ref name="set" scoped="" ref="0x7eda4748"/>
        <function-ref name="clr" scoped="" ref="0x7eda4828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7ed93188" loc="75:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7ed93188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed93360"/>
        <function-ref name="isInput" scoped="" ref="0x7ed93440"/>
        <function-ref name="toggle" scoped="" ref="0x7ed93520"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed93600"/>
        <function-ref name="get" scoped="" ref="0x7ed936e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed937c0"/>
        <function-ref name="set" scoped="" ref="0x7ed938a0"/>
        <function-ref name="clr" scoped="" ref="0x7ed93980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7ed84e78" loc="84:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7ed84e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed83070"/>
        <function-ref name="isInput" scoped="" ref="0x7ed83150"/>
        <function-ref name="toggle" scoped="" ref="0x7ed83230"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed83310"/>
        <function-ref name="get" scoped="" ref="0x7ed833f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed834d0"/>
        <function-ref name="set" scoped="" ref="0x7ed835b0"/>
        <function-ref name="clr" scoped="" ref="0x7ed83690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7ed72188" loc="95:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7ed72188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed72360"/>
        <function-ref name="isInput" scoped="" ref="0x7ed72440"/>
        <function-ref name="toggle" scoped="" ref="0x7ed72520"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed72600"/>
        <function-ref name="get" scoped="" ref="0x7ed726e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed727c0"/>
        <function-ref name="set" scoped="" ref="0x7ed728a0"/>
        <function-ref name="clr" scoped="" ref="0x7ed72980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7edd25e8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7edd25e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edd27c0"/>
        <function-ref name="isInput" scoped="" ref="0x7edd28a0"/>
        <function-ref name="toggle" scoped="" ref="0x7edd2980"/>
        <function-ref name="isOutput" scoped="" ref="0x7edd2a60"/>
        <function-ref name="get" scoped="" ref="0x7edd2b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edd2c20"/>
        <function-ref name="set" scoped="" ref="0x7edd2d00"/>
        <function-ref name="clr" scoped="" ref="0x7edd2de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7edc17a8" loc="53:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7edc17a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc1980"/>
        <function-ref name="isInput" scoped="" ref="0x7edc1a60"/>
        <function-ref name="toggle" scoped="" ref="0x7edc1b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc1c20"/>
        <function-ref name="get" scoped="" ref="0x7edc1d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc1de0"/>
        <function-ref name="set" scoped="" ref="0x7edc1ec0"/>
        <function-ref name="clr" scoped="" ref="0x7edc0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7ed90b00" loc="82:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7ed90b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed90cd8"/>
        <function-ref name="isInput" scoped="" ref="0x7ed90db8"/>
        <function-ref name="toggle" scoped="" ref="0x7ed90e98"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed84010"/>
        <function-ref name="get" scoped="" ref="0x7ed840f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed841d0"/>
        <function-ref name="set" scoped="" ref="0x7ed842b0"/>
        <function-ref name="clr" scoped="" ref="0x7ed84390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7edc0af8" loc="56:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7edc0af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc0cd0"/>
        <function-ref name="isInput" scoped="" ref="0x7edc0db0"/>
        <function-ref name="toggle" scoped="" ref="0x7edc0e90"/>
        <function-ref name="isOutput" scoped="" ref="0x7edb4010"/>
        <function-ref name="get" scoped="" ref="0x7edb40f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edb41d0"/>
        <function-ref name="set" scoped="" ref="0x7edb42b0"/>
        <function-ref name="clr" scoped="" ref="0x7edb4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7eda3cb8" loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7eda3cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eda3e90"/>
        <function-ref name="isInput" scoped="" ref="0x7eda2010"/>
        <function-ref name="toggle" scoped="" ref="0x7eda20f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eda21d0"/>
        <function-ref name="get" scoped="" ref="0x7eda22b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eda2390"/>
        <function-ref name="set" scoped="" ref="0x7eda2470"/>
        <function-ref name="clr" scoped="" ref="0x7eda2550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7ed92e78" loc="78:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7ed92e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed91070"/>
        <function-ref name="isInput" scoped="" ref="0x7ed91150"/>
        <function-ref name="toggle" scoped="" ref="0x7ed91230"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed91310"/>
        <function-ref name="get" scoped="" ref="0x7ed913f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed914d0"/>
        <function-ref name="set" scoped="" ref="0x7ed915b0"/>
        <function-ref name="clr" scoped="" ref="0x7ed91690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7ed82b00" loc="87:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7ed82b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed82cd8"/>
        <function-ref name="isInput" scoped="" ref="0x7ed82db8"/>
        <function-ref name="toggle" scoped="" ref="0x7ed82e98"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed81010"/>
        <function-ref name="get" scoped="" ref="0x7ed810f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed811d0"/>
        <function-ref name="set" scoped="" ref="0x7ed812b0"/>
        <function-ref name="clr" scoped="" ref="0x7ed81390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7ede05a8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7ede05a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ede0780"/>
        <function-ref name="isInput" scoped="" ref="0x7ede0860"/>
        <function-ref name="toggle" scoped="" ref="0x7ede0940"/>
        <function-ref name="isOutput" scoped="" ref="0x7ede0a20"/>
        <function-ref name="get" scoped="" ref="0x7ede0b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ede0be0"/>
        <function-ref name="set" scoped="" ref="0x7ede0cc0"/>
        <function-ref name="clr" scoped="" ref="0x7ede0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7edc46c8" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7edc46c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc48a0"/>
        <function-ref name="isInput" scoped="" ref="0x7edc4980"/>
        <function-ref name="toggle" scoped="" ref="0x7edc4a60"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc4b40"/>
        <function-ref name="get" scoped="" ref="0x7edc4c20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc4d00"/>
        <function-ref name="set" scoped="" ref="0x7edc4de0"/>
        <function-ref name="clr" scoped="" ref="0x7edc4ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7edb2808" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7edb2808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edb29e0"/>
        <function-ref name="isInput" scoped="" ref="0x7edb2ac0"/>
        <function-ref name="toggle" scoped="" ref="0x7edb2ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7edb2c80"/>
        <function-ref name="get" scoped="" ref="0x7edb2d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edb2e40"/>
        <function-ref name="set" scoped="" ref="0x7edb2f20"/>
        <function-ref name="clr" scoped="" ref="0x7edb1018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7eda19d8" loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7eda19d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eda1bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7eda1c90"/>
        <function-ref name="toggle" scoped="" ref="0x7eda1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7eda1e50"/>
        <function-ref name="get" scoped="" ref="0x7eda0010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eda00f0"/>
        <function-ref name="set" scoped="" ref="0x7eda01d0"/>
        <function-ref name="clr" scoped="" ref="0x7eda02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7ed74d98" loc="93:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7ed74d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed73010"/>
        <function-ref name="isInput" scoped="" ref="0x7ed730f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed731d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed732b0"/>
        <function-ref name="get" scoped="" ref="0x7ed73390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed73470"/>
        <function-ref name="set" scoped="" ref="0x7ed73550"/>
        <function-ref name="clr" scoped="" ref="0x7ed73630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7eda0d98" loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7eda0d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed94010"/>
        <function-ref name="isInput" scoped="" ref="0x7ed940f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed941d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed942b0"/>
        <function-ref name="get" scoped="" ref="0x7ed94390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed94470"/>
        <function-ref name="set" scoped="" ref="0x7ed94550"/>
        <function-ref name="clr" scoped="" ref="0x7ed94630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7edb0508" loc="62:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7edb0508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edb06e0"/>
        <function-ref name="isInput" scoped="" ref="0x7edb07c0"/>
        <function-ref name="toggle" scoped="" ref="0x7edb08a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7edb0980"/>
        <function-ref name="get" scoped="" ref="0x7edb0a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edb0b40"/>
        <function-ref name="set" scoped="" ref="0x7edb0c20"/>
        <function-ref name="clr" scoped="" ref="0x7edb0d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7edd3268" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7edd3268"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edd3440"/>
        <function-ref name="isInput" scoped="" ref="0x7edd3520"/>
        <function-ref name="toggle" scoped="" ref="0x7edd3600"/>
        <function-ref name="isOutput" scoped="" ref="0x7edd36e0"/>
        <function-ref name="get" scoped="" ref="0x7edd37c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edd38a0"/>
        <function-ref name="set" scoped="" ref="0x7edd3980"/>
        <function-ref name="clr" scoped="" ref="0x7edd3a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7edc2428" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7edc2428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc2600"/>
        <function-ref name="isInput" scoped="" ref="0x7edc26e0"/>
        <function-ref name="toggle" scoped="" ref="0x7edc27c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc28a0"/>
        <function-ref name="get" scoped="" ref="0x7edc2980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc2a60"/>
        <function-ref name="set" scoped="" ref="0x7edc2b40"/>
        <function-ref name="clr" scoped="" ref="0x7edc2c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7ecf1030" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7ecf1030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecf1208"/>
        <function-ref name="isInput" scoped="" ref="0x7ecf12e8"/>
        <function-ref name="toggle" scoped="" ref="0x7ecf13c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecf14a8"/>
        <function-ref name="get" scoped="" ref="0x7ecf1588"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecf1668"/>
        <function-ref name="set" scoped="" ref="0x7ecf1748"/>
        <function-ref name="clr" scoped="" ref="0x7ecf1828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7ece4c88" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7ece4c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ece4e60"/>
        <function-ref name="isInput" scoped="" ref="0x7ece3010"/>
        <function-ref name="toggle" scoped="" ref="0x7ece30f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ece31d0"/>
        <function-ref name="get" scoped="" ref="0x7ece32b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ece3390"/>
        <function-ref name="set" scoped="" ref="0x7ece3470"/>
        <function-ref name="clr" scoped="" ref="0x7ece3550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7ecf3d18" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7ecf3d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecf3ef0"/>
        <function-ref name="isInput" scoped="" ref="0x7ecf2010"/>
        <function-ref name="toggle" scoped="" ref="0x7ecf20f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecf21d0"/>
        <function-ref name="get" scoped="" ref="0x7ecf22b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecf2390"/>
        <function-ref name="set" scoped="" ref="0x7ecf2470"/>
        <function-ref name="clr" scoped="" ref="0x7ecf2550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7ecf1988" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7ecf1988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecf1b60"/>
        <function-ref name="isInput" scoped="" ref="0x7ecf1c40"/>
        <function-ref name="toggle" scoped="" ref="0x7ecf1d20"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecf1e00"/>
        <function-ref name="get" scoped="" ref="0x7ecf1ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ece4010"/>
        <function-ref name="set" scoped="" ref="0x7ece40f0"/>
        <function-ref name="clr" scoped="" ref="0x7ece41d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7ece36b0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7ece36b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ece3888"/>
        <function-ref name="isInput" scoped="" ref="0x7ece3968"/>
        <function-ref name="toggle" scoped="" ref="0x7ece3a48"/>
        <function-ref name="isOutput" scoped="" ref="0x7ece3b28"/>
        <function-ref name="get" scoped="" ref="0x7ece3c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ece3ce8"/>
        <function-ref name="set" scoped="" ref="0x7ece3dc8"/>
        <function-ref name="clr" scoped="" ref="0x7ece3ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7ecf26b0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7ecf26b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecf2888"/>
        <function-ref name="isInput" scoped="" ref="0x7ecf2968"/>
        <function-ref name="toggle" scoped="" ref="0x7ecf2a48"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecf2b28"/>
        <function-ref name="get" scoped="" ref="0x7ecf2c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecf2ce8"/>
        <function-ref name="set" scoped="" ref="0x7ecf2dc8"/>
        <function-ref name="clr" scoped="" ref="0x7ecf2ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7ece4330" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7ece4330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ece4508"/>
        <function-ref name="isInput" scoped="" ref="0x7ece45e8"/>
        <function-ref name="toggle" scoped="" ref="0x7ece46c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ece47a8"/>
        <function-ref name="get" scoped="" ref="0x7ece4888"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ece4968"/>
        <function-ref name="set" scoped="" ref="0x7ece4a48"/>
        <function-ref name="clr" scoped="" ref="0x7ece4b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7ece2030" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7ece2030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ece2208"/>
        <function-ref name="isInput" scoped="" ref="0x7ece22e8"/>
        <function-ref name="toggle" scoped="" ref="0x7ece23c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ece24a8"/>
        <function-ref name="get" scoped="" ref="0x7ece2588"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ece2668"/>
        <function-ref name="set" scoped="" ref="0x7ece2748"/>
        <function-ref name="clr" scoped="" ref="0x7ece2828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7db8f010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7db8f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7db8f1e8"/>
        <function-ref name="isInput" scoped="" ref="0x7db8f2c8"/>
        <function-ref name="toggle" scoped="" ref="0x7db8f3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7db8f488"/>
        <function-ref name="get" scoped="" ref="0x7db8f568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7db8f648"/>
        <function-ref name="set" scoped="" ref="0x7db8f728"/>
        <function-ref name="clr" scoped="" ref="0x7db8f808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7db8e9e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7db8e9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7db8ebc0"/>
        <function-ref name="isInput" scoped="" ref="0x7db8eca0"/>
        <function-ref name="toggle" scoped="" ref="0x7db8ed80"/>
        <function-ref name="isOutput" scoped="" ref="0x7db8ee60"/>
        <function-ref name="get" scoped="" ref="0x7db8d010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7db8d0f0"/>
        <function-ref name="set" scoped="" ref="0x7db8d1d0"/>
        <function-ref name="clr" scoped="" ref="0x7db8d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7db8c538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7db8c538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7db8c710"/>
        <function-ref name="isInput" scoped="" ref="0x7db8c7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7db8c8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7db8c9b0"/>
        <function-ref name="get" scoped="" ref="0x7db8ca90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7db8cb70"/>
        <function-ref name="set" scoped="" ref="0x7db8cc50"/>
        <function-ref name="clr" scoped="" ref="0x7db8cd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7db8a010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7db8a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7db8a1e8"/>
        <function-ref name="isInput" scoped="" ref="0x7db8a2c8"/>
        <function-ref name="toggle" scoped="" ref="0x7db8a3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7db8a488"/>
        <function-ref name="get" scoped="" ref="0x7db8a568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7db8a648"/>
        <function-ref name="set" scoped="" ref="0x7db8a728"/>
        <function-ref name="clr" scoped="" ref="0x7db8a808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7db899e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7db899e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7db89bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7db89ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7db89d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7db89e60"/>
        <function-ref name="get" scoped="" ref="0x7db87010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7db870f0"/>
        <function-ref name="set" scoped="" ref="0x7db871d0"/>
        <function-ref name="clr" scoped="" ref="0x7db872b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7db86538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7db86538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7db86710"/>
        <function-ref name="isInput" scoped="" ref="0x7db867f0"/>
        <function-ref name="toggle" scoped="" ref="0x7db868d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7db869b0"/>
        <function-ref name="get" scoped="" ref="0x7db86a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7db86b70"/>
        <function-ref name="set" scoped="" ref="0x7db86c50"/>
        <function-ref name="clr" scoped="" ref="0x7db86d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7db84010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7db84010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7db841e8"/>
        <function-ref name="isInput" scoped="" ref="0x7db842c8"/>
        <function-ref name="toggle" scoped="" ref="0x7db843a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7db84488"/>
        <function-ref name="get" scoped="" ref="0x7db84568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7db84648"/>
        <function-ref name="set" scoped="" ref="0x7db84728"/>
        <function-ref name="clr" scoped="" ref="0x7db84808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7db839e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7db839e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7db83bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7db83ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7db83d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7db83e60"/>
        <function-ref name="get" scoped="" ref="0x7db82010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7db820f0"/>
        <function-ref name="set" scoped="" ref="0x7db821d0"/>
        <function-ref name="clr" scoped="" ref="0x7db822b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7ecd36b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7ecd36b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecd3888"/>
        <function-ref name="isInput" scoped="" ref="0x7ecd3968"/>
        <function-ref name="toggle" scoped="" ref="0x7ecd3a48"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecd3b28"/>
        <function-ref name="get" scoped="" ref="0x7ecd3c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecd3ce8"/>
        <function-ref name="set" scoped="" ref="0x7ecd3dc8"/>
        <function-ref name="clr" scoped="" ref="0x7ecd3ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7ecd1330" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7ecd1330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecd1508"/>
        <function-ref name="isInput" scoped="" ref="0x7ecd15e8"/>
        <function-ref name="toggle" scoped="" ref="0x7ecd16c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecd17a8"/>
        <function-ref name="get" scoped="" ref="0x7ecd1888"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecd1968"/>
        <function-ref name="set" scoped="" ref="0x7ecd1a48"/>
        <function-ref name="clr" scoped="" ref="0x7ecd1b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7ecd43a0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7ecd43a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecd4578"/>
        <function-ref name="isInput" scoped="" ref="0x7ecd4658"/>
        <function-ref name="toggle" scoped="" ref="0x7ecd4738"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecd4818"/>
        <function-ref name="get" scoped="" ref="0x7ecd48f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecd49d8"/>
        <function-ref name="set" scoped="" ref="0x7ecd4ab8"/>
        <function-ref name="clr" scoped="" ref="0x7ecd4b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7ecd2030" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7ecd2030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecd2208"/>
        <function-ref name="isInput" scoped="" ref="0x7ecd22e8"/>
        <function-ref name="toggle" scoped="" ref="0x7ecd23c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecd24a8"/>
        <function-ref name="get" scoped="" ref="0x7ecd2588"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecd2668"/>
        <function-ref name="set" scoped="" ref="0x7ecd2748"/>
        <function-ref name="clr" scoped="" ref="0x7ecd2828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7ecd1c88" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7ecd1c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecd1e60"/>
        <function-ref name="isInput" scoped="" ref="0x7ecd0010"/>
        <function-ref name="toggle" scoped="" ref="0x7ecd00f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecd01d0"/>
        <function-ref name="get" scoped="" ref="0x7ecd02b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecd0390"/>
        <function-ref name="set" scoped="" ref="0x7ecd0470"/>
        <function-ref name="clr" scoped="" ref="0x7ecd0550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7ecd4cf8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7ecd4cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecd4ed0"/>
        <function-ref name="isInput" scoped="" ref="0x7ecd3010"/>
        <function-ref name="toggle" scoped="" ref="0x7ecd30f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecd31d0"/>
        <function-ref name="get" scoped="" ref="0x7ecd32b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecd3390"/>
        <function-ref name="set" scoped="" ref="0x7ecd3470"/>
        <function-ref name="clr" scoped="" ref="0x7ecd3550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7ecd2988" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7ecd2988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecd2b60"/>
        <function-ref name="isInput" scoped="" ref="0x7ecd2c40"/>
        <function-ref name="toggle" scoped="" ref="0x7ecd2d20"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecd2e00"/>
        <function-ref name="get" scoped="" ref="0x7ecd2ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecd1010"/>
        <function-ref name="set" scoped="" ref="0x7ecd10f0"/>
        <function-ref name="clr" scoped="" ref="0x7ecd11d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7ecd06b0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7ecd06b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecd0888"/>
        <function-ref name="isInput" scoped="" ref="0x7ecd0968"/>
        <function-ref name="toggle" scoped="" ref="0x7ecd0a48"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecd0b28"/>
        <function-ref name="get" scoped="" ref="0x7ecd0c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecd0ce8"/>
        <function-ref name="set" scoped="" ref="0x7ecd0dc8"/>
        <function-ref name="clr" scoped="" ref="0x7ecd0ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7db417f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7db417f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7db419d0"/>
        <function-ref name="isInput" scoped="" ref="0x7db41ab0"/>
        <function-ref name="toggle" scoped="" ref="0x7db41b90"/>
        <function-ref name="isOutput" scoped="" ref="0x7db41c70"/>
        <function-ref name="get" scoped="" ref="0x7db41d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7db41e30"/>
        <function-ref name="set" scoped="" ref="0x7db41f10"/>
        <function-ref name="clr" scoped="" ref="0x7db40010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7db3f228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7db3f228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7db3f400"/>
        <function-ref name="isInput" scoped="" ref="0x7db3f4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7db3f5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7db3f6a0"/>
        <function-ref name="get" scoped="" ref="0x7db3f780"/>
        <function-ref name="makeOutput" scoped="" ref="0x7db3f860"/>
        <function-ref name="set" scoped="" ref="0x7db3f940"/>
        <function-ref name="clr" scoped="" ref="0x7db3fa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7db3ec08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7db3ec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7db3ede0"/>
        <function-ref name="isInput" scoped="" ref="0x7db3eec0"/>
        <function-ref name="toggle" scoped="" ref="0x7db3d010"/>
        <function-ref name="isOutput" scoped="" ref="0x7db3d0f0"/>
        <function-ref name="get" scoped="" ref="0x7db3d1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7db3d2b0"/>
        <function-ref name="set" scoped="" ref="0x7db3d390"/>
        <function-ref name="clr" scoped="" ref="0x7db3d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7db3c6c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7db3c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7db3c898"/>
        <function-ref name="isInput" scoped="" ref="0x7db3c978"/>
        <function-ref name="toggle" scoped="" ref="0x7db3ca58"/>
        <function-ref name="isOutput" scoped="" ref="0x7db3cb38"/>
        <function-ref name="get" scoped="" ref="0x7db3cc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7db3ccf8"/>
        <function-ref name="set" scoped="" ref="0x7db3cdd8"/>
        <function-ref name="clr" scoped="" ref="0x7db3ceb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7db3a0b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7db3a0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7db3a288"/>
        <function-ref name="isInput" scoped="" ref="0x7db3a368"/>
        <function-ref name="toggle" scoped="" ref="0x7db3a448"/>
        <function-ref name="isOutput" scoped="" ref="0x7db3a528"/>
        <function-ref name="get" scoped="" ref="0x7db3a608"/>
        <function-ref name="makeOutput" scoped="" ref="0x7db3a6e8"/>
        <function-ref name="set" scoped="" ref="0x7db3a7c8"/>
        <function-ref name="clr" scoped="" ref="0x7db3a8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7db39a88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7db39a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7db39c60"/>
        <function-ref name="isInput" scoped="" ref="0x7db39d40"/>
        <function-ref name="toggle" scoped="" ref="0x7db39e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7db39f00"/>
        <function-ref name="get" scoped="" ref="0x7db38010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7db380f0"/>
        <function-ref name="set" scoped="" ref="0x7db381d0"/>
        <function-ref name="clr" scoped="" ref="0x7db382b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7db37538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7db37538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7db37710"/>
        <function-ref name="isInput" scoped="" ref="0x7db377f0"/>
        <function-ref name="toggle" scoped="" ref="0x7db378d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7db379b0"/>
        <function-ref name="get" scoped="" ref="0x7db37a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7db37b70"/>
        <function-ref name="set" scoped="" ref="0x7db37c50"/>
        <function-ref name="clr" scoped="" ref="0x7db37d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7db35010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7db35010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7db351e8"/>
        <function-ref name="isInput" scoped="" ref="0x7db352c8"/>
        <function-ref name="toggle" scoped="" ref="0x7db353a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7db35488"/>
        <function-ref name="get" scoped="" ref="0x7db35568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7db35648"/>
        <function-ref name="set" scoped="" ref="0x7db35728"/>
        <function-ref name="clr" scoped="" ref="0x7db35808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7ecc0f28" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7ecc0f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecb4110"/>
        <function-ref name="isInput" scoped="" ref="0x7ecb41f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ecb42d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecb43b0"/>
        <function-ref name="get" scoped="" ref="0x7ecb4490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecb4570"/>
        <function-ref name="set" scoped="" ref="0x7ecb4650"/>
        <function-ref name="clr" scoped="" ref="0x7ecb4730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7ecb3ba8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7ecb3ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecb3d80"/>
        <function-ref name="isInput" scoped="" ref="0x7ecb3e60"/>
        <function-ref name="toggle" scoped="" ref="0x7ecb2010"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecb20f0"/>
        <function-ref name="get" scoped="" ref="0x7ecb21d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecb22b0"/>
        <function-ref name="set" scoped="" ref="0x7ecb2390"/>
        <function-ref name="clr" scoped="" ref="0x7ecb2470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7ecc1bc0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7ecc1bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecc1d98"/>
        <function-ref name="isInput" scoped="" ref="0x7ecc1e78"/>
        <function-ref name="toggle" scoped="" ref="0x7ecc0010"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecc00f0"/>
        <function-ref name="get" scoped="" ref="0x7ecc01d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecc02b0"/>
        <function-ref name="set" scoped="" ref="0x7ecc0390"/>
        <function-ref name="clr" scoped="" ref="0x7ecc0470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7ecb4890" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7ecb4890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecb4a68"/>
        <function-ref name="isInput" scoped="" ref="0x7ecb4b48"/>
        <function-ref name="toggle" scoped="" ref="0x7ecb4c28"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecb4d08"/>
        <function-ref name="get" scoped="" ref="0x7ecb4de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecb4ec8"/>
        <function-ref name="set" scoped="" ref="0x7ecb3010"/>
        <function-ref name="clr" scoped="" ref="0x7ecb30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7ecb25d0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7ecb25d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecb27a8"/>
        <function-ref name="isInput" scoped="" ref="0x7ecb2888"/>
        <function-ref name="toggle" scoped="" ref="0x7ecb2968"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecb2a48"/>
        <function-ref name="get" scoped="" ref="0x7ecb2b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecb2c08"/>
        <function-ref name="set" scoped="" ref="0x7ecb2ce8"/>
        <function-ref name="clr" scoped="" ref="0x7ecb2dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7ecc05d0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7ecc05d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecc07a8"/>
        <function-ref name="isInput" scoped="" ref="0x7ecc0888"/>
        <function-ref name="toggle" scoped="" ref="0x7ecc0968"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecc0a48"/>
        <function-ref name="get" scoped="" ref="0x7ecc0b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecc0c08"/>
        <function-ref name="set" scoped="" ref="0x7ecc0ce8"/>
        <function-ref name="clr" scoped="" ref="0x7ecc0dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7ecb3250" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7ecb3250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecb3428"/>
        <function-ref name="isInput" scoped="" ref="0x7ecb3508"/>
        <function-ref name="toggle" scoped="" ref="0x7ecb35e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecb36c8"/>
        <function-ref name="get" scoped="" ref="0x7ecb37a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecb3888"/>
        <function-ref name="set" scoped="" ref="0x7ecb3968"/>
        <function-ref name="clr" scoped="" ref="0x7ecb3a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7ecb2f28" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7ecb2f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecb1110"/>
        <function-ref name="isInput" scoped="" ref="0x7ecb11f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ecb12d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecb13b0"/>
        <function-ref name="get" scoped="" ref="0x7ecb1490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecb1570"/>
        <function-ref name="set" scoped="" ref="0x7ecb1650"/>
        <function-ref name="clr" scoped="" ref="0x7ecb1730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7db05d08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7db05d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7db05ee0"/>
        <function-ref name="isInput" scoped="" ref="0x7db02010"/>
        <function-ref name="toggle" scoped="" ref="0x7db020f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7db021d0"/>
        <function-ref name="get" scoped="" ref="0x7db022b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7db02390"/>
        <function-ref name="set" scoped="" ref="0x7db02470"/>
        <function-ref name="clr" scoped="" ref="0x7db02550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7db01718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7db01718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7db018f0"/>
        <function-ref name="isInput" scoped="" ref="0x7db019d0"/>
        <function-ref name="toggle" scoped="" ref="0x7db01ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x7db01b90"/>
        <function-ref name="get" scoped="" ref="0x7db01c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7db01d50"/>
        <function-ref name="set" scoped="" ref="0x7db01e30"/>
        <function-ref name="clr" scoped="" ref="0x7db01f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7daff0f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7daff0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7daff2d0"/>
        <function-ref name="isInput" scoped="" ref="0x7daff3b0"/>
        <function-ref name="toggle" scoped="" ref="0x7daff490"/>
        <function-ref name="isOutput" scoped="" ref="0x7daff570"/>
        <function-ref name="get" scoped="" ref="0x7daff650"/>
        <function-ref name="makeOutput" scoped="" ref="0x7daff730"/>
        <function-ref name="set" scoped="" ref="0x7daff810"/>
        <function-ref name="clr" scoped="" ref="0x7daff8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dafeac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dafeac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dafeca0"/>
        <function-ref name="isInput" scoped="" ref="0x7dafed80"/>
        <function-ref name="toggle" scoped="" ref="0x7dafee60"/>
        <function-ref name="isOutput" scoped="" ref="0x7dafd010"/>
        <function-ref name="get" scoped="" ref="0x7dafd0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dafd1d0"/>
        <function-ref name="set" scoped="" ref="0x7dafd2b0"/>
        <function-ref name="clr" scoped="" ref="0x7dafd390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dafc570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dafc570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dafc748"/>
        <function-ref name="isInput" scoped="" ref="0x7dafc828"/>
        <function-ref name="toggle" scoped="" ref="0x7dafc908"/>
        <function-ref name="isOutput" scoped="" ref="0x7dafc9e8"/>
        <function-ref name="get" scoped="" ref="0x7dafcac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dafcba8"/>
        <function-ref name="set" scoped="" ref="0x7dafcc88"/>
        <function-ref name="clr" scoped="" ref="0x7dafcd68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dafa010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dafa010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dafa1e8"/>
        <function-ref name="isInput" scoped="" ref="0x7dafa2c8"/>
        <function-ref name="toggle" scoped="" ref="0x7dafa3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7dafa488"/>
        <function-ref name="get" scoped="" ref="0x7dafa568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dafa648"/>
        <function-ref name="set" scoped="" ref="0x7dafa728"/>
        <function-ref name="clr" scoped="" ref="0x7dafa808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7daf99e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7daf99e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7daf9bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7daf9ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7daf9d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7daf9e60"/>
        <function-ref name="get" scoped="" ref="0x7daf8010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7daf80f0"/>
        <function-ref name="set" scoped="" ref="0x7daf81d0"/>
        <function-ref name="clr" scoped="" ref="0x7daf82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7daf7538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7daf7538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7daf7710"/>
        <function-ref name="isInput" scoped="" ref="0x7daf77f0"/>
        <function-ref name="toggle" scoped="" ref="0x7daf78d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7daf79b0"/>
        <function-ref name="get" scoped="" ref="0x7daf7a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7daf7b70"/>
        <function-ref name="set" scoped="" ref="0x7daf7c50"/>
        <function-ref name="clr" scoped="" ref="0x7daf7d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7eca15d0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7eca15d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eca17a8"/>
        <function-ref name="isInput" scoped="" ref="0x7eca1888"/>
        <function-ref name="toggle" scoped="" ref="0x7eca1968"/>
        <function-ref name="isOutput" scoped="" ref="0x7eca1a48"/>
        <function-ref name="get" scoped="" ref="0x7eca1b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eca1c08"/>
        <function-ref name="set" scoped="" ref="0x7eca1ce8"/>
        <function-ref name="clr" scoped="" ref="0x7eca1dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7ec94250" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7ec94250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec94428"/>
        <function-ref name="isInput" scoped="" ref="0x7ec94508"/>
        <function-ref name="toggle" scoped="" ref="0x7ec945e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec946c8"/>
        <function-ref name="get" scoped="" ref="0x7ec947a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec94888"/>
        <function-ref name="set" scoped="" ref="0x7ec94968"/>
        <function-ref name="clr" scoped="" ref="0x7ec94a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7eca22a0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7eca22a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eca2478"/>
        <function-ref name="isInput" scoped="" ref="0x7eca2558"/>
        <function-ref name="toggle" scoped="" ref="0x7eca2638"/>
        <function-ref name="isOutput" scoped="" ref="0x7eca2718"/>
        <function-ref name="get" scoped="" ref="0x7eca27f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eca28d8"/>
        <function-ref name="set" scoped="" ref="0x7eca29b8"/>
        <function-ref name="clr" scoped="" ref="0x7eca2a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7eca1f28" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7eca1f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eca0110"/>
        <function-ref name="isInput" scoped="" ref="0x7eca01f0"/>
        <function-ref name="toggle" scoped="" ref="0x7eca02d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eca03b0"/>
        <function-ref name="get" scoped="" ref="0x7eca0490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eca0570"/>
        <function-ref name="set" scoped="" ref="0x7eca0650"/>
        <function-ref name="clr" scoped="" ref="0x7eca0730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7ec94ba8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7ec94ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec94d80"/>
        <function-ref name="isInput" scoped="" ref="0x7ec94e60"/>
        <function-ref name="toggle" scoped="" ref="0x7ec93010"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec930f0"/>
        <function-ref name="get" scoped="" ref="0x7ec931d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec932b0"/>
        <function-ref name="set" scoped="" ref="0x7ec93390"/>
        <function-ref name="clr" scoped="" ref="0x7ec93470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7eca2bf8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7eca2bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eca2dd0"/>
        <function-ref name="isInput" scoped="" ref="0x7eca2eb0"/>
        <function-ref name="toggle" scoped="" ref="0x7eca1010"/>
        <function-ref name="isOutput" scoped="" ref="0x7eca10f0"/>
        <function-ref name="get" scoped="" ref="0x7eca11d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eca12b0"/>
        <function-ref name="set" scoped="" ref="0x7eca1390"/>
        <function-ref name="clr" scoped="" ref="0x7eca1470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7eca0890" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7eca0890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eca0a68"/>
        <function-ref name="isInput" scoped="" ref="0x7eca0b48"/>
        <function-ref name="toggle" scoped="" ref="0x7eca0c28"/>
        <function-ref name="isOutput" scoped="" ref="0x7eca0d08"/>
        <function-ref name="get" scoped="" ref="0x7eca0de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eca0ec8"/>
        <function-ref name="set" scoped="" ref="0x7ec94010"/>
        <function-ref name="clr" scoped="" ref="0x7ec940f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7ec935d0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7ec935d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec937a8"/>
        <function-ref name="isInput" scoped="" ref="0x7ec93888"/>
        <function-ref name="toggle" scoped="" ref="0x7ec93968"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec93a48"/>
        <function-ref name="get" scoped="" ref="0x7ec93b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec93c08"/>
        <function-ref name="set" scoped="" ref="0x7ec93ce8"/>
        <function-ref name="clr" scoped="" ref="0x7ec93dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dac72b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dac72b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dac7488"/>
        <function-ref name="isInput" scoped="" ref="0x7dac7568"/>
        <function-ref name="toggle" scoped="" ref="0x7dac7648"/>
        <function-ref name="isOutput" scoped="" ref="0x7dac7728"/>
        <function-ref name="get" scoped="" ref="0x7dac7808"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dac78e8"/>
        <function-ref name="set" scoped="" ref="0x7dac79c8"/>
        <function-ref name="clr" scoped="" ref="0x7dac7aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dac6c78" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dac6c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dac6e50"/>
        <function-ref name="isInput" scoped="" ref="0x7dac5010"/>
        <function-ref name="toggle" scoped="" ref="0x7dac50f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dac51d0"/>
        <function-ref name="get" scoped="" ref="0x7dac52b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dac5390"/>
        <function-ref name="set" scoped="" ref="0x7dac5470"/>
        <function-ref name="clr" scoped="" ref="0x7dac5550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dac4718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dac4718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dac48f0"/>
        <function-ref name="isInput" scoped="" ref="0x7dac49d0"/>
        <function-ref name="toggle" scoped="" ref="0x7dac4ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dac4b90"/>
        <function-ref name="get" scoped="" ref="0x7dac4c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dac4d50"/>
        <function-ref name="set" scoped="" ref="0x7dac4e30"/>
        <function-ref name="clr" scoped="" ref="0x7dac4f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dac20f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dac20f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dac22d0"/>
        <function-ref name="isInput" scoped="" ref="0x7dac23b0"/>
        <function-ref name="toggle" scoped="" ref="0x7dac2490"/>
        <function-ref name="isOutput" scoped="" ref="0x7dac2570"/>
        <function-ref name="get" scoped="" ref="0x7dac2650"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dac2730"/>
        <function-ref name="set" scoped="" ref="0x7dac2810"/>
        <function-ref name="clr" scoped="" ref="0x7dac28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dac1ac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dac1ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dac1ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7dac1d80"/>
        <function-ref name="toggle" scoped="" ref="0x7dac1e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7dabf010"/>
        <function-ref name="get" scoped="" ref="0x7dabf0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dabf1d0"/>
        <function-ref name="set" scoped="" ref="0x7dabf2b0"/>
        <function-ref name="clr" scoped="" ref="0x7dabf390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dabe570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dabe570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dabe748"/>
        <function-ref name="isInput" scoped="" ref="0x7dabe828"/>
        <function-ref name="toggle" scoped="" ref="0x7dabe908"/>
        <function-ref name="isOutput" scoped="" ref="0x7dabe9e8"/>
        <function-ref name="get" scoped="" ref="0x7dabeac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dabeba8"/>
        <function-ref name="set" scoped="" ref="0x7dabec88"/>
        <function-ref name="clr" scoped="" ref="0x7dabed68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dabc010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dabc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dabc1e8"/>
        <function-ref name="isInput" scoped="" ref="0x7dabc2c8"/>
        <function-ref name="toggle" scoped="" ref="0x7dabc3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7dabc488"/>
        <function-ref name="get" scoped="" ref="0x7dabc568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dabc648"/>
        <function-ref name="set" scoped="" ref="0x7dabc728"/>
        <function-ref name="clr" scoped="" ref="0x7dabc808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dabb9e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dabb9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dabbbc0"/>
        <function-ref name="isInput" scoped="" ref="0x7dabbca0"/>
        <function-ref name="toggle" scoped="" ref="0x7dabbd80"/>
        <function-ref name="isOutput" scoped="" ref="0x7dabbe60"/>
        <function-ref name="get" scoped="" ref="0x7daba010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7daba0f0"/>
        <function-ref name="set" scoped="" ref="0x7daba1d0"/>
        <function-ref name="clr" scoped="" ref="0x7daba2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7ec83c88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7ec83c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec83e60"/>
        <function-ref name="isInput" scoped="" ref="0x7ec82010"/>
        <function-ref name="toggle" scoped="" ref="0x7ec820f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec821d0"/>
        <function-ref name="get" scoped="" ref="0x7ec822b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec82390"/>
        <function-ref name="set" scoped="" ref="0x7ec82470"/>
        <function-ref name="clr" scoped="" ref="0x7ec82550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7ec81988" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7ec81988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec81b60"/>
        <function-ref name="isInput" scoped="" ref="0x7ec81c40"/>
        <function-ref name="toggle" scoped="" ref="0x7ec81d20"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec81e00"/>
        <function-ref name="get" scoped="" ref="0x7ec81ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec80010"/>
        <function-ref name="set" scoped="" ref="0x7ec800f0"/>
        <function-ref name="clr" scoped="" ref="0x7ec801d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7ec849c0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7ec849c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec84b98"/>
        <function-ref name="isInput" scoped="" ref="0x7ec84c78"/>
        <function-ref name="toggle" scoped="" ref="0x7ec84d58"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec84e38"/>
        <function-ref name="get" scoped="" ref="0x7ec84f18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec83010"/>
        <function-ref name="set" scoped="" ref="0x7ec830f0"/>
        <function-ref name="clr" scoped="" ref="0x7ec831d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7ec826b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7ec826b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec82888"/>
        <function-ref name="isInput" scoped="" ref="0x7ec82968"/>
        <function-ref name="toggle" scoped="" ref="0x7ec82a48"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec82b28"/>
        <function-ref name="get" scoped="" ref="0x7ec82c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec82ce8"/>
        <function-ref name="set" scoped="" ref="0x7ec82dc8"/>
        <function-ref name="clr" scoped="" ref="0x7ec82ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7ec80330" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7ec80330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec80508"/>
        <function-ref name="isInput" scoped="" ref="0x7ec805e8"/>
        <function-ref name="toggle" scoped="" ref="0x7ec806c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec807a8"/>
        <function-ref name="get" scoped="" ref="0x7ec80888"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec80968"/>
        <function-ref name="set" scoped="" ref="0x7ec80a48"/>
        <function-ref name="clr" scoped="" ref="0x7ec80b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7ec83330" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7ec83330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec83508"/>
        <function-ref name="isInput" scoped="" ref="0x7ec835e8"/>
        <function-ref name="toggle" scoped="" ref="0x7ec836c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec837a8"/>
        <function-ref name="get" scoped="" ref="0x7ec83888"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec83968"/>
        <function-ref name="set" scoped="" ref="0x7ec83a48"/>
        <function-ref name="clr" scoped="" ref="0x7ec83b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7ec81030" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7ec81030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec81208"/>
        <function-ref name="isInput" scoped="" ref="0x7ec812e8"/>
        <function-ref name="toggle" scoped="" ref="0x7ec813c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec814a8"/>
        <function-ref name="get" scoped="" ref="0x7ec81588"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec81668"/>
        <function-ref name="set" scoped="" ref="0x7ec81748"/>
        <function-ref name="clr" scoped="" ref="0x7ec81828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7ec80c88" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7ec80c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec80e60"/>
        <function-ref name="isInput" scoped="" ref="0x7ec74010"/>
        <function-ref name="toggle" scoped="" ref="0x7ec740f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec741d0"/>
        <function-ref name="get" scoped="" ref="0x7ec742b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec74390"/>
        <function-ref name="set" scoped="" ref="0x7ec74470"/>
        <function-ref name="clr" scoped="" ref="0x7ec74550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7da8b7f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7da8b7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7da8b9d0"/>
        <function-ref name="isInput" scoped="" ref="0x7da8bab0"/>
        <function-ref name="toggle" scoped="" ref="0x7da8bb90"/>
        <function-ref name="isOutput" scoped="" ref="0x7da8bc70"/>
        <function-ref name="get" scoped="" ref="0x7da8bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7da8be30"/>
        <function-ref name="set" scoped="" ref="0x7da8bf10"/>
        <function-ref name="clr" scoped="" ref="0x7da8a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7da89228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7da89228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7da89400"/>
        <function-ref name="isInput" scoped="" ref="0x7da894e0"/>
        <function-ref name="toggle" scoped="" ref="0x7da895c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7da896a0"/>
        <function-ref name="get" scoped="" ref="0x7da89780"/>
        <function-ref name="makeOutput" scoped="" ref="0x7da89860"/>
        <function-ref name="set" scoped="" ref="0x7da89940"/>
        <function-ref name="clr" scoped="" ref="0x7da89a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7da88c08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7da88c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7da88de0"/>
        <function-ref name="isInput" scoped="" ref="0x7da88ec0"/>
        <function-ref name="toggle" scoped="" ref="0x7da87010"/>
        <function-ref name="isOutput" scoped="" ref="0x7da870f0"/>
        <function-ref name="get" scoped="" ref="0x7da871d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7da872b0"/>
        <function-ref name="set" scoped="" ref="0x7da87390"/>
        <function-ref name="clr" scoped="" ref="0x7da87470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7da866c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7da866c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7da86898"/>
        <function-ref name="isInput" scoped="" ref="0x7da86978"/>
        <function-ref name="toggle" scoped="" ref="0x7da86a58"/>
        <function-ref name="isOutput" scoped="" ref="0x7da86b38"/>
        <function-ref name="get" scoped="" ref="0x7da86c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7da86cf8"/>
        <function-ref name="set" scoped="" ref="0x7da86dd8"/>
        <function-ref name="clr" scoped="" ref="0x7da86eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7da840b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7da840b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7da84288"/>
        <function-ref name="isInput" scoped="" ref="0x7da84368"/>
        <function-ref name="toggle" scoped="" ref="0x7da84448"/>
        <function-ref name="isOutput" scoped="" ref="0x7da84528"/>
        <function-ref name="get" scoped="" ref="0x7da84608"/>
        <function-ref name="makeOutput" scoped="" ref="0x7da846e8"/>
        <function-ref name="set" scoped="" ref="0x7da847c8"/>
        <function-ref name="clr" scoped="" ref="0x7da848a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7da83a88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7da83a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7da83c60"/>
        <function-ref name="isInput" scoped="" ref="0x7da83d40"/>
        <function-ref name="toggle" scoped="" ref="0x7da83e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7da83f00"/>
        <function-ref name="get" scoped="" ref="0x7da82010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7da820f0"/>
        <function-ref name="set" scoped="" ref="0x7da821d0"/>
        <function-ref name="clr" scoped="" ref="0x7da822b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7da81538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7da81538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7da81710"/>
        <function-ref name="isInput" scoped="" ref="0x7da817f0"/>
        <function-ref name="toggle" scoped="" ref="0x7da818d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7da819b0"/>
        <function-ref name="get" scoped="" ref="0x7da81a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7da81b70"/>
        <function-ref name="set" scoped="" ref="0x7da81c50"/>
        <function-ref name="clr" scoped="" ref="0x7da81d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7da7f010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7da7f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7da7f1e8"/>
        <function-ref name="isInput" scoped="" ref="0x7da7f2c8"/>
        <function-ref name="toggle" scoped="" ref="0x7da7f3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7da7f488"/>
        <function-ref name="get" scoped="" ref="0x7da7f568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7da7f648"/>
        <function-ref name="set" scoped="" ref="0x7da7f728"/>
        <function-ref name="clr" scoped="" ref="0x7da7f808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7ec70250" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7ec70250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec70428"/>
        <function-ref name="isInput" scoped="" ref="0x7ec70508"/>
        <function-ref name="toggle" scoped="" ref="0x7ec705e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec706c8"/>
        <function-ref name="get" scoped="" ref="0x7ec707a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec70888"/>
        <function-ref name="set" scoped="" ref="0x7ec70968"/>
        <function-ref name="clr" scoped="" ref="0x7ec70a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7ec63f28" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7ec63f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec62110"/>
        <function-ref name="isInput" scoped="" ref="0x7ec621f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec622d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec623b0"/>
        <function-ref name="get" scoped="" ref="0x7ec62490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec62570"/>
        <function-ref name="set" scoped="" ref="0x7ec62650"/>
        <function-ref name="clr" scoped="" ref="0x7ec62730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7ec72eb0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7ec72eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec710c0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec711a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec71280"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec71360"/>
        <function-ref name="get" scoped="" ref="0x7ec71440"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec71520"/>
        <function-ref name="set" scoped="" ref="0x7ec71600"/>
        <function-ref name="clr" scoped="" ref="0x7ec716e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7ec70ba8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7ec70ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec70d80"/>
        <function-ref name="isInput" scoped="" ref="0x7ec70e60"/>
        <function-ref name="toggle" scoped="" ref="0x7ec63010"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec630f0"/>
        <function-ref name="get" scoped="" ref="0x7ec631d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec632b0"/>
        <function-ref name="set" scoped="" ref="0x7ec63390"/>
        <function-ref name="clr" scoped="" ref="0x7ec63470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7ec62890" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7ec62890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec62a68"/>
        <function-ref name="isInput" scoped="" ref="0x7ec62b48"/>
        <function-ref name="toggle" scoped="" ref="0x7ec62c28"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec62d08"/>
        <function-ref name="get" scoped="" ref="0x7ec62de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec62ec8"/>
        <function-ref name="set" scoped="" ref="0x7ec61010"/>
        <function-ref name="clr" scoped="" ref="0x7ec610f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7ec71840" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7ec71840"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec71a18"/>
        <function-ref name="isInput" scoped="" ref="0x7ec71af8"/>
        <function-ref name="toggle" scoped="" ref="0x7ec71bd8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec71cb8"/>
        <function-ref name="get" scoped="" ref="0x7ec71d98"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec71e78"/>
        <function-ref name="set" scoped="" ref="0x7ec70010"/>
        <function-ref name="clr" scoped="" ref="0x7ec700f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7ec635d0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7ec635d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec637a8"/>
        <function-ref name="isInput" scoped="" ref="0x7ec63888"/>
        <function-ref name="toggle" scoped="" ref="0x7ec63968"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec63a48"/>
        <function-ref name="get" scoped="" ref="0x7ec63b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec63c08"/>
        <function-ref name="set" scoped="" ref="0x7ec63ce8"/>
        <function-ref name="clr" scoped="" ref="0x7ec63dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7ec61250" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7ec61250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec61428"/>
        <function-ref name="isInput" scoped="" ref="0x7ec61508"/>
        <function-ref name="toggle" scoped="" ref="0x7ec615e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec616c8"/>
        <function-ref name="get" scoped="" ref="0x7ec617a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec61888"/>
        <function-ref name="set" scoped="" ref="0x7ec61968"/>
        <function-ref name="clr" scoped="" ref="0x7ec61a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7da55d08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7da55d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7da55ee0"/>
        <function-ref name="isInput" scoped="" ref="0x7da52010"/>
        <function-ref name="toggle" scoped="" ref="0x7da520f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7da521d0"/>
        <function-ref name="get" scoped="" ref="0x7da522b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7da52390"/>
        <function-ref name="set" scoped="" ref="0x7da52470"/>
        <function-ref name="clr" scoped="" ref="0x7da52550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7da51718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7da51718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7da518f0"/>
        <function-ref name="isInput" scoped="" ref="0x7da519d0"/>
        <function-ref name="toggle" scoped="" ref="0x7da51ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x7da51b90"/>
        <function-ref name="get" scoped="" ref="0x7da51c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7da51d50"/>
        <function-ref name="set" scoped="" ref="0x7da51e30"/>
        <function-ref name="clr" scoped="" ref="0x7da51f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7da4c0f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7da4c0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7da4c2d0"/>
        <function-ref name="isInput" scoped="" ref="0x7da4c3b0"/>
        <function-ref name="toggle" scoped="" ref="0x7da4c490"/>
        <function-ref name="isOutput" scoped="" ref="0x7da4c570"/>
        <function-ref name="get" scoped="" ref="0x7da4c650"/>
        <function-ref name="makeOutput" scoped="" ref="0x7da4c730"/>
        <function-ref name="set" scoped="" ref="0x7da4c810"/>
        <function-ref name="clr" scoped="" ref="0x7da4c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7da4bac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7da4bac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7da4bca0"/>
        <function-ref name="isInput" scoped="" ref="0x7da4bd80"/>
        <function-ref name="toggle" scoped="" ref="0x7da4be60"/>
        <function-ref name="isOutput" scoped="" ref="0x7da4a010"/>
        <function-ref name="get" scoped="" ref="0x7da4a0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7da4a1d0"/>
        <function-ref name="set" scoped="" ref="0x7da4a2b0"/>
        <function-ref name="clr" scoped="" ref="0x7da4a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7da49570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7da49570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7da49748"/>
        <function-ref name="isInput" scoped="" ref="0x7da49828"/>
        <function-ref name="toggle" scoped="" ref="0x7da49908"/>
        <function-ref name="isOutput" scoped="" ref="0x7da499e8"/>
        <function-ref name="get" scoped="" ref="0x7da49ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7da49ba8"/>
        <function-ref name="set" scoped="" ref="0x7da49c88"/>
        <function-ref name="clr" scoped="" ref="0x7da49d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7da47010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7da47010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7da471e8"/>
        <function-ref name="isInput" scoped="" ref="0x7da472c8"/>
        <function-ref name="toggle" scoped="" ref="0x7da473a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7da47488"/>
        <function-ref name="get" scoped="" ref="0x7da47568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7da47648"/>
        <function-ref name="set" scoped="" ref="0x7da47728"/>
        <function-ref name="clr" scoped="" ref="0x7da47808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7da469e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7da469e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7da46bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7da46ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7da46d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7da46e60"/>
        <function-ref name="get" scoped="" ref="0x7da45010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7da450f0"/>
        <function-ref name="set" scoped="" ref="0x7da451d0"/>
        <function-ref name="clr" scoped="" ref="0x7da452b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7da44538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7da44538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7da44710"/>
        <function-ref name="isInput" scoped="" ref="0x7da447f0"/>
        <function-ref name="toggle" scoped="" ref="0x7da448d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7da449b0"/>
        <function-ref name="get" scoped="" ref="0x7da44a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7da44b70"/>
        <function-ref name="set" scoped="" ref="0x7da44c50"/>
        <function-ref name="clr" scoped="" ref="0x7da44d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ec528f0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ec528f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec52ac8"/>
        <function-ref name="isInput" scoped="" ref="0x7ec52ba8"/>
        <function-ref name="toggle" scoped="" ref="0x7ec52c88"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec52d68"/>
        <function-ref name="get" scoped="" ref="0x7ec52e48"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec52f28"/>
        <function-ref name="set" scoped="" ref="0x7ec51018"/>
        <function-ref name="clr" scoped="" ref="0x7ec510f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ec30cb8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ec30cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec30e90"/>
        <function-ref name="isInput" scoped="" ref="0x7ec25010"/>
        <function-ref name="toggle" scoped="" ref="0x7ec250f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec251d0"/>
        <function-ref name="get" scoped="" ref="0x7ec252b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec25390"/>
        <function-ref name="set" scoped="" ref="0x7ec25470"/>
        <function-ref name="clr" scoped="" ref="0x7ec25550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ec23148" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ec23148"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec23320"/>
        <function-ref name="isInput" scoped="" ref="0x7ec23400"/>
        <function-ref name="toggle" scoped="" ref="0x7ec234e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec235c0"/>
        <function-ref name="get" scoped="" ref="0x7ec236a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec23780"/>
        <function-ref name="set" scoped="" ref="0x7ec23860"/>
        <function-ref name="clr" scoped="" ref="0x7ec23940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ec20538" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ec20538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec20710"/>
        <function-ref name="isInput" scoped="" ref="0x7ec207f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec208d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec209b0"/>
        <function-ref name="get" scoped="" ref="0x7ec20a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec20b70"/>
        <function-ref name="set" scoped="" ref="0x7ec20c50"/>
        <function-ref name="clr" scoped="" ref="0x7ec20d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ec14978" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ec14978"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec14b50"/>
        <function-ref name="isInput" scoped="" ref="0x7ec14c30"/>
        <function-ref name="toggle" scoped="" ref="0x7ec14d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec14df0"/>
        <function-ref name="get" scoped="" ref="0x7ec14ed0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec13010"/>
        <function-ref name="set" scoped="" ref="0x7ec130f0"/>
        <function-ref name="clr" scoped="" ref="0x7ec131d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ec11d70" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ec11d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec10010"/>
        <function-ref name="isInput" scoped="" ref="0x7ec100f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec101d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec102b0"/>
        <function-ref name="get" scoped="" ref="0x7ec10390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec10470"/>
        <function-ref name="set" scoped="" ref="0x7ec10550"/>
        <function-ref name="clr" scoped="" ref="0x7ec10630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ec042b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ec042b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec04488"/>
        <function-ref name="isInput" scoped="" ref="0x7ec04568"/>
        <function-ref name="toggle" scoped="" ref="0x7ec04648"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec04728"/>
        <function-ref name="get" scoped="" ref="0x7ec04808"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec048e8"/>
        <function-ref name="set" scoped="" ref="0x7ec049c8"/>
        <function-ref name="clr" scoped="" ref="0x7ec04aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ec016c0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ec016c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec01898"/>
        <function-ref name="isInput" scoped="" ref="0x7ec01978"/>
        <function-ref name="toggle" scoped="" ref="0x7ec01a58"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec01b38"/>
        <function-ref name="get" scoped="" ref="0x7ec01c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec01cf8"/>
        <function-ref name="set" scoped="" ref="0x7ec01dd8"/>
        <function-ref name="clr" scoped="" ref="0x7ec01eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ebf5998" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ebf5998"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ebf5b70"/>
        <function-ref name="isInput" scoped="" ref="0x7ebf5c50"/>
        <function-ref name="toggle" scoped="" ref="0x7ebf5d30"/>
        <function-ref name="isOutput" scoped="" ref="0x7ebf5e10"/>
        <function-ref name="get" scoped="" ref="0x7ebf5ef0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ebf4010"/>
        <function-ref name="set" scoped="" ref="0x7ebf40f0"/>
        <function-ref name="clr" scoped="" ref="0x7ebf41d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ebf3cb8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ebf3cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ebf3e90"/>
        <function-ref name="isInput" scoped="" ref="0x7ebf2010"/>
        <function-ref name="toggle" scoped="" ref="0x7ebf20f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ebf21d0"/>
        <function-ref name="get" scoped="" ref="0x7ebf22b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ebf2390"/>
        <function-ref name="set" scoped="" ref="0x7ebf2470"/>
        <function-ref name="clr" scoped="" ref="0x7ebf2550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ebe5050" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ebe5050"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ebe5228"/>
        <function-ref name="isInput" scoped="" ref="0x7ebe5308"/>
        <function-ref name="toggle" scoped="" ref="0x7ebe53e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ebe54c8"/>
        <function-ref name="get" scoped="" ref="0x7ebe55a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ebe5688"/>
        <function-ref name="set" scoped="" ref="0x7ebe5768"/>
        <function-ref name="clr" scoped="" ref="0x7ebe5848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ebe33b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ebe33b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ebe3588"/>
        <function-ref name="isInput" scoped="" ref="0x7ebe3668"/>
        <function-ref name="toggle" scoped="" ref="0x7ebe3748"/>
        <function-ref name="isOutput" scoped="" ref="0x7ebe3828"/>
        <function-ref name="get" scoped="" ref="0x7ebe3908"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ebe39e8"/>
        <function-ref name="set" scoped="" ref="0x7ebe3ac8"/>
        <function-ref name="clr" scoped="" ref="0x7ebe3ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ebe06c0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ebe06c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ebe0898"/>
        <function-ref name="isInput" scoped="" ref="0x7ebe0978"/>
        <function-ref name="toggle" scoped="" ref="0x7ebe0a58"/>
        <function-ref name="isOutput" scoped="" ref="0x7ebe0b38"/>
        <function-ref name="get" scoped="" ref="0x7ebe0c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ebe0cf8"/>
        <function-ref name="set" scoped="" ref="0x7ebe0dd8"/>
        <function-ref name="clr" scoped="" ref="0x7ebe0eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7eb75d58" loc="27:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7eb75d58"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f250308"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f250308"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7eb74010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7eb74160" loc="28:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7eb74160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7eb74338"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7eb74418"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7eb744f8"/>
        <function-ref name="actualMicro" scoped="" ref="0x7eb745d8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7eb746b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7eb45ee8" loc="49:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7eb45ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7eb440e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7eb45300" loc="46:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7eb45300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7eb454d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7eb45b78" loc="48:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7eb45b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7eb45d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7eb45648" loc="47:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7eb45648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7eb45820"/>
        <function-ref name="taskLoop" scoped="" ref="0x7eb45900"/>
        <function-ref name="runNextTask" scoped="" ref="0x7eb459e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f2109b8" loc="37:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f210b90"/>
        <function-ref name="runTask" scoped="" ref="0x7f210c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f230970" loc="36:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f230970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f230b48"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f230c28"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f230d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f062120" loc="45:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f062120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0622f8"/>
        <function-ref name="runTask" scoped="" ref="0x7f0623d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f051540" loc="46:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f051540"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f051718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f070960" loc="44:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f070960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f070b38"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f070c18"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f070cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7efe01a0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7efe01a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7efe0378"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f202c20" loc="42:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f202c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f202df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7eff0078" loc="43:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7eff0078"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7eff0250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7eb350c0" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="SerialApp.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7eb350c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e8d0a10"/>
        <function-ref name="fired" scoped="" ref="0x7eb35dc8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e8d03d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e8d01f0"/>
        <function-ref name="getdt" scoped="" ref="0x7e8d0dd0"/>
        <function-ref name="gett0" scoped="" ref="0x7e8d0bf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7e8d0010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7eb356e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e8d06f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7eb35968"/>
        <function-ref name="stop" scoped="" ref="0x7eb35be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7eb24e58" loc="38:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7eb24e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7eb21830"/>
        <function-ref name="fired" scoped="" ref="0x7eb23b98"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7eb211f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7eb21010"/>
        <function-ref name="getdt" scoped="" ref="0x7eb21bf0"/>
        <function-ref name="gett0" scoped="" ref="0x7eb21a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7eb23d78"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7eb234b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7eb21510"/>
        <function-ref name="startOneShot" scoped="" ref="0x7eb23738"/>
        <function-ref name="stop" scoped="" ref="0x7eb239b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7eb126f8" loc="35:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7eb126f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7eb05068"/>
        <function-ref name="fired" scoped="" ref="0x7eb11470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7eb11a10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7eb11830"/>
        <function-ref name="getdt" scoped="" ref="0x7eb05428"/>
        <function-ref name="gett0" scoped="" ref="0x7eb05248"/>
        <function-ref name="isRunning" scoped="" ref="0x7eb11650"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7eb12d20"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7eb11d30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7eb11010"/>
        <function-ref name="stop" scoped="" ref="0x7eb11290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7eb01ea0" loc="36:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7eb01ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7eb034f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7eb12060" loc="34:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7eb12060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7eb12238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7ead3870" loc="26:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7ead3870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ead5010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ead5410"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ead5210"/>
        <function-ref name="overflow" scoped="" ref="0x7ead5610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7eaf5c20" loc="24:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7eaf5c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7eaf5df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7eae29d0" loc="25:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7eae29d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7eaf0de0"/>
        <function-ref name="fired" scoped="" ref="0x7eaf06a0"/>
        <function-ref name="startAt" scoped="" ref="0x7eaf0aa0"/>
        <function-ref name="isRunning" scoped="" ref="0x7eaf08a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7eae1010"/>
        <function-ref name="start" scoped="" ref="0x7eaf0200"/>
        <function-ref name="stop" scoped="" ref="0x7eaf04a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7eaa5388" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7eaa5388"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7eaa5560"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7eaa5640"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7eaa5720"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7eaa5800"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7eaa58e0"/>
        <function-ref name="setControl" scoped="" ref="0x7eaa59c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7eac6d00" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7eac6d00"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f2500e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f2500e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7eac6ed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7eaa0848" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7eaa0848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7eab1b48"/>
        <function-ref name="fired" scoped="" ref="0x7eab1348"/>
        <function-ref name="get" scoped="" ref="0x7eaa0e90"/>
        <function-ref name="reset" scoped="" ref="0x7eab1548"/>
        <function-ref name="isOn" scoped="" ref="0x7eab1d48"/>
        <function-ref name="set" scoped="" ref="0x7eab10a8"/>
        <function-ref name="start" scoped="" ref="0x7eab1748"/>
        <function-ref name="stop" scoped="" ref="0x7eab1948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7eab5be0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7eab5be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7eac2330"/>
        <function-ref name="test" scoped="" ref="0x7eac3f18"/>
        <function-ref name="get" scoped="" ref="0x7eac3278"/>
        <function-ref name="setScale" scoped="" ref="0x7eac2530"/>
        <function-ref name="getScale" scoped="" ref="0x7eac27d0"/>
        <function-ref name="reset" scoped="" ref="0x7eac3918"/>
        <function-ref name="overflow" scoped="" ref="0x7eac3718"/>
        <function-ref name="isOn" scoped="" ref="0x7eac2130"/>
        <function-ref name="set" scoped="" ref="0x7eac3478"/>
        <function-ref name="start" scoped="" ref="0x7eac3b18"/>
        <function-ref name="stop" scoped="" ref="0x7eac3d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ea43c78" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliInit"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ea43c78"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f2500e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f2500e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ea43e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ea42078" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliInit"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7ea42078"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7ea32810"/>
        <function-ref name="test" scoped="" ref="0x7ea32410"/>
        <function-ref name="get" scoped="" ref="0x7ea426c0"/>
        <function-ref name="setScale" scoped="" ref="0x7ea32a10"/>
        <function-ref name="getScale" scoped="" ref="0x7ea32cb0"/>
        <function-ref name="reset" scoped="" ref="0x7ea42d60"/>
        <function-ref name="overflow" scoped="" ref="0x7ea42b60"/>
        <function-ref name="isOn" scoped="" ref="0x7ea32610"/>
        <function-ref name="set" scoped="" ref="0x7ea428c0"/>
        <function-ref name="start" scoped="" ref="0x7ea32010"/>
        <function-ref name="stop" scoped="" ref="0x7ea32210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ea25680" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7ea25680"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7f251f28"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7f251f28"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ea009c8"/>
        <function-ref name="fired" scoped="" ref="0x7ea00288"/>
        <function-ref name="startAt" scoped="" ref="0x7ea00688"/>
        <function-ref name="isRunning" scoped="" ref="0x7ea00488"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ea00bc8"/>
        <function-ref name="start" scoped="" ref="0x7ea25dd0"/>
        <function-ref name="stop" scoped="" ref="0x7ea00088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7e9f5c10" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7e9f5c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e9f3f18"/>
        <function-ref name="fired" scoped="" ref="0x7e9f3718"/>
        <function-ref name="get" scoped="" ref="0x7e9f3278"/>
        <function-ref name="reset" scoped="" ref="0x7e9f3918"/>
        <function-ref name="isOn" scoped="" ref="0x7e9f2130"/>
        <function-ref name="set" scoped="" ref="0x7e9f3478"/>
        <function-ref name="start" scoped="" ref="0x7e9f3b18"/>
        <function-ref name="stop" scoped="" ref="0x7e9f3d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7ea00e10" loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7ea00e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e9f5528"/>
        <function-ref name="test" scoped="" ref="0x7e9f5128"/>
        <function-ref name="get" scoped="" ref="0x7e9f6468"/>
        <function-ref name="setScale" scoped="" ref="0x7e9f5728"/>
        <function-ref name="getScale" scoped="" ref="0x7e9f59c8"/>
        <function-ref name="reset" scoped="" ref="0x7e9f6b08"/>
        <function-ref name="overflow" scoped="" ref="0x7e9f6908"/>
        <function-ref name="isOn" scoped="" ref="0x7e9f5328"/>
        <function-ref name="set" scoped="" ref="0x7e9f6668"/>
        <function-ref name="start" scoped="" ref="0x7e9f6d08"/>
        <function-ref name="stop" scoped="" ref="0x7e9f6f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7e9e6320" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e9e6320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e9e6a70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e9e6e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e9e6c70"/>
        <function-ref name="overflow" scoped="" ref="0x7e9e5088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7e9e52f0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e9e52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e9d1a10"/>
        <function-ref name="test" scoped="" ref="0x7e9d1610"/>
        <function-ref name="get" scoped="" ref="0x7e9e5938"/>
        <function-ref name="setScale" scoped="" ref="0x7e9d1c10"/>
        <function-ref name="getScale" scoped="" ref="0x7e9d1eb0"/>
        <function-ref name="reset" scoped="" ref="0x7e9d1010"/>
        <function-ref name="overflow" scoped="" ref="0x7e9e5dd8"/>
        <function-ref name="isOn" scoped="" ref="0x7e9d1810"/>
        <function-ref name="set" scoped="" ref="0x7e9e5b38"/>
        <function-ref name="start" scoped="" ref="0x7e9d1210"/>
        <function-ref name="stop" scoped="" ref="0x7e9d1410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7e9c5608" loc="61:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
      <component-ref qname="AlarmCounterMilliP.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7e9c5608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e9c4950"/>
        <function-ref name="fired" scoped="" ref="0x7e9c4210"/>
        <function-ref name="startAt" scoped="" ref="0x7e9c4610"/>
        <function-ref name="isRunning" scoped="" ref="0x7e9c4410"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e9c4b50"/>
        <function-ref name="start" scoped="" ref="0x7e9c5d58"/>
        <function-ref name="stop" scoped="" ref="0x7e9c4010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7e977ed8" loc="63:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
      <component-ref qname="AlarmCounterMilliP.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7e977ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e976680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e976a80"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e976880"/>
        <function-ref name="overflow" scoped="" ref="0x7e976c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7e9c4e48" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
      <component-ref qname="AlarmCounterMilliP.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e9c4e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e9775e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e9779e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e9777e0"/>
        <function-ref name="overflow" scoped="" ref="0x7e977be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7e974010" loc="64:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
      <component-ref qname="AlarmCounterMilliP.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x7e974010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e973350"/>
        <function-ref name="fired" scoped="" ref="0x7e974c00"/>
        <function-ref name="startAt" scoped="" ref="0x7e973010"/>
        <function-ref name="isRunning" scoped="" ref="0x7e974e00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e973550"/>
        <function-ref name="start" scoped="" ref="0x7e974760"/>
        <function-ref name="stop" scoped="" ref="0x7e974a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7e936bf0" loc="63:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7e936bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e936dc8"/>
        <function-ref name="runTask" scoped="" ref="0x7e936ea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7e9404c8" loc="38:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7e9404c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e936818"/>
        <function-ref name="fired" scoped="" ref="0x7e9360d8"/>
        <function-ref name="startAt" scoped="" ref="0x7e9364d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7e9362d8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e936a18"/>
        <function-ref name="start" scoped="" ref="0x7e940c18"/>
        <function-ref name="stop" scoped="" ref="0x7e940eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e966440" loc="37:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e966440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e941dd0"/>
        <function-ref name="fired" scoped="" ref="0x7e9411f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e941790"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e9415b0"/>
        <function-ref name="getdt" scoped="" ref="0x7e9401f0"/>
        <function-ref name="gett0" scoped="" ref="0x7e940010"/>
        <function-ref name="isRunning" scoped="" ref="0x7e9413d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e966a68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e941ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e966ce8"/>
        <function-ref name="stop" scoped="" ref="0x7e941010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7e8e3240" loc="60:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7e8e3240"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e8e3418"/>
        <function-ref name="runTask" scoped="" ref="0x7e8e34f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7e8e5380" loc="38:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7e8e5380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e8e4c98"/>
        <function-ref name="fired" scoped="" ref="0x7e8e40b8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e8e4658"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e8e4478"/>
        <function-ref name="getdt" scoped="" ref="0x7e8e3068"/>
        <function-ref name="gett0" scoped="" ref="0x7e8e4e78"/>
        <function-ref name="isRunning" scoped="" ref="0x7e8e4298"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e8e59a8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e8e4978"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e8e5c28"/>
        <function-ref name="stop" scoped="" ref="0x7e8e5ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e932370" loc="37:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e932370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e8e7d08"/>
        <function-ref name="fired" scoped="" ref="0x7e8e70d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e8e76a8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e8e74b8"/>
        <function-ref name="getdt" scoped="" ref="0x7e8e5108"/>
        <function-ref name="gett0" scoped="" ref="0x7e8e7ef8"/>
        <function-ref name="isRunning" scoped="" ref="0x7e8e72c8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e9329a8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e8e79d8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e932c38"/>
        <function-ref name="stop" scoped="" ref="0x7e932ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7e8d7a88" loc="37:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7e8d7a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e8d60f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7e8d63d0" loc="38:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e8d63d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e8d6b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e8d6f20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e8d6d20"/>
        <function-ref name="overflow" scoped="" ref="0x7e8d1138"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LEDController" ref="0x7e8c3398" loc="2:LEDControllerC.nc">
      <component-ref qname="LEDControllerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LEDController" scoped="" ref="0x7e8c3398"/></type-interface>
      <instance>
        <interfacedef-ref qname="LEDController"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e8c3570"/>
        <function-ref name="BlinkLed1" scoped="" ref="0x7e8c3650"/>
        <function-ref name="IntervalBlinkLed0" scoped="" ref="0x7e8c3730"/>
        <function-ref name="BlinkLed2" scoped="" ref="0x7e8c3810"/>
        <function-ref name="IntervalBlinkLed1" scoped="" ref="0x7e8c38f0"/>
        <function-ref name="BlinkLed0" scoped="" ref="0x7e8c39d0"/>
        <function-ref name="IntervalBlinkLed2" scoped="" ref="0x7e8c3ab0"/>
        <function-ref name="BlinkDone" scoped="" ref="0x7e8c3b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LEDTimer1" ref="0x7e8a4160" loc="7:LEDControllerM.nc">
      <component-ref qname="LEDControllerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LEDTimer1" scoped="" ref="0x7e8a4160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e8a3a68"/>
        <function-ref name="fired" scoped="" ref="0x7e8a4e68"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e8a3428"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e8a3248"/>
        <function-ref name="getdt" scoped="" ref="0x7e8a3e28"/>
        <function-ref name="gett0" scoped="" ref="0x7e8a3c48"/>
        <function-ref name="isRunning" scoped="" ref="0x7e8a3068"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e8a4788"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e8a3748"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e8a4a08"/>
        <function-ref name="stop" scoped="" ref="0x7e8a4c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LEDController" ref="0x7e8c18f0" loc="2:LEDControllerM.nc">
      <component-ref qname="LEDControllerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LEDController" scoped="" ref="0x7e8c18f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LEDController"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e8c1ac8"/>
        <function-ref name="BlinkLed1" scoped="" ref="0x7e8c1ba8"/>
        <function-ref name="IntervalBlinkLed0" scoped="" ref="0x7e8c1c88"/>
        <function-ref name="BlinkLed2" scoped="" ref="0x7e8c1d68"/>
        <function-ref name="IntervalBlinkLed1" scoped="" ref="0x7e8c1e48"/>
        <function-ref name="BlinkLed0" scoped="" ref="0x7e8c1f28"/>
        <function-ref name="IntervalBlinkLed2" scoped="" ref="0x7e8b6018"/>
        <function-ref name="BlinkDone" scoped="" ref="0x7e8b60f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LEDIntervalTimer2" ref="0x7e892078" loc="12:LEDControllerM.nc">
      <component-ref qname="LEDControllerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LEDIntervalTimer2" scoped="" ref="0x7e892078"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e891a10"/>
        <function-ref name="fired" scoped="" ref="0x7e892d80"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e8913d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e8911f0"/>
        <function-ref name="getdt" scoped="" ref="0x7e891dd0"/>
        <function-ref name="gett0" scoped="" ref="0x7e891bf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7e891010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e8926a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e8916f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e892920"/>
        <function-ref name="stop" scoped="" ref="0x7e892ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LEDIntervalTimer0" ref="0x7e898078" loc="10:LEDControllerM.nc">
      <component-ref qname="LEDControllerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LEDIntervalTimer0" scoped="" ref="0x7e898078"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e896a10"/>
        <function-ref name="fired" scoped="" ref="0x7e898d80"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e8963d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e8961f0"/>
        <function-ref name="getdt" scoped="" ref="0x7e896dd0"/>
        <function-ref name="gett0" scoped="" ref="0x7e896bf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7e896010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e8986a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e8966f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e898920"/>
        <function-ref name="stop" scoped="" ref="0x7e898ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e8a6548" loc="5:LEDControllerM.nc">
      <component-ref qname="LEDControllerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e8a6548"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e8a6720"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e8a6800"/>
        <function-ref name="led1On" scoped="" ref="0x7e8a68e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e8a69c0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e8a6aa0"/>
        <function-ref name="get" scoped="" ref="0x7e8a6b80"/>
        <function-ref name="led1Off" scoped="" ref="0x7e8a6c60"/>
        <function-ref name="led2Off" scoped="" ref="0x7e8b4010"/>
        <function-ref name="set" scoped="" ref="0x7e8a6d40"/>
        <function-ref name="led0On" scoped="" ref="0x7e8a6e20"/>
        <function-ref name="led2On" scoped="" ref="0x7e8a6f00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LEDTimer2" ref="0x7e8a10b8" loc="8:LEDControllerM.nc">
      <component-ref qname="LEDControllerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LEDTimer2" scoped="" ref="0x7e8a10b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e8a0a10"/>
        <function-ref name="fired" scoped="" ref="0x7e8a1dc0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e8a03d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e8a01f0"/>
        <function-ref name="getdt" scoped="" ref="0x7e8a0dd0"/>
        <function-ref name="gett0" scoped="" ref="0x7e8a0bf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7e8a0010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e8a16e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e8a06f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e8a1960"/>
        <function-ref name="stop" scoped="" ref="0x7e8a1be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LEDTimer0" ref="0x7e8b4220" loc="6:LEDControllerM.nc">
      <component-ref qname="LEDControllerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LEDTimer0" scoped="" ref="0x7e8b4220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e8b3b18"/>
        <function-ref name="fired" scoped="" ref="0x7e8b4f28"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e8b34d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e8b32f8"/>
        <function-ref name="getdt" scoped="" ref="0x7e8b3ed8"/>
        <function-ref name="gett0" scoped="" ref="0x7e8b3cf8"/>
        <function-ref name="isRunning" scoped="" ref="0x7e8b3118"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e8b4848"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e8b37f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e8b4ac8"/>
        <function-ref name="stop" scoped="" ref="0x7e8b4d48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LEDIntervalTimer1" ref="0x7e895078" loc="11:LEDControllerM.nc">
      <component-ref qname="LEDControllerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LEDIntervalTimer1" scoped="" ref="0x7e895078"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e894a10"/>
        <function-ref name="fired" scoped="" ref="0x7e895d80"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e8943d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e8941f0"/>
        <function-ref name="getdt" scoped="" ref="0x7e894dd0"/>
        <function-ref name="gett0" scoped="" ref="0x7e894bf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7e894010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e8956a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e8946f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e895920"/>
        <function-ref name="stop" scoped="" ref="0x7e895ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7e8b7aa8" loc="35:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e8b7aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e8b7c80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e8b7d60"/>
        <function-ref name="led1On" scoped="" ref="0x7e8b7e40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e8b7f20"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e860018"/>
        <function-ref name="get" scoped="" ref="0x7e8600f8"/>
        <function-ref name="led1Off" scoped="" ref="0x7e8601d8"/>
        <function-ref name="led2Off" scoped="" ref="0x7e860558"/>
        <function-ref name="set" scoped="" ref="0x7e8602b8"/>
        <function-ref name="led0On" scoped="" ref="0x7e860398"/>
        <function-ref name="led2On" scoped="" ref="0x7e860478"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7e854390" loc="39:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7e854390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e854568"/>
        <function-ref name="isInput" scoped="" ref="0x7e854648"/>
        <function-ref name="toggle" scoped="" ref="0x7e854728"/>
        <function-ref name="isOutput" scoped="" ref="0x7e854808"/>
        <function-ref name="get" scoped="" ref="0x7e8548e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e8549c8"/>
        <function-ref name="set" scoped="" ref="0x7e854aa8"/>
        <function-ref name="clr" scoped="" ref="0x7e854b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e855410" loc="35:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e855410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e8555e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7e854d00" loc="40:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7e854d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e854ed8"/>
        <function-ref name="isInput" scoped="" ref="0x7e853010"/>
        <function-ref name="toggle" scoped="" ref="0x7e8530f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e8531d0"/>
        <function-ref name="get" scoped="" ref="0x7e8532b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e853390"/>
        <function-ref name="set" scoped="" ref="0x7e853470"/>
        <function-ref name="clr" scoped="" ref="0x7e853550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7e855730" loc="36:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e855730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e855908"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e8559e8"/>
        <function-ref name="led1On" scoped="" ref="0x7e855ac8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e855ba8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e855c88"/>
        <function-ref name="get" scoped="" ref="0x7e855d68"/>
        <function-ref name="led1Off" scoped="" ref="0x7e855e48"/>
        <function-ref name="led2Off" scoped="" ref="0x7e8541d8"/>
        <function-ref name="set" scoped="" ref="0x7e855f28"/>
        <function-ref name="led0On" scoped="" ref="0x7e854018"/>
        <function-ref name="led2On" scoped="" ref="0x7e8540f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7e8536c8" loc="41:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7e8536c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e8538a0"/>
        <function-ref name="isInput" scoped="" ref="0x7e853980"/>
        <function-ref name="toggle" scoped="" ref="0x7e853a60"/>
        <function-ref name="isOutput" scoped="" ref="0x7e853b40"/>
        <function-ref name="get" scoped="" ref="0x7e853c20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e853d00"/>
        <function-ref name="set" scoped="" ref="0x7e853de0"/>
        <function-ref name="clr" scoped="" ref="0x7e853ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7e834010" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7e834010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e8341e8"/>
        <function-ref name="isInput" scoped="" ref="0x7e8342c8"/>
        <function-ref name="toggle" scoped="" ref="0x7e8343a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7e834488"/>
        <function-ref name="get" scoped="" ref="0x7e834568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e834648"/>
        <function-ref name="set" scoped="" ref="0x7e834728"/>
        <function-ref name="clr" scoped="" ref="0x7e834808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7e8349a0" loc="36:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7e8349a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e834b78"/>
        <function-ref name="isInput" scoped="" ref="0x7e834c58"/>
        <function-ref name="toggle" scoped="" ref="0x7e834d38"/>
        <function-ref name="isOutput" scoped="" ref="0x7e834e18"/>
        <function-ref name="get" scoped="" ref="0x7e834ef8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e833010"/>
        <function-ref name="set" scoped="" ref="0x7e8330f0"/>
        <function-ref name="clr" scoped="" ref="0x7e8331d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7e833cc8" loc="38:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e833cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e833ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7e833368" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7e833368"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e833540"/>
        <function-ref name="isInput" scoped="" ref="0x7e833620"/>
        <function-ref name="toggle" scoped="" ref="0x7e833700"/>
        <function-ref name="isOutput" scoped="" ref="0x7e8337e0"/>
        <function-ref name="get" scoped="" ref="0x7e8338c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e8339a0"/>
        <function-ref name="set" scoped="" ref="0x7e833a80"/>
        <function-ref name="clr" scoped="" ref="0x7e833b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e861900" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="LEDControllerC.LEDTimer1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e861900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e828208"/>
        <function-ref name="fired" scoped="" ref="0x7e831618"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e831bb8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e8319d8"/>
        <function-ref name="getdt" scoped="" ref="0x7e8285c8"/>
        <function-ref name="gett0" scoped="" ref="0x7e8283e8"/>
        <function-ref name="isRunning" scoped="" ref="0x7e8317f8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e861f28"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e831ed8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e8311b8"/>
        <function-ref name="stop" scoped="" ref="0x7e831438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e827280" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="LEDControllerC.LEDTimer2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e827280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e826bf0"/>
        <function-ref name="fired" scoped="" ref="0x7e826010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e8265b0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e8263d0"/>
        <function-ref name="getdt" scoped="" ref="0x7e825010"/>
        <function-ref name="gett0" scoped="" ref="0x7e826dd0"/>
        <function-ref name="isRunning" scoped="" ref="0x7e8261f0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e8278a8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e8268d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e827b28"/>
        <function-ref name="stop" scoped="" ref="0x7e827da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e825cb0" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="LEDControllerC.LEDTimer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e825cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e822650"/>
        <function-ref name="fired" scoped="" ref="0x7e8239c8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e822010"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e823d88"/>
        <function-ref name="getdt" scoped="" ref="0x7e822a10"/>
        <function-ref name="gett0" scoped="" ref="0x7e822830"/>
        <function-ref name="isRunning" scoped="" ref="0x7e823ba8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e8232e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e822330"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e823568"/>
        <function-ref name="stop" scoped="" ref="0x7e8237e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e821b08" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="LEDControllerC.IntervalTimer1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e821b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e8174c8"/>
        <function-ref name="fired" scoped="" ref="0x7e8208c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e820e60"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e820c80"/>
        <function-ref name="getdt" scoped="" ref="0x7e817888"/>
        <function-ref name="gett0" scoped="" ref="0x7e8176a8"/>
        <function-ref name="isRunning" scoped="" ref="0x7e820aa0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e8201e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e8171a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e820460"/>
        <function-ref name="stop" scoped="" ref="0x7e8206e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e8165a8" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="LEDControllerC.IntervalTimer2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e8165a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e815ed0"/>
        <function-ref name="fired" scoped="" ref="0x7e8152f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e815890"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e8156b0"/>
        <function-ref name="getdt" scoped="" ref="0x7e8142b8"/>
        <function-ref name="gett0" scoped="" ref="0x7e8140d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7e8154d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e816bd0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e815bb0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e816e50"/>
        <function-ref name="stop" scoped="" ref="0x7e815110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e812010" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="LEDControllerC.IntervalTimer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e812010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e811928"/>
        <function-ref name="fired" scoped="" ref="0x7e812d18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e8112e8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e811108"/>
        <function-ref name="getdt" scoped="" ref="0x7e811ce8"/>
        <function-ref name="gett0" scoped="" ref="0x7e811b08"/>
        <function-ref name="isRunning" scoped="" ref="0x7e812ef8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e812638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e811608"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e8128b8"/>
        <function-ref name="stop" scoped="" ref="0x7e812b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LCDSetter" ref="0x7e777890" loc="23:LCDSetterC.nc">
      <component-ref qname="LCDSetterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LCDSetter" scoped="" ref="0x7e777890"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCDSetter"/>
      </instance>
      <interface-functions>
        <function-ref name="setLCDDevicePriorty" scoped="" ref="0x7e777a68"/>
        <function-ref name="init" scoped="" ref="0x7e777b48"/>
        <function-ref name="setLCDReceivePacket" scoped="" ref="0x7e777c28"/>
        <function-ref name="setLCDData" scoped="" ref="0x7e777d08"/>
        <function-ref name="setLCDStatus" scoped="" ref="0x7e777de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LCDSetter" ref="0x7e800b68" loc="23:LCDSetterM.nc">
      <component-ref qname="LCDSetterM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LCDSetter" scoped="" ref="0x7e800b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCDSetter"/>
      </instance>
      <interface-functions>
        <function-ref name="setLCDDevicePriorty" scoped="" ref="0x7e800d40"/>
        <function-ref name="init" scoped="" ref="0x7e800e20"/>
        <function-ref name="setLCDReceivePacket" scoped="" ref="0x7e800f00"/>
        <function-ref name="setLCDData" scoped="" ref="0x7e774010"/>
        <function-ref name="setLCDStatus" scoped="" ref="0x7e7740f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Interaction" ref="0x7e765cf8" loc="29:LCDSetterM.nc">
      <component-ref qname="LCDSetterM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interaction" scoped="" ref="0x7e765cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Interaction"/>
      </instance>
      <interface-functions>
        <function-ref name="StartDoneConfiguration" scoped="" ref="0x7e765ed0"/>
        <function-ref name="getSensorDataDone" scoped="" ref="0x7e769010"/>
        <function-ref name="Urgency_Data" scoped="" ref="0x7e7690f0"/>
        <function-ref name="Process_CMD" scoped="" ref="0x7e7691d0"/>
        <function-ref name="SetSamplingTime" scoped="" ref="0x7e7692b0"/>
        <function-ref name="getSensorData" scoped="" ref="0x7e769390"/>
        <function-ref name="StartConfiguration" scoped="" ref="0x7e769470"/>
        <function-ref name="Send_LongData" scoped="" ref="0x7e769550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCSuartDBGstd" ref="0x7e761d08" loc="30:LCDSetterM.nc">
      <component-ref qname="LCDSetterM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCSuartDBGstd" scoped="" ref="0x7e761d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e761ee0"/>
        <function-ref name="stop" scoped="" ref="0x7e763010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TryToSetTimer" ref="0x7e753010" loc="52:LCDSetterM.nc">
      <component-ref qname="LCDSetterM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TryToSetTimer" scoped="" ref="0x7e753010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e7531e8"/>
        <function-ref name="runTask" scoped="" ref="0x7e7532c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TryToConfigure" ref="0x7e7550f0" loc="51:LCDSetterM.nc">
      <component-ref qname="LCDSetterM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TryToConfigure" scoped="" ref="0x7e7550f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e7552c8"/>
        <function-ref name="runTask" scoped="" ref="0x7e7553a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCSuartDBG" ref="0x7e758398" loc="31:LCDSetterM.nc">
      <component-ref qname="LCDSetterM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCSuartDBG" scoped="" ref="0x7e758398"/></type-interface>
      <instance>
        <interfacedef-ref qname="SCSuartDBG"/>
      </instance>
      <interface-functions>
        <function-ref name="UARTSend" scoped="" ref="0x7e758570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7e774310" loc="27:LCDSetterM.nc">
      <component-ref qname="LCDSetterM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e774310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e773c28"/>
        <function-ref name="fired" scoped="" ref="0x7e773048"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e7735e8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e773408"/>
        <function-ref name="getdt" scoped="" ref="0x7e772010"/>
        <function-ref name="gett0" scoped="" ref="0x7e773e08"/>
        <function-ref name="isRunning" scoped="" ref="0x7e773228"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e774938"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e773908"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e774bb8"/>
        <function-ref name="stop" scoped="" ref="0x7e774e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e775d08" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="LCDSetterC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e775d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e714650"/>
        <function-ref name="fired" scoped="" ref="0x7e715a30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e714010"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e715df0"/>
        <function-ref name="getdt" scoped="" ref="0x7e714a10"/>
        <function-ref name="gett0" scoped="" ref="0x7e714830"/>
        <function-ref name="isRunning" scoped="" ref="0x7e715c10"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e715350"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e714330"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e7155d0"/>
        <function-ref name="stop" scoped="" ref="0x7e715850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interaction" ref="0x7e704af0" loc="23:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
      <component-ref qname="InteractionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interaction" scoped="" ref="0x7e704af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Interaction"/>
      </instance>
      <interface-functions>
        <function-ref name="StartDoneConfiguration" scoped="" ref="0x7e704cc8"/>
        <function-ref name="getSensorDataDone" scoped="" ref="0x7e704da8"/>
        <function-ref name="Urgency_Data" scoped="" ref="0x7e704e88"/>
        <function-ref name="Process_CMD" scoped="" ref="0x7e706010"/>
        <function-ref name="SetSamplingTime" scoped="" ref="0x7e7060f0"/>
        <function-ref name="getSensorData" scoped="" ref="0x7e7061d0"/>
        <function-ref name="StartConfiguration" scoped="" ref="0x7e7062b0"/>
        <function-ref name="Send_LongData" scoped="" ref="0x7e706390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SensorCheckTimer" ref="0x7e6f8960" loc="28:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SensorCheckTimer" scoped="" ref="0x7e6f8960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e6f5330"/>
        <function-ref name="fired" scoped="" ref="0x7e6f66f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e6f6c90"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e6f6ab0"/>
        <function-ref name="getdt" scoped="" ref="0x7e6f56f0"/>
        <function-ref name="gett0" scoped="" ref="0x7e6f5510"/>
        <function-ref name="isRunning" scoped="" ref="0x7e6f68d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e6f6010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e6f5010"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e6f6290"/>
        <function-ref name="stop" scoped="" ref="0x7e6f6510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBasicSensor" ref="0x7e673a10" loc="339:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBasicSensor" scoped="" ref="0x7e673a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e673be8"/>
        <function-ref name="runTask" scoped="" ref="0x7e673cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event_Urgency_Data" ref="0x7e6b7b98" loc="134:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Event_Urgency_Data" scoped="" ref="0x7e6b7b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e6b7d70"/>
        <function-ref name="runTask" scoped="" ref="0x7e6b7e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="C328_Reset_Timer" ref="0x7e6f5960" loc="29:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="C328_Reset_Timer" scoped="" ref="0x7e6f5960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e6f2330"/>
        <function-ref name="fired" scoped="" ref="0x7e6f46f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e6f4c90"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e6f4ab0"/>
        <function-ref name="getdt" scoped="" ref="0x7e6f26f0"/>
        <function-ref name="gett0" scoped="" ref="0x7e6f2510"/>
        <function-ref name="isRunning" scoped="" ref="0x7e6f48d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e6f4010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e6f2010"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e6f4290"/>
        <function-ref name="stop" scoped="" ref="0x7e6f4510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read_Humi" ref="0x7e6e73b0" loc="32:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read_Humi" scoped="" ref="0x7e6e73b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e6e79d8"/>
        <function-ref name="readDone" scoped="" ref="0x7e6e7bb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProcessCMD" ref="0x7e685290" loc="293:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProcessCMD" scoped="" ref="0x7e685290"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e685468"/>
        <function-ref name="runTask" scoped="" ref="0x7e685548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read_Ultrared" ref="0x7e6e67a8" loc="35:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read_Ultrared" scoped="" ref="0x7e6e67a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e6e6dd0"/>
        <function-ref name="readDone" scoped="" ref="0x7e6e5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interaction" ref="0x7e701308" loc="22:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interaction" scoped="" ref="0x7e701308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Interaction"/>
      </instance>
      <interface-functions>
        <function-ref name="StartDoneConfiguration" scoped="" ref="0x7e7014e0"/>
        <function-ref name="getSensorDataDone" scoped="" ref="0x7e7015c0"/>
        <function-ref name="Urgency_Data" scoped="" ref="0x7e7016a0"/>
        <function-ref name="Process_CMD" scoped="" ref="0x7e701780"/>
        <function-ref name="SetSamplingTime" scoped="" ref="0x7e701860"/>
        <function-ref name="getSensorData" scoped="" ref="0x7e701940"/>
        <function-ref name="StartConfiguration" scoped="" ref="0x7e701a20"/>
        <function-ref name="Send_LongData" scoped="" ref="0x7e701b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read_Photo" ref="0x7e6f0bc8" loc="34:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read_Photo" scoped="" ref="0x7e6f0bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e6e6218"/>
        <function-ref name="readDone" scoped="" ref="0x7e6e63f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Set_C328_Restart_Timer_START" ref="0x7e6d00e0" loc="66:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Set_C328_Restart_Timer_START" scoped="" ref="0x7e6d00e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e6d02b8"/>
        <function-ref name="runTask" scoped="" ref="0x7e6d0398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CommunicationWithOPT" ref="0x7e6d6348" loc="37:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CommunicationWithOPT" scoped="" ref="0x7e6d6348"/></type-interface>
      <instance>
        <interfacedef-ref qname="CommunicationWithOPT"/>
      </instance>
      <interface-functions>
        <function-ref name="parsing_config" scoped="" ref="0x7e6d6de0"/>
        <function-ref name="RequestLongMSG" scoped="" ref="0x7e6d6600"/>
        <function-ref name="SpecialControlMSG" scoped="" ref="0x7e6d66e0"/>
        <function-ref name="parsing_control" scoped="" ref="0x7e6d67c0"/>
        <function-ref name="parsing_longDT" scoped="" ref="0x7e6d68a0"/>
        <function-ref name="RequestSensorMSG" scoped="" ref="0x7e6d6980"/>
        <function-ref name="SendConfigureMSG" scoped="" ref="0x7e6d6a60"/>
        <function-ref name="SendLongMSG" scoped="" ref="0x7e6d6b40"/>
        <function-ref name="start" scoped="" ref="0x7e6d6c20"/>
        <function-ref name="SendControlMSG" scoped="" ref="0x7e6d6d00"/>
        <function-ref name="parsing_sensor" scoped="" ref="0x7e6d6520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TaskStartDoneConfiguration" ref="0x7e6d4240" loc="56:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskStartDoneConfiguration" scoped="" ref="0x7e6d4240"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e6d4418"/>
        <function-ref name="runTask" scoped="" ref="0x7e6d44f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TryToGetSensorData" ref="0x7e69a6e8" loc="211:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TryToGetSensorData" scoped="" ref="0x7e69a6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e69a8c0"/>
        <function-ref name="runTask" scoped="" ref="0x7e69a9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e701c88" loc="26:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e701c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e701e60"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e700010"/>
        <function-ref name="led1On" scoped="" ref="0x7e7000f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e7001d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e7002b0"/>
        <function-ref name="get" scoped="" ref="0x7e700390"/>
        <function-ref name="led1Off" scoped="" ref="0x7e700470"/>
        <function-ref name="led2Off" scoped="" ref="0x7e7007f0"/>
        <function-ref name="set" scoped="" ref="0x7e700550"/>
        <function-ref name="led0On" scoped="" ref="0x7e700630"/>
        <function-ref name="led2On" scoped="" ref="0x7e700710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TaskGetSensorDataDone" ref="0x7e6d2238" loc="57:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskGetSensorDataDone" scoped="" ref="0x7e6d2238"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e6d2490"/>
        <function-ref name="runTask" scoped="" ref="0x7e6d2570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfigTimeout" ref="0x7e700a00" loc="27:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigTimeout" scoped="" ref="0x7e700a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e6f8330"/>
        <function-ref name="fired" scoped="" ref="0x7e6f9728"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e6f9cc8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e6f9ae8"/>
        <function-ref name="getdt" scoped="" ref="0x7e6f86f0"/>
        <function-ref name="gett0" scoped="" ref="0x7e6f8510"/>
        <function-ref name="isRunning" scoped="" ref="0x7e6f9908"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e6f9048"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e6f8010"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e6f92c8"/>
        <function-ref name="stop" scoped="" ref="0x7e6f9548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read_Temp" ref="0x7e6f0010" loc="33:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read_Temp" scoped="" ref="0x7e6f0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e6f0638"/>
        <function-ref name="readDone" scoped="" ref="0x7e6f0818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCSuartDBG" ref="0x7e6e3010" loc="38:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCSuartDBG" scoped="" ref="0x7e6e3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SCSuartDBG"/>
      </instance>
      <interface-functions>
        <function-ref name="UARTSend" scoped="" ref="0x7e6e31e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e658268" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="InteractionC.ConfigTimeout"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e658268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e657bf0"/>
        <function-ref name="fired" scoped="" ref="0x7e657010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e6575b0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e6573d0"/>
        <function-ref name="getdt" scoped="" ref="0x7e655010"/>
        <function-ref name="gett0" scoped="" ref="0x7e657dd0"/>
        <function-ref name="isRunning" scoped="" ref="0x7e6571f0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e658890"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e6578d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e658b10"/>
        <function-ref name="stop" scoped="" ref="0x7e658d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e655cb8" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="InteractionC.SensorCheckTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e655cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e653650"/>
        <function-ref name="fired" scoped="" ref="0x7e6549d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e653010"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e654d98"/>
        <function-ref name="getdt" scoped="" ref="0x7e653a10"/>
        <function-ref name="gett0" scoped="" ref="0x7e653830"/>
        <function-ref name="isRunning" scoped="" ref="0x7e654bb8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e6542f8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e653330"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e654578"/>
        <function-ref name="stop" scoped="" ref="0x7e6547f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e6516e0" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="InteractionC.C328_Reset_TimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e6516e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e64a068"/>
        <function-ref name="fired" scoped="" ref="0x7e650470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e650a10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e650830"/>
        <function-ref name="getdt" scoped="" ref="0x7e64a428"/>
        <function-ref name="gett0" scoped="" ref="0x7e64a248"/>
        <function-ref name="isRunning" scoped="" ref="0x7e650650"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e651d08"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e650d30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e650010"/>
        <function-ref name="stop" scoped="" ref="0x7e650290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7e49a0c0" loc="47:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11C.nc">
      <component-ref qname="InteractionC.SensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x7e49a0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e49a6e8"/>
        <function-ref name="readDone" scoped="" ref="0x7e49a8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7e49b4f0" loc="46:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11C.nc">
      <component-ref qname="InteractionC.SensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x7e49b4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e49bb18"/>
        <function-ref name="readDone" scoped="" ref="0x7e49bcf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Hum" ref="0x7d9706d0" loc="50:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="InteractionC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sht11Hum" scoped="" ref="0x7d9706d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7d9708a8"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7d970988"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7d970a68"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7d970b48"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7d970c28"/>
        <function-ref name="reset" scoped="" ref="0x7d970d08"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7d970de8"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7d970ec8"/>
        <function-ref name="resetDone" scoped="" ref="0x7d96f010"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7d96f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7d972230" loc="45:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="InteractionC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x7d972230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d972858"/>
        <function-ref name="readDone" scoped="" ref="0x7d972a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempResource" ref="0x7d972d50" loc="47:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="InteractionC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempResource" scoped="" ref="0x7d972d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d972f28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d971018"/>
        <function-ref name="request" scoped="" ref="0x7d9710f8"/>
        <function-ref name="granted" scoped="" ref="0x7d9711d8"/>
        <function-ref name="isOwner" scoped="" ref="0x7d9712b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Temp" ref="0x7d971b10" loc="49:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="InteractionC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sht11Temp" scoped="" ref="0x7d971b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7d971ce8"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7d971dc8"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7d971ea8"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7d970010"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7d9700f0"/>
        <function-ref name="reset" scoped="" ref="0x7d9701d0"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7d9702b0"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7d970390"/>
        <function-ref name="resetDone" scoped="" ref="0x7d970470"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7d970550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumResource" ref="0x7d971438" loc="48:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="InteractionC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HumResource" scoped="" ref="0x7d971438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d971610"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d9716f0"/>
        <function-ref name="request" scoped="" ref="0x7d9717d0"/>
        <function-ref name="granted" scoped="" ref="0x7d9718b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7d971990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7d973670" loc="44:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="InteractionC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x7d973670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d973c98"/>
        <function-ref name="readDone" scoped="" ref="0x7d973e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x7e6054f8" loc="45:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SensirionSht11" scoped="" ref="0x7e6054f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7e6056d0"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7e6057b0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7e605890"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7e605970"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7e605a50"/>
        <function-ref name="reset" scoped="" ref="0x7e605b30"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7e605c10"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7e605cf0"/>
        <function-ref name="resetDone" scoped="" ref="0x7e605dd0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7e605eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e606b88" loc="44:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e606b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e606d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e606e40"/>
        <function-ref name="request" scoped="" ref="0x7e606f20"/>
        <function-ref name="granted" scoped="" ref="0x7e605018"/>
        <function-ref name="isOwner" scoped="" ref="0x7e6050f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptDATA" ref="0x7e5a7010" loc="58:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptDATA" scoped="" ref="0x7e5a7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e5a71e8"/>
        <function-ref name="disable" scoped="" ref="0x7e5a72c8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e5a73a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e5a7488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readSensor" ref="0x7e5a36a8" loc="102:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readSensor" scoped="" ref="0x7e5a36a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e5a3880"/>
        <function-ref name="runTask" scoped="" ref="0x7e5a3960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalStatusDone" ref="0x7e5a3270" loc="103:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalStatusDone" scoped="" ref="0x7e5a3270"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e5a3448"/>
        <function-ref name="runTask" scoped="" ref="0x7e5a3528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CLOCK" ref="0x7e5a85f0" loc="57:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CLOCK" scoped="" ref="0x7e5a85f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e5a87c8"/>
        <function-ref name="isInput" scoped="" ref="0x7e5a88a8"/>
        <function-ref name="toggle" scoped="" ref="0x7e5a8988"/>
        <function-ref name="isOutput" scoped="" ref="0x7e5a8a68"/>
        <function-ref name="get" scoped="" ref="0x7e5a8b48"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e5a8c28"/>
        <function-ref name="set" scoped="" ref="0x7e5a8d08"/>
        <function-ref name="clr" scoped="" ref="0x7e5a8de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x7e5a9068" loc="54:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SensirionSht11" scoped="" ref="0x7e5a9068"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7e5a9250"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7e5a9330"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7e5a9410"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7e5a94f0"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7e5a95d0"/>
        <function-ref name="reset" scoped="" ref="0x7e5a96b0"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7e5a9790"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7e5a9870"/>
        <function-ref name="resetDone" scoped="" ref="0x7e5a9950"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7e5a9a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x7e5a9bb0" loc="56:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x7e5a9bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e5a9d88"/>
        <function-ref name="isInput" scoped="" ref="0x7e5a9e68"/>
        <function-ref name="toggle" scoped="" ref="0x7e5a8010"/>
        <function-ref name="isOutput" scoped="" ref="0x7e5a80f0"/>
        <function-ref name="get" scoped="" ref="0x7e5a81d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e5a82b0"/>
        <function-ref name="set" scoped="" ref="0x7e5a8390"/>
        <function-ref name="clr" scoped="" ref="0x7e5a8470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e5a5588" loc="62:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e5a5588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e5a5760"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e5a5840"/>
        <function-ref name="led1On" scoped="" ref="0x7e5a5920"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e5a5a00"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e5a5ae0"/>
        <function-ref name="get" scoped="" ref="0x7e5a5bc0"/>
        <function-ref name="led1Off" scoped="" ref="0x7e5a5ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7e5a30f0"/>
        <function-ref name="set" scoped="" ref="0x7e5a5e60"/>
        <function-ref name="led2Off" scoped="" ref="0x7e5a5d80"/>
        <function-ref name="led0On" scoped="" ref="0x7e5a3010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7e5a7678" loc="60:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e5a7678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e5a5010"/>
        <function-ref name="fired" scoped="" ref="0x7e5a6398"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e5a6938"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e5a6758"/>
        <function-ref name="getdt" scoped="" ref="0x7e5a53d0"/>
        <function-ref name="gett0" scoped="" ref="0x7e5a51f0"/>
        <function-ref name="isRunning" scoped="" ref="0x7e5a6578"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e5a7ca0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e5a6c58"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e5a7f20"/>
        <function-ref name="stop" scoped="" ref="0x7e5a61b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptDATA" ref="0x7e598b40" loc="47:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptDATA" scoped="" ref="0x7e598b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e598d18"/>
        <function-ref name="disable" scoped="" ref="0x7e598df8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e598ed8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e597010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCK" ref="0x7e5981a8" loc="46:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7e5981a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e598380"/>
        <function-ref name="isInput" scoped="" ref="0x7e598460"/>
        <function-ref name="toggle" scoped="" ref="0x7e598540"/>
        <function-ref name="isOutput" scoped="" ref="0x7e598620"/>
        <function-ref name="get" scoped="" ref="0x7e598700"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e5987e0"/>
        <function-ref name="set" scoped="" ref="0x7e5988c0"/>
        <function-ref name="clr" scoped="" ref="0x7e5989a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DATA" ref="0x7e5997f0" loc="45:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x7e5997f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e5999c8"/>
        <function-ref name="isInput" scoped="" ref="0x7e599aa8"/>
        <function-ref name="toggle" scoped="" ref="0x7e599b88"/>
        <function-ref name="isOutput" scoped="" ref="0x7e599c68"/>
        <function-ref name="get" scoped="" ref="0x7e599d48"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e599e28"/>
        <function-ref name="set" scoped="" ref="0x7e599f08"/>
        <function-ref name="clr" scoped="" ref="0x7e598010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e599100" loc="44:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e599100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e5992d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e5993b8"/>
        <function-ref name="request" scoped="" ref="0x7e599498"/>
        <function-ref name="granted" scoped="" ref="0x7e599578"/>
        <function-ref name="isOwner" scoped="" ref="0x7e599658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7e589088" loc="43:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e589088"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e589260"/>
        <function-ref name="stopDone" scoped="" ref="0x7e589340"/>
        <function-ref name="start" scoped="" ref="0x7e589420"/>
        <function-ref name="stop" scoped="" ref="0x7e589500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7e587d78" loc="49:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7e587d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e586010"/>
        <function-ref name="runTask" scoped="" ref="0x7e5860f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7e587010" loc="46:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7e587010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e5871e8"/>
        <function-ref name="isInput" scoped="" ref="0x7e5872c8"/>
        <function-ref name="toggle" scoped="" ref="0x7e5873a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7e587488"/>
        <function-ref name="get" scoped="" ref="0x7e587568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e587648"/>
        <function-ref name="set" scoped="" ref="0x7e587728"/>
        <function-ref name="clr" scoped="" ref="0x7e587808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x7e588618" loc="45:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x7e588618"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e5887f0"/>
        <function-ref name="isInput" scoped="" ref="0x7e5888d0"/>
        <function-ref name="toggle" scoped="" ref="0x7e5889b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e588a90"/>
        <function-ref name="get" scoped="" ref="0x7e588b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e588c50"/>
        <function-ref name="set" scoped="" ref="0x7e588d30"/>
        <function-ref name="clr" scoped="" ref="0x7e588e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7e589700" loc="44:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e589700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e588068"/>
        <function-ref name="fired" scoped="" ref="0x7e590470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e590a10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e590830"/>
        <function-ref name="getdt" scoped="" ref="0x7e588428"/>
        <function-ref name="gett0" scoped="" ref="0x7e588248"/>
        <function-ref name="isRunning" scoped="" ref="0x7e590650"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e589d28"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e590d30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e590010"/>
        <function-ref name="stop" scoped="" ref="0x7e590290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e594bc8" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="HplSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e594bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e580508"/>
        <function-ref name="fired" scoped="" ref="0x7e5818f8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e581e98"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e581cb8"/>
        <function-ref name="getdt" scoped="" ref="0x7e5808c8"/>
        <function-ref name="gett0" scoped="" ref="0x7e5806e8"/>
        <function-ref name="isRunning" scoped="" ref="0x7e581ad8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e581218"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e5801e8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e581498"/>
        <function-ref name="stop" scoped="" ref="0x7e581718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x7e5717c8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x7e5717c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e5719a0"/>
        <function-ref name="fired" scoped="" ref="0x7e571a80"/>
        <function-ref name="disable" scoped="" ref="0x7e571b60"/>
        <function-ref name="edge" scoped="" ref="0x7e571c40"/>
        <function-ref name="enable" scoped="" ref="0x7e571d20"/>
        <function-ref name="getValue" scoped="" ref="0x7e571e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7e576010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7e576010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e5761e8"/>
        <function-ref name="fired" scoped="" ref="0x7e5762c8"/>
        <function-ref name="disable" scoped="" ref="0x7e5763a8"/>
        <function-ref name="edge" scoped="" ref="0x7e576488"/>
        <function-ref name="enable" scoped="" ref="0x7e576568"/>
        <function-ref name="getValue" scoped="" ref="0x7e576648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x7e5757c8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x7e5757c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e5759a0"/>
        <function-ref name="fired" scoped="" ref="0x7e575a80"/>
        <function-ref name="disable" scoped="" ref="0x7e575b60"/>
        <function-ref name="edge" scoped="" ref="0x7e575c40"/>
        <function-ref name="enable" scoped="" ref="0x7e575d20"/>
        <function-ref name="getValue" scoped="" ref="0x7e575e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x7e570010" loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x7e570010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e5701e8"/>
        <function-ref name="fired" scoped="" ref="0x7e5702c8"/>
        <function-ref name="disable" scoped="" ref="0x7e5703a8"/>
        <function-ref name="edge" scoped="" ref="0x7e570488"/>
        <function-ref name="enable" scoped="" ref="0x7e570568"/>
        <function-ref name="getValue" scoped="" ref="0x7e570648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7e5767c8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7e5767c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e5769a0"/>
        <function-ref name="fired" scoped="" ref="0x7e576a80"/>
        <function-ref name="disable" scoped="" ref="0x7e576b60"/>
        <function-ref name="edge" scoped="" ref="0x7e576c40"/>
        <function-ref name="enable" scoped="" ref="0x7e576d20"/>
        <function-ref name="getValue" scoped="" ref="0x7e576e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x7e571010" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x7e571010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e5711e8"/>
        <function-ref name="fired" scoped="" ref="0x7e5712c8"/>
        <function-ref name="disable" scoped="" ref="0x7e5713a8"/>
        <function-ref name="edge" scoped="" ref="0x7e571488"/>
        <function-ref name="enable" scoped="" ref="0x7e571568"/>
        <function-ref name="getValue" scoped="" ref="0x7e571648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7e572778" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7e572778"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e572950"/>
        <function-ref name="fired" scoped="" ref="0x7e572a30"/>
        <function-ref name="disable" scoped="" ref="0x7e572b10"/>
        <function-ref name="edge" scoped="" ref="0x7e572bf0"/>
        <function-ref name="enable" scoped="" ref="0x7e572cd0"/>
        <function-ref name="getValue" scoped="" ref="0x7e572db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7e575010" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7e575010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e5751e8"/>
        <function-ref name="fired" scoped="" ref="0x7e5752c8"/>
        <function-ref name="disable" scoped="" ref="0x7e5753a8"/>
        <function-ref name="edge" scoped="" ref="0x7e575488"/>
        <function-ref name="enable" scoped="" ref="0x7e575568"/>
        <function-ref name="getValue" scoped="" ref="0x7e575648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x7e567ce8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x7e567ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e567ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x7e565b80" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x7e565b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e565d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x7e5675f8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x7e5675f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e5677d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x7e566088" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x7e566088"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e566260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x7e565ef8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x7e565ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e5670e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x7e567970" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x7e567970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e567b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x7e565808" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x7e565808"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e5659e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x7e567280" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x7e567280"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e567458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e554228" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e554228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e554400"/>
        <function-ref name="fired" scoped="" ref="0x7e5544e0"/>
        <function-ref name="disable" scoped="" ref="0x7e5545c0"/>
        <function-ref name="edge" scoped="" ref="0x7e5546a0"/>
        <function-ref name="enable" scoped="" ref="0x7e554780"/>
        <function-ref name="getValue" scoped="" ref="0x7e554860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e5549e0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e5549e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e554bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e545228" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e545228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e545400"/>
        <function-ref name="fired" scoped="" ref="0x7e5454e0"/>
        <function-ref name="disable" scoped="" ref="0x7e5455c0"/>
        <function-ref name="edge" scoped="" ref="0x7e5456a0"/>
        <function-ref name="enable" scoped="" ref="0x7e545780"/>
        <function-ref name="getValue" scoped="" ref="0x7e545860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e5459e0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e5459e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e545bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e542228" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e542228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e542400"/>
        <function-ref name="fired" scoped="" ref="0x7e5424e0"/>
        <function-ref name="disable" scoped="" ref="0x7e5425c0"/>
        <function-ref name="edge" scoped="" ref="0x7e5426a0"/>
        <function-ref name="enable" scoped="" ref="0x7e542780"/>
        <function-ref name="getValue" scoped="" ref="0x7e542860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e5429e0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e5429e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e542bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e540228" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e540228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e540400"/>
        <function-ref name="fired" scoped="" ref="0x7e5404e0"/>
        <function-ref name="disable" scoped="" ref="0x7e5405c0"/>
        <function-ref name="edge" scoped="" ref="0x7e5406a0"/>
        <function-ref name="enable" scoped="" ref="0x7e540780"/>
        <function-ref name="getValue" scoped="" ref="0x7e540860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e5409e0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e5409e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e540bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e53b2d0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e53b2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e53b4a8"/>
        <function-ref name="fired" scoped="" ref="0x7e53b588"/>
        <function-ref name="disable" scoped="" ref="0x7e53b668"/>
        <function-ref name="edge" scoped="" ref="0x7e53b748"/>
        <function-ref name="enable" scoped="" ref="0x7e53b828"/>
        <function-ref name="getValue" scoped="" ref="0x7e53b908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e53ba88" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e53ba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e53bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e5393b0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e5393b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e539588"/>
        <function-ref name="fired" scoped="" ref="0x7e539668"/>
        <function-ref name="disable" scoped="" ref="0x7e539748"/>
        <function-ref name="edge" scoped="" ref="0x7e539828"/>
        <function-ref name="enable" scoped="" ref="0x7e539908"/>
        <function-ref name="getValue" scoped="" ref="0x7e5399e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e539b68" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e539b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e539d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e536538" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e536538"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e536710"/>
        <function-ref name="fired" scoped="" ref="0x7e5367f0"/>
        <function-ref name="disable" scoped="" ref="0x7e5368d0"/>
        <function-ref name="edge" scoped="" ref="0x7e5369b0"/>
        <function-ref name="enable" scoped="" ref="0x7e536a90"/>
        <function-ref name="getValue" scoped="" ref="0x7e536b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e536cf0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e536cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e536ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e5345e0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e5345e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e5347b8"/>
        <function-ref name="fired" scoped="" ref="0x7e534898"/>
        <function-ref name="disable" scoped="" ref="0x7e534978"/>
        <function-ref name="edge" scoped="" ref="0x7e534a58"/>
        <function-ref name="enable" scoped="" ref="0x7e534b38"/>
        <function-ref name="getValue" scoped="" ref="0x7e534c18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e534d98" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e534d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e533010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7e52a050" loc="9:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7e52a050"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e52a228"/>
        <function-ref name="fired" scoped="" ref="0x7e52a308"/>
        <function-ref name="disable" scoped="" ref="0x7e52a3e8"/>
        <function-ref name="edge" scoped="" ref="0x7e52a4c8"/>
        <function-ref name="enable" scoped="" ref="0x7e52a5a8"/>
        <function-ref name="getValue" scoped="" ref="0x7e52a688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7e52ba28" loc="8:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7e52ba28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e52bc00"/>
        <function-ref name="disable" scoped="" ref="0x7e52bce0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e52bdc0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e52bea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7e4cac20" loc="82:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7e4cac20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7e4cae08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7e4caee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7e4c9b88" loc="86:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7e4c9b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7e4c9d70"/>
        <function-ref name="configure" scoped="" ref="0x7e4c9e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceController" ref="0x7e4c9040" loc="83:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceController" scoped="" ref="0x7e4c9040"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceController"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e4c9218"/>
        <function-ref name="requested" scoped="" ref="0x7e4c92f8"/>
        <function-ref name="granted" scoped="" ref="0x7e4c93d8"/>
        <function-ref name="isOwner" scoped="" ref="0x7e4c94b8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7e4c9598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e4ca4e0" loc="81:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e4ca4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e4ca6c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e4ca7a8"/>
        <function-ref name="request" scoped="" ref="0x7e4ca888"/>
        <function-ref name="granted" scoped="" ref="0x7e4ca968"/>
        <function-ref name="isOwner" scoped="" ref="0x7e4caa48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7e4c96d8" loc="84:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7e4c96d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7e4c98b0"/>
        <function-ref name="userId" scoped="" ref="0x7e4c9990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d8fe010" loc="34:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d8fe010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d8fe1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7d8fe348" loc="35:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7d8fe348"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7d8fe520"/>
        <function-ref name="isEmpty" scoped="" ref="0x7d8fe600"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7d8fe6e0"/>
        <function-ref name="dequeue" scoped="" ref="0x7d8fe7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7d8fdc00" loc="54:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7d8fdc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7d8fdde8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7d8fdec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7d8fcb88" loc="59:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7d8fcb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7d8fcd70"/>
        <function-ref name="configure" scoped="" ref="0x7d8fce50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7d8fb010" loc="60:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7d8fb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7d8fb1e8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7d8fb2c8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7d8fb3a8"/>
        <function-ref name="dequeue" scoped="" ref="0x7d8fb488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceController" ref="0x7d8fc030" loc="55:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceController" scoped="" ref="0x7d8fc030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceController"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d8fc208"/>
        <function-ref name="requested" scoped="" ref="0x7d8fc2e8"/>
        <function-ref name="granted" scoped="" ref="0x7d8fc3c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7d8fc4a8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7d8fc588"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7d8fb5c8" loc="61:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7d8fb5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7d8fb7a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7d8fb880"/>
        <function-ref name="led1On" scoped="" ref="0x7d8fb960"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7d8fba40"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7d8fbb20"/>
        <function-ref name="get" scoped="" ref="0x7d8fbc00"/>
        <function-ref name="led1Off" scoped="" ref="0x7d8fbce0"/>
        <function-ref name="led0On" scoped="" ref="0x7d8f90f0"/>
        <function-ref name="set" scoped="" ref="0x7d8fbea0"/>
        <function-ref name="led2On" scoped="" ref="0x7d8fbdc0"/>
        <function-ref name="led2Off" scoped="" ref="0x7d8f9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7d8fd4c0" loc="53:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7d8fd4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d8fd6a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d8fd788"/>
        <function-ref name="request" scoped="" ref="0x7d8fd868"/>
        <function-ref name="granted" scoped="" ref="0x7d8fd948"/>
        <function-ref name="isOwner" scoped="" ref="0x7d8fda28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7d8fc6c8" loc="56:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7d8fc6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7d8fc8a0"/>
        <function-ref name="userId" scoped="" ref="0x7d8fc980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7d8f9270" loc="73:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7d8f9270"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d8f9448"/>
        <function-ref name="runTask" scoped="" ref="0x7d8f9528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7e4c6980" loc="59:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e4c6980"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e4c6b58"/>
        <function-ref name="stopDone" scoped="" ref="0x7e4c6c38"/>
        <function-ref name="start" scoped="" ref="0x7e4c6d18"/>
        <function-ref name="stop" scoped="" ref="0x7e4c6df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7e4c5010" loc="61:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7e4c5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7e4c51e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceController" ref="0x7e4c5328" loc="62:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceController" scoped="" ref="0x7e4c5328"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceController"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e4c5500"/>
        <function-ref name="requested" scoped="" ref="0x7e4c55e0"/>
        <function-ref name="granted" scoped="" ref="0x7e4c56c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7e4c57a0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7e4c5880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7e4c59c0" loc="63:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7e4c59c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7e4c5b98"/>
        <function-ref name="userId" scoped="" ref="0x7e4c5c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7d8e1408" loc="51:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7d8e1408"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7d8e15e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7d8e16c0"/>
        <function-ref name="start" scoped="" ref="0x7d8e17a0"/>
        <function-ref name="stop" scoped="" ref="0x7d8e1880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7d8e19c0" loc="53:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7d8e19c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7d8e1b98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7d8e0828" loc="68:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7d8e0828"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d8e0a00"/>
        <function-ref name="runTask" scoped="" ref="0x7d8e0ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceController" ref="0x7d8e1cd8" loc="54:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceController" scoped="" ref="0x7d8e1cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceController"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d8e1eb0"/>
        <function-ref name="requested" scoped="" ref="0x7d8e0010"/>
        <function-ref name="granted" scoped="" ref="0x7d8e00f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7d8e01d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7d8e02b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7d8e0c60" loc="63:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7d8e0c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d8e0e38"/>
        <function-ref name="runTask" scoped="" ref="0x7d8e0f18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7d8e1010" loc="50:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7d8e1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d8e11e8"/>
        <function-ref name="stop" scoped="" ref="0x7d8e12c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7d8e03f0" loc="55:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7d8e03f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7d8e05c8"/>
        <function-ref name="userId" scoped="" ref="0x7d8e06a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e4a35d8" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="HalSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e4a35d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e4a2ed0"/>
        <function-ref name="fired" scoped="" ref="0x7e4a22f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e4a2890"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e4a26b0"/>
        <function-ref name="getdt" scoped="" ref="0x7e4a12b8"/>
        <function-ref name="gett0" scoped="" ref="0x7e4a10d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7e4a24d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e4a3c00"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e4a2bb0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e4a3e80"/>
        <function-ref name="stop" scoped="" ref="0x7e4a2110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7e492ac8" loc="21:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoSensorC.nc">
      <component-ref qname="InteractionC.PhotoSensorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7e492ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e496108"/>
        <function-ref name="readDone" scoped="" ref="0x7e4962e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7d8d4690" loc="28:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoC.nc">
      <component-ref qname="InteractionC.PhotoSensorC.DemoChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7d8d4690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d8d4cb8"/>
        <function-ref name="readDone" scoped="" ref="0x7d8d4e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7d8d3e18" loc="28:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc">
      <component-ref qname="InteractionC.PhotoSensorC.DemoChannel.ADC_ShiftM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7d8d3e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d8d1468"/>
        <function-ref name="readDone" scoped="" ref="0x7d8d1648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="subRead" ref="0x7d8d19f0" loc="29:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc">
      <component-ref qname="InteractionC.PhotoSensorC.DemoChannel.ADC_ShiftM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="subRead" scoped="" ref="0x7d8d19f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d8d0048"/>
        <function-ref name="readDone" scoped="" ref="0x7d8d0228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7d8d0d98" loc="27:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoProC.nc">
      <component-ref qname="InteractionC.PhotoSensorC.DemoChannel.PhotoProC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7d8d0d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d8ce3e0"/>
        <function-ref name="readDone" scoped="" ref="0x7d8ce5c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7d8ca350" loc="25:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="InteractionC.PhotoSensorC.DemoChannel.PhotoProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7d8ca350"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7d8ca528"/>
        <function-ref name="configure" scoped="" ref="0x7d8ca608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7d8cb338" loc="22:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="InteractionC.PhotoSensorC.DemoChannel.PhotoProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7d8cb338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d8cb960"/>
        <function-ref name="readDone" scoped="" ref="0x7d8cbb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7d8cbe48" loc="24:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="InteractionC.PhotoSensorC.DemoChannel.PhotoProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d8cbe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7d8ca050"/>
        <function-ref name="getChannel" scoped="" ref="0x7d8ca130"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7d8ca210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7e470800" loc="18:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7e470800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e470e28"/>
        <function-ref name="readDone" scoped="" ref="0x7e46d048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7e468390" loc="19:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7e468390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e4689d8"/>
        <function-ref name="readDone" scoped="" ref="0x7e468bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7e46a1a8" loc="22:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e46a1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7e46a380"/>
        <function-ref name="getChannel" scoped="" ref="0x7e46a460"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7e46a540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7e46a920" loc="23:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e46a920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e46aaf8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e46abd8"/>
        <function-ref name="request" scoped="" ref="0x7e46acb8"/>
        <function-ref name="granted" scoped="" ref="0x7e46ad98"/>
        <function-ref name="isOwner" scoped="" ref="0x7e46ae78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7e45d100" loc="49:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7e45d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7e45d2d8"/>
        <function-ref name="configure" scoped="" ref="0x7e45d3b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x7e4549c0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7e4549c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7e454b98"/>
        <function-ref name="dataReady" scoped="" ref="0x7e454c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x7e45a568" loc="46:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7e45a568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7e45a740"/>
        <function-ref name="cancel" scoped="" ref="0x7e45a820"/>
        <function-ref name="dataReady" scoped="" ref="0x7e45a900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e4636e8" loc="45:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e4636e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e4638c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e4639a0"/>
        <function-ref name="request" scoped="" ref="0x7e463a80"/>
        <function-ref name="granted" scoped="" ref="0x7e463b60"/>
        <function-ref name="isOwner" scoped="" ref="0x7e463c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e451d30" loc="65:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e451d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e451f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x7e44d040" loc="68:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7e44d040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7e44d218"/>
        <function-ref name="dataReady" scoped="" ref="0x7e44d2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x7e44bb18" loc="67:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7e44bb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7e44bcf0"/>
        <function-ref name="cancel" scoped="" ref="0x7e44bdd0"/>
        <function-ref name="dataReady" scoped="" ref="0x7e44beb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x7e441468" loc="71:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7e441468"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7e441640"/>
        <function-ref name="getAdmux" scoped="" ref="0x7e441720"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7e441800"/>
        <function-ref name="isEnabled" scoped="" ref="0x7e4418e0"/>
        <function-ref name="enableAdc" scoped="" ref="0x7e4419c0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7e441aa0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7e441b80"/>
        <function-ref name="isComplete" scoped="" ref="0x7e441c60"/>
        <function-ref name="cancel" scoped="" ref="0x7e441d40"/>
        <function-ref name="disableAdc" scoped="" ref="0x7e441e20"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7e441f00"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7e44a010"/>
        <function-ref name="startConversion" scoped="" ref="0x7e44a0f0"/>
        <function-ref name="isStarted" scoped="" ref="0x7e44a250"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7e44a330"/>
        <function-ref name="setContinuous" scoped="" ref="0x7e44a410"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7e44a4f0"/>
        <function-ref name="getValue" scoped="" ref="0x7e44a5d0"/>
        <function-ref name="dataReady" scoped="" ref="0x7e44a6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7e44b710" loc="66:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7e44b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e44b8e8"/>
        <function-ref name="stop" scoped="" ref="0x7e44b9c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7e44a800" loc="72:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7e44a800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7e44a9d8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7e44aab8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7e44ab98"/>
        <function-ref name="actualMicro" scoped="" ref="0x7e44ac78"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7e44ad58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x7e424468" loc="36:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7e424468"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7e424640"/>
        <function-ref name="getAdmux" scoped="" ref="0x7e424720"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7e424800"/>
        <function-ref name="isEnabled" scoped="" ref="0x7e4248e0"/>
        <function-ref name="enableAdc" scoped="" ref="0x7e4249c0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7e424aa0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7e424b80"/>
        <function-ref name="isComplete" scoped="" ref="0x7e424c60"/>
        <function-ref name="cancel" scoped="" ref="0x7e424d40"/>
        <function-ref name="disableAdc" scoped="" ref="0x7e424e20"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7e424f00"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7e423010"/>
        <function-ref name="startConversion" scoped="" ref="0x7e4230f0"/>
        <function-ref name="isStarted" scoped="" ref="0x7e423250"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7e423330"/>
        <function-ref name="setContinuous" scoped="" ref="0x7e423410"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7e4234f0"/>
        <function-ref name="getValue" scoped="" ref="0x7e4235d0"/>
        <function-ref name="dataReady" scoped="" ref="0x7e4236b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x7e41ec70" loc="36:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7e41ec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7e41ee48"/>
        <function-ref name="getAdmux" scoped="" ref="0x7e41ef28"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7e41d018"/>
        <function-ref name="isEnabled" scoped="" ref="0x7e41d0f8"/>
        <function-ref name="enableAdc" scoped="" ref="0x7e41d1d8"/>
        <function-ref name="setAdmux" scoped="" ref="0x7e41d2b8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7e41d398"/>
        <function-ref name="isComplete" scoped="" ref="0x7e41d478"/>
        <function-ref name="cancel" scoped="" ref="0x7e41d558"/>
        <function-ref name="disableAdc" scoped="" ref="0x7e41d638"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7e41d718"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7e41d7f8"/>
        <function-ref name="startConversion" scoped="" ref="0x7e41d8d8"/>
        <function-ref name="isStarted" scoped="" ref="0x7e41da38"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7e41db18"/>
        <function-ref name="setContinuous" scoped="" ref="0x7e41dbf8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7e41dcd8"/>
        <function-ref name="getValue" scoped="" ref="0x7e41ddb8"/>
        <function-ref name="dataReady" scoped="" ref="0x7e41de98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7e41c040" loc="37:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7e41c040"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7e41c218"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7e3fe808" loc="82:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7e3fe808"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7e3fe9f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7e3fead0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7e3e37c0" loc="86:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7e3e37c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7e3e39a8"/>
        <function-ref name="configure" scoped="" ref="0x7e3e3a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceController" ref="0x7e3fec10" loc="83:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceController" scoped="" ref="0x7e3fec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceController"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e3fede8"/>
        <function-ref name="requested" scoped="" ref="0x7e3feec8"/>
        <function-ref name="granted" scoped="" ref="0x7e3e3010"/>
        <function-ref name="isOwner" scoped="" ref="0x7e3e30f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7e3e31d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e3fe0c8" loc="81:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e3fe0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e3fe2b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e3fe390"/>
        <function-ref name="request" scoped="" ref="0x7e3fe470"/>
        <function-ref name="granted" scoped="" ref="0x7e3fe550"/>
        <function-ref name="isOwner" scoped="" ref="0x7e3fe630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7e3e3310" loc="84:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7e3e3310"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7e3e34e8"/>
        <function-ref name="userId" scoped="" ref="0x7e3e35c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d8c1300" loc="34:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d8c1300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d8c14d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7d8c1638" loc="35:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7d8c1638"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7d8c1810"/>
        <function-ref name="isEmpty" scoped="" ref="0x7d8c18f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7d8c19d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7d8c1ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7d8c0ee0" loc="54:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7d8c0ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7d8be0e0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7d8be1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7d8bee58" loc="59:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7d8bee58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7d8bd050"/>
        <function-ref name="configure" scoped="" ref="0x7d8bd130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7d8bd290" loc="60:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7d8bd290"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7d8bd468"/>
        <function-ref name="isEmpty" scoped="" ref="0x7d8bd548"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7d8bd628"/>
        <function-ref name="dequeue" scoped="" ref="0x7d8bd708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceController" ref="0x7d8be300" loc="55:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceController" scoped="" ref="0x7d8be300"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceController"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d8be4d8"/>
        <function-ref name="requested" scoped="" ref="0x7d8be5b8"/>
        <function-ref name="granted" scoped="" ref="0x7d8be698"/>
        <function-ref name="isOwner" scoped="" ref="0x7d8be778"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7d8be858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7d8bd848" loc="61:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7d8bd848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7d8bda20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7d8bdb00"/>
        <function-ref name="led1On" scoped="" ref="0x7d8bdbe0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7d8bdcc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7d8bdda0"/>
        <function-ref name="get" scoped="" ref="0x7d8bde80"/>
        <function-ref name="led1Off" scoped="" ref="0x7d8bc010"/>
        <function-ref name="led0On" scoped="" ref="0x7d8bc390"/>
        <function-ref name="set" scoped="" ref="0x7d8bc1d0"/>
        <function-ref name="led2On" scoped="" ref="0x7d8bc0f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7d8bc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7d8c07a0" loc="53:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7d8c07a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d8c0988"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d8c0a68"/>
        <function-ref name="request" scoped="" ref="0x7d8c0b48"/>
        <function-ref name="granted" scoped="" ref="0x7d8c0c28"/>
        <function-ref name="isOwner" scoped="" ref="0x7d8c0d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7d8be998" loc="56:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7d8be998"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7d8beb70"/>
        <function-ref name="userId" scoped="" ref="0x7d8bec50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7d8bc510" loc="73:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7d8bc510"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d8bc6e8"/>
        <function-ref name="runTask" scoped="" ref="0x7d8bc7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7e3de230" loc="62:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7e3de230"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7e3de408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceController" ref="0x7e3de548" loc="63:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceController" scoped="" ref="0x7e3de548"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceController"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e3de720"/>
        <function-ref name="requested" scoped="" ref="0x7e3de800"/>
        <function-ref name="granted" scoped="" ref="0x7e3de8e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7e3de9c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7e3deaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7e3e0da8" loc="60:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7e3e0da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e3de010"/>
        <function-ref name="stop" scoped="" ref="0x7e3de0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7e3debe0" loc="64:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7e3debe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7e3dedb8"/>
        <function-ref name="userId" scoped="" ref="0x7e3dee98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7d8a2920" loc="52:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7d8a2920"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7d8a2af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceController" ref="0x7d8a2c38" loc="53:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceController" scoped="" ref="0x7d8a2c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceController"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d8a2e10"/>
        <function-ref name="requested" scoped="" ref="0x7d8a2ef0"/>
        <function-ref name="granted" scoped="" ref="0x7d8a1010"/>
        <function-ref name="isOwner" scoped="" ref="0x7d8a10f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7d8a11d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7d8a2528" loc="50:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7d8a2528"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d8a2700"/>
        <function-ref name="stop" scoped="" ref="0x7d8a27e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7d8a1310" loc="54:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7d8a1310"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7d8a14e8"/>
        <function-ref name="userId" scoped="" ref="0x7d8a15c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7e3cb700" loc="48:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7e3cb700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e3cbd28"/>
        <function-ref name="readDone" scoped="" ref="0x7e3cbf08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7e3c9530" loc="49:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7e3c9530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e3c9b78"/>
        <function-ref name="readDone" scoped="" ref="0x7e3c9d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7e3c8838" loc="53:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e3c8838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7e3c8a10"/>
        <function-ref name="getChannel" scoped="" ref="0x7e3c8af0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7e3c8bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x7e3c80c0" loc="52:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7e3c80c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7e3c8298"/>
        <function-ref name="cancel" scoped="" ref="0x7e3c8378"/>
        <function-ref name="dataReady" scoped="" ref="0x7e3c8458"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x7e3c0d10" loc="103:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x7e3c0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e3c0ee8"/>
        <function-ref name="runTask" scoped="" ref="0x7e3bf010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7e3b5670" loc="24:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7e3b5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e3b5ca8"/>
        <function-ref name="readDone" scoped="" ref="0x7e3b5e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7e3a7318" loc="26:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7e3a7318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e3a7950"/>
        <function-ref name="readDone" scoped="" ref="0x7e3a7b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7e3a7ec0" loc="27:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e3a7ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e3a60c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e3a61a0"/>
        <function-ref name="request" scoped="" ref="0x7e3a6280"/>
        <function-ref name="granted" scoped="" ref="0x7e3a6360"/>
        <function-ref name="isOwner" scoped="" ref="0x7e3a6440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7e39f690" loc="31:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoDeviceP.nc">
      <component-ref qname="PhotoDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7e39f690"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7e39f868"/>
        <function-ref name="configure" scoped="" ref="0x7e39f948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x7e39fa98" loc="32:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoDeviceP.nc">
      <component-ref qname="PhotoDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e39fa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7e39fc70"/>
        <function-ref name="getChannel" scoped="" ref="0x7e39fd50"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7e39fe30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7e39ed80" loc="30:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoP.nc">
      <component-ref qname="PhotoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7e39ed80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7e39a010"/>
        <function-ref name="configure" scoped="" ref="0x7e39a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoPin" ref="0x7e39a798" loc="34:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoP.nc">
      <component-ref qname="PhotoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoPin" scoped="" ref="0x7e39a798"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e39a970"/>
        <function-ref name="isInput" scoped="" ref="0x7e39aa50"/>
        <function-ref name="toggle" scoped="" ref="0x7e39ab30"/>
        <function-ref name="isOutput" scoped="" ref="0x7e39ac10"/>
        <function-ref name="get" scoped="" ref="0x7e39acf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e39add0"/>
        <function-ref name="set" scoped="" ref="0x7e39aeb0"/>
        <function-ref name="clr" scoped="" ref="0x7e399010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x7e39a240" loc="31:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoP.nc">
      <component-ref qname="PhotoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e39a240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7e39a418"/>
        <function-ref name="getChannel" scoped="" ref="0x7e39a4f8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7e39a5d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e395410" loc="36:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoP.nc">
      <component-ref qname="PhotoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e395410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e3955e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e3956c8"/>
        <function-ref name="led1On" scoped="" ref="0x7e3957a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e395888"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e395968"/>
        <function-ref name="get" scoped="" ref="0x7e395a48"/>
        <function-ref name="led1Off" scoped="" ref="0x7e395b28"/>
        <function-ref name="led2Off" scoped="" ref="0x7e395ea8"/>
        <function-ref name="set" scoped="" ref="0x7e395c08"/>
        <function-ref name="led0On" scoped="" ref="0x7e395ce8"/>
        <function-ref name="led2On" scoped="" ref="0x7e395dc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoAdc" ref="0x7e3950f0" loc="35:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoP.nc">
      <component-ref qname="PhotoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoAdc" scoped="" ref="0x7e3950f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e3952c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x7e38ae78" loc="40:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x7e38ae78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e389070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW3" ref="0x7e38d428" loc="32:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW3" scoped="" ref="0x7e38d428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e38d600"/>
        <function-ref name="isInput" scoped="" ref="0x7e38d6e0"/>
        <function-ref name="toggle" scoped="" ref="0x7e38d7c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e38d8a0"/>
        <function-ref name="get" scoped="" ref="0x7e38d980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e38da60"/>
        <function-ref name="set" scoped="" ref="0x7e38db40"/>
        <function-ref name="clr" scoped="" ref="0x7e38dc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW6" ref="0x7e38b188" loc="35:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW6" scoped="" ref="0x7e38b188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e38b360"/>
        <function-ref name="isInput" scoped="" ref="0x7e38b440"/>
        <function-ref name="toggle" scoped="" ref="0x7e38b520"/>
        <function-ref name="isOutput" scoped="" ref="0x7e38b600"/>
        <function-ref name="get" scoped="" ref="0x7e38b6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e38b7c0"/>
        <function-ref name="set" scoped="" ref="0x7e38b8a0"/>
        <function-ref name="clr" scoped="" ref="0x7e38b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x7e389888" loc="43:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x7e389888"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e389ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x7e388010" loc="45:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x7e388010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e3881e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW1" ref="0x7e38e088" loc="30:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW1" scoped="" ref="0x7e38e088"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e38e260"/>
        <function-ref name="isInput" scoped="" ref="0x7e38e340"/>
        <function-ref name="toggle" scoped="" ref="0x7e38e420"/>
        <function-ref name="isOutput" scoped="" ref="0x7e38e500"/>
        <function-ref name="get" scoped="" ref="0x7e38e5e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e38e6c0"/>
        <function-ref name="set" scoped="" ref="0x7e38e7a0"/>
        <function-ref name="clr" scoped="" ref="0x7e38e880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW4" ref="0x7e38dd98" loc="33:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW4" scoped="" ref="0x7e38dd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e38c010"/>
        <function-ref name="isInput" scoped="" ref="0x7e38c0f0"/>
        <function-ref name="toggle" scoped="" ref="0x7e38c1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e38c2b0"/>
        <function-ref name="get" scoped="" ref="0x7e38c390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e38c470"/>
        <function-ref name="set" scoped="" ref="0x7e38c550"/>
        <function-ref name="clr" scoped="" ref="0x7e38c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7e38a508" loc="37:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7e38a508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e38a6e0"/>
        <function-ref name="isInput" scoped="" ref="0x7e38a7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7e38a8a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e38a980"/>
        <function-ref name="get" scoped="" ref="0x7e38aa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e38ab40"/>
        <function-ref name="set" scoped="" ref="0x7e38ac20"/>
        <function-ref name="clr" scoped="" ref="0x7e38ad00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x7e3891e8" loc="41:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x7e3891e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e3893c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW7" ref="0x7e38baf8" loc="36:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW7" scoped="" ref="0x7e38baf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e38bcd0"/>
        <function-ref name="isInput" scoped="" ref="0x7e38bdb0"/>
        <function-ref name="toggle" scoped="" ref="0x7e38be90"/>
        <function-ref name="isOutput" scoped="" ref="0x7e38a010"/>
        <function-ref name="get" scoped="" ref="0x7e38a0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e38a1d0"/>
        <function-ref name="set" scoped="" ref="0x7e38a2b0"/>
        <function-ref name="clr" scoped="" ref="0x7e38a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x7e388360" loc="46:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x7e388360"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e388538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW2" ref="0x7e38e9f8" loc="31:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW2" scoped="" ref="0x7e38e9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e38ebd0"/>
        <function-ref name="isInput" scoped="" ref="0x7e38ecb0"/>
        <function-ref name="toggle" scoped="" ref="0x7e38ed90"/>
        <function-ref name="isOutput" scoped="" ref="0x7e38ee70"/>
        <function-ref name="get" scoped="" ref="0x7e38d010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e38d0f0"/>
        <function-ref name="set" scoped="" ref="0x7e38d1d0"/>
        <function-ref name="clr" scoped="" ref="0x7e38d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW5" ref="0x7e38c7a8" loc="34:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW5" scoped="" ref="0x7e38c7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e38c980"/>
        <function-ref name="isInput" scoped="" ref="0x7e38ca60"/>
        <function-ref name="toggle" scoped="" ref="0x7e38cb40"/>
        <function-ref name="isOutput" scoped="" ref="0x7e38cc20"/>
        <function-ref name="get" scoped="" ref="0x7e38cd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e38cde0"/>
        <function-ref name="set" scoped="" ref="0x7e38cec0"/>
        <function-ref name="clr" scoped="" ref="0x7e38b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x7e389538" loc="42:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x7e389538"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e389710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x7e389c58" loc="44:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x7e389c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e389e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x7e3886b0" loc="47:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x7e3886b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e388888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW0" ref="0x7e38f6e8" loc="29:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW0" scoped="" ref="0x7e38f6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e38f8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7e38f9a0"/>
        <function-ref name="toggle" scoped="" ref="0x7e38fa80"/>
        <function-ref name="isOutput" scoped="" ref="0x7e38fb60"/>
        <function-ref name="get" scoped="" ref="0x7e38fc40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e38fd20"/>
        <function-ref name="set" scoped="" ref="0x7e38fe00"/>
        <function-ref name="clr" scoped="" ref="0x7e38fee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x7e386908" loc="29:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusP.nc">
      <component-ref qname="ZigbexBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x7e386908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e386ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x7e383360" loc="32:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusP.nc">
      <component-ref qname="ZigbexBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x7e383360"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e383538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x7e383a00" loc="34:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusP.nc">
      <component-ref qname="ZigbexBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x7e383a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e383bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x7e386c58" loc="30:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusP.nc">
      <component-ref qname="ZigbexBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x7e386c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e386e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x7e383d50" loc="35:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusP.nc">
      <component-ref qname="ZigbexBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x7e383d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e383f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x7e383010" loc="31:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusP.nc">
      <component-ref qname="ZigbexBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x7e383010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e3831e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x7e3836b0" loc="33:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusP.nc">
      <component-ref qname="ZigbexBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x7e3836b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e383888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x7e3820b0" loc="36:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusP.nc">
      <component-ref qname="ZigbexBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x7e3820b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e382288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7e379990" loc="21:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredSensorC.nc">
      <component-ref qname="InteractionC.UltraredSensorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7e379990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e378010"/>
        <function-ref name="readDone" scoped="" ref="0x7e3781f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7d897c48" loc="28:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredC.nc">
      <component-ref qname="InteractionC.UltraredSensorC.DemoChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7d897c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d896288"/>
        <function-ref name="readDone" scoped="" ref="0x7d896468"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7d8953d8" loc="28:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc">
      <component-ref qname="InteractionC.UltraredSensorC.DemoChannel.ADC_ShiftM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7d8953d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d895a00"/>
        <function-ref name="readDone" scoped="" ref="0x7d895be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="subRead" ref="0x7d893010" loc="29:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc">
      <component-ref qname="InteractionC.UltraredSensorC.DemoChannel.ADC_ShiftM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="subRead" scoped="" ref="0x7d893010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d893638"/>
        <function-ref name="readDone" scoped="" ref="0x7d893818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7d8923b8" loc="30:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredProC.nc">
      <component-ref qname="InteractionC.UltraredSensorC.DemoChannel.UltraredProC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7d8923b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d8929e0"/>
        <function-ref name="readDone" scoped="" ref="0x7d892bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7d88e9d0" loc="25:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="InteractionC.UltraredSensorC.DemoChannel.UltraredProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7d88e9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7d88eba8"/>
        <function-ref name="configure" scoped="" ref="0x7d88ec88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7d890980" loc="22:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="InteractionC.UltraredSensorC.DemoChannel.UltraredProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7d890980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d88e010"/>
        <function-ref name="readDone" scoped="" ref="0x7d88e1f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7d88e4f8" loc="24:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="InteractionC.UltraredSensorC.DemoChannel.UltraredProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d88e4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7d88e6d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7d88e7b0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7d88e890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7e363060" loc="31:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredDeviceP.nc">
      <component-ref qname="UltraredDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7e363060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7e363238"/>
        <function-ref name="configure" scoped="" ref="0x7e363318"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x7e363468" loc="32:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredDeviceP.nc">
      <component-ref qname="UltraredDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e363468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7e363640"/>
        <function-ref name="getChannel" scoped="" ref="0x7e363720"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7e363800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7e35f758" loc="30:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredP.nc">
      <component-ref qname="UltraredP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7e35f758"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7e35f930"/>
        <function-ref name="configure" scoped="" ref="0x7e35fa10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UltraredAdc" ref="0x7e35ea58" loc="35:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredP.nc">
      <component-ref qname="UltraredP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UltraredAdc" scoped="" ref="0x7e35ea58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e35ec30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UltraredPin" ref="0x7e35e0e0" loc="34:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredP.nc">
      <component-ref qname="UltraredP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UltraredPin" scoped="" ref="0x7e35e0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e35e2b8"/>
        <function-ref name="isInput" scoped="" ref="0x7e35e398"/>
        <function-ref name="toggle" scoped="" ref="0x7e35e478"/>
        <function-ref name="isOutput" scoped="" ref="0x7e35e558"/>
        <function-ref name="get" scoped="" ref="0x7e35e638"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e35e718"/>
        <function-ref name="set" scoped="" ref="0x7e35e7f8"/>
        <function-ref name="clr" scoped="" ref="0x7e35e8d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x7e35fb60" loc="31:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredP.nc">
      <component-ref qname="UltraredP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e35fb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7e35fd38"/>
        <function-ref name="getChannel" scoped="" ref="0x7e35fe18"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7e35fef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CommunicationWithOPT" ref="0x7e360b58" loc="23:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTC.nc">
      <component-ref qname="CommunicationWithOPTC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CommunicationWithOPT" scoped="" ref="0x7e360b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CommunicationWithOPT"/>
      </instance>
      <interface-functions>
        <function-ref name="parsing_config" scoped="" ref="0x7e357630"/>
        <function-ref name="RequestLongMSG" scoped="" ref="0x7e360e10"/>
        <function-ref name="SpecialControlMSG" scoped="" ref="0x7e360ef0"/>
        <function-ref name="parsing_control" scoped="" ref="0x7e357010"/>
        <function-ref name="parsing_longDT" scoped="" ref="0x7e3570f0"/>
        <function-ref name="RequestSensorMSG" scoped="" ref="0x7e3571d0"/>
        <function-ref name="SendConfigureMSG" scoped="" ref="0x7e3572b0"/>
        <function-ref name="SendLongMSG" scoped="" ref="0x7e357390"/>
        <function-ref name="start" scoped="" ref="0x7e357470"/>
        <function-ref name="SendControlMSG" scoped="" ref="0x7e357550"/>
        <function-ref name="parsing_sensor" scoped="" ref="0x7e360d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HPLUART" ref="0x7e34b9c8" loc="25:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTM.nc">
      <component-ref qname="CommunicationWithOPTM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HPLUART" scoped="" ref="0x7e34b9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7e34bba0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7e34bc80"/>
        <function-ref name="rxDone" scoped="" ref="0x7e34bd60"/>
        <function-ref name="txDone" scoped="" ref="0x7e34be40"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7e34bf20"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7e350018"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7e3500f8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7e3501d8"/>
        <function-ref name="tx" scoped="" ref="0x7e3502b8"/>
        <function-ref name="rx" scoped="" ref="0x7e350398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x7e3522a8" loc="23:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTM.nc">
      <component-ref qname="CommunicationWithOPTM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x7e3522a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e352480"/>
        <function-ref name="stop" scoped="" ref="0x7e352560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CommunicationWithOPT" ref="0x7e3535e8" loc="21:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTM.nc">
      <component-ref qname="CommunicationWithOPTM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CommunicationWithOPT" scoped="" ref="0x7e3535e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CommunicationWithOPT"/>
      </instance>
      <interface-functions>
        <function-ref name="parsing_config" scoped="" ref="0x7e3520f0"/>
        <function-ref name="RequestLongMSG" scoped="" ref="0x7e3538a0"/>
        <function-ref name="SpecialControlMSG" scoped="" ref="0x7e353980"/>
        <function-ref name="parsing_control" scoped="" ref="0x7e353a60"/>
        <function-ref name="parsing_longDT" scoped="" ref="0x7e353b40"/>
        <function-ref name="RequestSensorMSG" scoped="" ref="0x7e353c20"/>
        <function-ref name="SendConfigureMSG" scoped="" ref="0x7e353d00"/>
        <function-ref name="SendLongMSG" scoped="" ref="0x7e353de0"/>
        <function-ref name="start" scoped="" ref="0x7e353ec0"/>
        <function-ref name="SendControlMSG" scoped="" ref="0x7e352010"/>
        <function-ref name="parsing_sensor" scoped="" ref="0x7e3537c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x7e3526e8" loc="24:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTM.nc">
      <component-ref qname="CommunicationWithOPTM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x7e3526e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e3528c0"/>
        <function-ref name="stop" scoped="" ref="0x7e3529a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCSuartDBG" ref="0x7e3504e8" loc="26:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTM.nc">
      <component-ref qname="CommunicationWithOPTM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCSuartDBG" scoped="" ref="0x7e3504e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SCSuartDBG"/>
      </instance>
      <interface-functions>
        <function-ref name="UARTSend" scoped="" ref="0x7e3506c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7e2e9b90" loc="40:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7e2e9b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7e2e9d68"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7e2e9e48"/>
        <function-ref name="rxDone" scoped="" ref="0x7e2e9f28"/>
        <function-ref name="txDone" scoped="" ref="0x7e2e8018"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7e2e80f8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7e2e81d8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7e2e82b8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7e2e8398"/>
        <function-ref name="tx" scoped="" ref="0x7e2e8478"/>
        <function-ref name="rx" scoped="" ref="0x7e2e8558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7e2e7010" loc="44:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7e2e7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7e2e71e8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7e2e72c8"/>
        <function-ref name="rxDone" scoped="" ref="0x7e2e73a8"/>
        <function-ref name="txDone" scoped="" ref="0x7e2e7488"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7e2e7568"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7e2e7648"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7e2e7728"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7e2e7808"/>
        <function-ref name="tx" scoped="" ref="0x7e2e78e8"/>
        <function-ref name="rx" scoped="" ref="0x7e2e79c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7e2e9758" loc="39:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7e2e9758"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e2e9930"/>
        <function-ref name="stop" scoped="" ref="0x7e2e9a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7e2e86d8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7e2e86d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e2e88b0"/>
        <function-ref name="stop" scoped="" ref="0x7e2e8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7e2e8b10" loc="43:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7e2e8b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e2e8ce8"/>
        <function-ref name="stop" scoped="" ref="0x7e2e8dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7e2e9320" loc="38:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7e2e9320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e2e94f8"/>
        <function-ref name="stop" scoped="" ref="0x7e2e95d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x7e2e5dc8" loc="71:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x7e2e5dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e2e2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7e2e2a60" loc="74:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7e2e2a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7e2e2c38"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7e2e2d18"/>
        <function-ref name="rxDone" scoped="" ref="0x7e2e2df8"/>
        <function-ref name="txDone" scoped="" ref="0x7e2e2ed8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7e2e0010"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7e2e00f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7e2e01d0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7e2e02b0"/>
        <function-ref name="tx" scoped="" ref="0x7e2e0390"/>
        <function-ref name="rx" scoped="" ref="0x7e2e0470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x7e2e0608" loc="76:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x7e2e0608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e2e07e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7e2d0290" loc="79:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7e2d0290"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7e2d0468"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7e2d0548"/>
        <function-ref name="rxDone" scoped="" ref="0x7e2d0628"/>
        <function-ref name="txDone" scoped="" ref="0x7e2d0708"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7e2d07e8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7e2d08c8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7e2d09a8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7e2d0a88"/>
        <function-ref name="tx" scoped="" ref="0x7e2d0b68"/>
        <function-ref name="rx" scoped="" ref="0x7e2d0c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7e2e2608" loc="73:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7e2e2608"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e2e27e0"/>
        <function-ref name="stop" scoped="" ref="0x7e2e28c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7e2e0980" loc="77:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7e2e0980"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e2e0b58"/>
        <function-ref name="stop" scoped="" ref="0x7e2e0c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7e2e0dd8" loc="78:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7e2e0dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e2d0010"/>
        <function-ref name="stop" scoped="" ref="0x7e2d00f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7e2d0db8" loc="81:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7e2d0db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7e2cf010"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7e2cf0f0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7e2cf1d0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7e2cf2b0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7e2cf390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7e2cf500" loc="82:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7e2cf500"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7e2cf6d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7e2e21b0" loc="72:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7e2e21b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e2e2388"/>
        <function-ref name="stop" scoped="" ref="0x7e2e2468"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7e26e010" loc="3:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/NoSCSuartDBGC.nc">
      <component-ref qname="NoSCSuartDBGC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7e26e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e26e1e8"/>
        <function-ref name="stop" scoped="" ref="0x7e26e2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCSuartDBG" ref="0x7e26e438" loc="4:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/NoSCSuartDBGC.nc">
      <component-ref qname="NoSCSuartDBGC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCSuartDBG" scoped="" ref="0x7e26e438"/></type-interface>
      <instance>
        <interfacedef-ref qname="SCSuartDBG"/>
      </instance>
      <interface-functions>
        <function-ref name="UARTSend" scoped="" ref="0x7e26e610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCSuartDBGRecv" ref="0x7e264bd8" loc="31:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGC.nc">
      <component-ref qname="SCSuartDBGC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCSuartDBGRecv" scoped="" ref="0x7e264bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SCSuartDBGRecv"/>
      </instance>
      <interface-functions>
        <function-ref name="UARTRecv" scoped="" ref="0x7e264db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCSuartDBG" ref="0x7e2687e0" loc="30:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGC.nc">
      <component-ref qname="SCSuartDBGC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCSuartDBG" scoped="" ref="0x7e2687e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SCSuartDBG"/>
      </instance>
      <interface-functions>
        <function-ref name="UARTSend" scoped="" ref="0x7e2689b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7e264f20" loc="32:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGC.nc">
      <component-ref qname="SCSuartDBGC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7e264f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e266110"/>
        <function-ref name="stop" scoped="" ref="0x7e2661f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x7e260010" loc="36:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGM.nc">
      <component-ref qname="SCSuartDBGM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x7e260010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e2601e8"/>
        <function-ref name="stop" scoped="" ref="0x7e2602c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HPLUART" ref="0x7e260440" loc="37:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGM.nc">
      <component-ref qname="SCSuartDBGM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HPLUART" scoped="" ref="0x7e260440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7e260618"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7e2606f8"/>
        <function-ref name="rxDone" scoped="" ref="0x7e2607d8"/>
        <function-ref name="txDone" scoped="" ref="0x7e2608b8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7e260998"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7e260a78"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7e260b58"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7e260c38"/>
        <function-ref name="tx" scoped="" ref="0x7e260d18"/>
        <function-ref name="rx" scoped="" ref="0x7e260df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x7e261ba0" loc="35:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGM.nc">
      <component-ref qname="SCSuartDBGM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x7e261ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e261d78"/>
        <function-ref name="stop" scoped="" ref="0x7e261e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCSuartDBGRecv" ref="0x7e261408" loc="32:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGM.nc">
      <component-ref qname="SCSuartDBGM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCSuartDBGRecv" scoped="" ref="0x7e261408"/></type-interface>
      <instance>
        <interfacedef-ref qname="SCSuartDBGRecv"/>
      </instance>
      <interface-functions>
        <function-ref name="UARTRecv" scoped="" ref="0x7e2615e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCSuartDBG" ref="0x7e2610e0" loc="31:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGM.nc">
      <component-ref qname="SCSuartDBGM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCSuartDBG" scoped="" ref="0x7e2610e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SCSuartDBG"/>
      </instance>
      <interface-functions>
        <function-ref name="UARTSend" scoped="" ref="0x7e2612b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7e261730" loc="33:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGM.nc">
      <component-ref qname="SCSuartDBGM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7e261730"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e261908"/>
        <function-ref name="stop" scoped="" ref="0x7e2619e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TempSensor" ref="0x7e243328" loc="21:TempSensorC.nc">
      <component-ref qname="TempSensorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempSensor" scoped="" ref="0x7e243328"/></type-interface>
      <instance>
        <interfacedef-ref qname="TempSensor"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7e243500"/>
        <function-ref name="start" scoped="" ref="0x7e2435e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read_UR" ref="0x7e22f430" loc="31:TempSensorM.nc">
      <component-ref qname="TempSensorM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read_UR" scoped="" ref="0x7e22f430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e22fa58"/>
        <function-ref name="readDone" scoped="" ref="0x7e22fc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TempSensor" ref="0x7e231760" loc="26:TempSensorM.nc">
      <component-ref qname="TempSensorM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempSensor" scoped="" ref="0x7e231760"/></type-interface>
      <instance>
        <interfacedef-ref qname="TempSensor"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7e231938"/>
        <function-ref name="start" scoped="" ref="0x7e231a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read_Humidity" ref="0x7e231c70" loc="29:TempSensorM.nc">
      <component-ref qname="TempSensorM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read_Humidity" scoped="" ref="0x7e231c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e2302c8"/>
        <function-ref name="readDone" scoped="" ref="0x7e2304a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read_Temp" ref="0x7e230858" loc="30:TempSensorM.nc">
      <component-ref qname="TempSensorM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read_Temp" scoped="" ref="0x7e230858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e230e80"/>
        <function-ref name="readDone" scoped="" ref="0x7e22f088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e2410a0" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="TempSensorC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e2410a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e222a10"/>
        <function-ref name="fired" scoped="" ref="0x7e241da8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e2223d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e2221f0"/>
        <function-ref name="getdt" scoped="" ref="0x7e222dd0"/>
        <function-ref name="gett0" scoped="" ref="0x7e222bf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7e222010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e2416c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e2226f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e241948"/>
        <function-ref name="stop" scoped="" ref="0x7e241bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7e220768" loc="47:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11C.nc">
      <component-ref qname="TempSensorC.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x7e220768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e220d90"/>
        <function-ref name="readDone" scoped="" ref="0x7e211010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7e221b50" loc="46:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11C.nc">
      <component-ref qname="TempSensorC.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x7e221b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e2201e0"/>
        <function-ref name="readDone" scoped="" ref="0x7e2203c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Hum" ref="0x7d880270" loc="50:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="TempSensorC.Sensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sht11Hum" scoped="" ref="0x7d880270"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7d880448"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7d880528"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7d880608"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7d8806e8"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7d8807c8"/>
        <function-ref name="reset" scoped="" ref="0x7d8808a8"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7d880988"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7d880a68"/>
        <function-ref name="resetDone" scoped="" ref="0x7d880b48"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7d880c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7d883da8" loc="45:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="TempSensorC.Sensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x7d883da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d8823e0"/>
        <function-ref name="readDone" scoped="" ref="0x7d8825c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempResource" ref="0x7d8828d8" loc="47:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="TempSensorC.Sensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempResource" scoped="" ref="0x7d8828d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d882ab0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d882b90"/>
        <function-ref name="request" scoped="" ref="0x7d882c70"/>
        <function-ref name="granted" scoped="" ref="0x7d882d50"/>
        <function-ref name="isOwner" scoped="" ref="0x7d882e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Temp" ref="0x7d8816e8" loc="49:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="TempSensorC.Sensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sht11Temp" scoped="" ref="0x7d8816e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7d8818c0"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7d8819a0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7d881a80"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7d881b60"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7d881c40"/>
        <function-ref name="reset" scoped="" ref="0x7d881d20"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7d881e00"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7d881ee0"/>
        <function-ref name="resetDone" scoped="" ref="0x7d880010"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7d8800f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumResource" ref="0x7d881010" loc="48:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="TempSensorC.Sensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HumResource" scoped="" ref="0x7d881010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d8811e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d8812c8"/>
        <function-ref name="request" scoped="" ref="0x7d8813a8"/>
        <function-ref name="granted" scoped="" ref="0x7d881488"/>
        <function-ref name="isOwner" scoped="" ref="0x7d881568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7d8831f8" loc="44:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="TempSensorC.Sensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x7d8831f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d883820"/>
        <function-ref name="readDone" scoped="" ref="0x7d883a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7e210030" loc="21:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredSensorC.nc">
      <component-ref qname="TempSensorC.URSensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7e210030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e210658"/>
        <function-ref name="readDone" scoped="" ref="0x7e210838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7d8723b8" loc="28:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredC.nc">
      <component-ref qname="TempSensorC.URSensor.DemoChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7d8723b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d8729e0"/>
        <function-ref name="readDone" scoped="" ref="0x7d872bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7d871b58" loc="28:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc">
      <component-ref qname="TempSensorC.URSensor.DemoChannel.ADC_ShiftM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7d871b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d85f1e0"/>
        <function-ref name="readDone" scoped="" ref="0x7d85f3c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="subRead" ref="0x7d85f768" loc="29:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc">
      <component-ref qname="TempSensorC.URSensor.DemoChannel.ADC_ShiftM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="subRead" scoped="" ref="0x7d85f768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d85fd90"/>
        <function-ref name="readDone" scoped="" ref="0x7d85e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7d85eb80" loc="30:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredProC.nc">
      <component-ref qname="TempSensorC.URSensor.DemoChannel.UltraredProC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7d85eb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d85d1e0"/>
        <function-ref name="readDone" scoped="" ref="0x7d85d3c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7d859150" loc="25:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TempSensorC.URSensor.DemoChannel.UltraredProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7d859150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7d859328"/>
        <function-ref name="configure" scoped="" ref="0x7d859408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7d85a130" loc="22:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TempSensorC.URSensor.DemoChannel.UltraredProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7d85a130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d85a758"/>
        <function-ref name="readDone" scoped="" ref="0x7d85a938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7d85ac40" loc="24:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TempSensorC.URSensor.DemoChannel.UltraredProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d85ac40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7d85ae18"/>
        <function-ref name="getChannel" scoped="" ref="0x7d85aef8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7d859010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ComSat" ref="0x7e20c5b0" loc="2:ComSatC.nc">
      <component-ref qname="ComSatC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ComSat" scoped="" ref="0x7e20c5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ComSat"/>
      </instance>
      <interface-functions>
        <function-ref name="initDone" scoped="" ref="0x7e20c788"/>
        <function-ref name="init" scoped="" ref="0x7e20c868"/>
        <function-ref name="sendData" scoped="" ref="0x7e20c948"/>
        <function-ref name="received" scoped="" ref="0x7e20ca28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ElapsedTimer" ref="0x7e205a48" loc="10:ComSatM.nc">
      <component-ref qname="ComSatM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ElapsedTimer" scoped="" ref="0x7e205a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e202368"/>
        <function-ref name="fired" scoped="" ref="0x7e204768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e204d08"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e204b28"/>
        <function-ref name="getdt" scoped="" ref="0x7e202728"/>
        <function-ref name="gett0" scoped="" ref="0x7e202548"/>
        <function-ref name="isRunning" scoped="" ref="0x7e204948"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e204088"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e202048"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e204308"/>
        <function-ref name="stop" scoped="" ref="0x7e204588"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7e202900" loc="11:ComSatM.nc">
      <component-ref qname="ComSatM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x7e202900"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e202ad8"/>
        <function-ref name="stopDone" scoped="" ref="0x7e202bb8"/>
        <function-ref name="start" scoped="" ref="0x7e202c98"/>
        <function-ref name="stop" scoped="" ref="0x7e202d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LCDSetter" ref="0x7e19ba40" loc="15:ComSatM.nc">
      <component-ref qname="ComSatM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LCDSetter" scoped="" ref="0x7e19ba40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCDSetter"/>
      </instance>
      <interface-functions>
        <function-ref name="setLCDDevicePriorty" scoped="" ref="0x7e19bc18"/>
        <function-ref name="init" scoped="" ref="0x7e19bcf8"/>
        <function-ref name="setLCDReceivePacket" scoped="" ref="0x7e19bdd8"/>
        <function-ref name="setLCDData" scoped="" ref="0x7e19beb8"/>
        <function-ref name="setLCDStatus" scoped="" ref="0x7e1a0010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7e19b558" loc="13:ComSatM.nc">
      <component-ref qname="ComSatM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7e19b558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e19b730"/>
        <function-ref name="receive" scoped="" ref="0x7e19b810"/>
        <function-ref name="getPayload" scoped="" ref="0x7e19b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ComSat" ref="0x7e205380" loc="7:ComSatM.nc">
      <component-ref qname="ComSatM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ComSat" scoped="" ref="0x7e205380"/></type-interface>
      <instance>
        <interfacedef-ref qname="ComSat"/>
      </instance>
      <interface-functions>
        <function-ref name="initDone" scoped="" ref="0x7e205558"/>
        <function-ref name="init" scoped="" ref="0x7e205638"/>
        <function-ref name="sendData" scoped="" ref="0x7e205718"/>
        <function-ref name="received" scoped="" ref="0x7e2057f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDataTask" ref="0x7e19f5c8" loc="29:ComSatM.nc">
      <component-ref qname="ComSatM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDataTask" scoped="" ref="0x7e19f5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e19f7a0"/>
        <function-ref name="runTask" scoped="" ref="0x7e19f880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7e1f1010" loc="12:ComSatM.nc">
      <component-ref qname="ComSatM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7e1f1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e1f11e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7e1f12c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e1f13a8"/>
        <function-ref name="cancel" scoped="" ref="0x7e1f1488"/>
        <function-ref name="sendDone" scoped="" ref="0x7e1f1568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="start" ref="0x7e1a0e88" loc="28:ComSatM.nc">
      <component-ref qname="ComSatM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="start" scoped="" ref="0x7e1a0e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e19f070"/>
        <function-ref name="runTask" scoped="" ref="0x7e19f150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e209d40" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="ComSatC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e209d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e17d650"/>
        <function-ref name="fired" scoped="" ref="0x7e17ea60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e17d010"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e17ee20"/>
        <function-ref name="getdt" scoped="" ref="0x7e17da10"/>
        <function-ref name="gett0" scoped="" ref="0x7e17d830"/>
        <function-ref name="isRunning" scoped="" ref="0x7e17ec40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e17e380"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e17d330"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e17e600"/>
        <function-ref name="stop" scoped="" ref="0x7e17e880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7e177240" loc="49:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e177240"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e177418"/>
        <function-ref name="stopDone" scoped="" ref="0x7e1774f8"/>
        <function-ref name="start" scoped="" ref="0x7e1775d8"/>
        <function-ref name="stop" scoped="" ref="0x7e1776b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7e177a90" loc="51:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7e177a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e177c68"/>
        <function-ref name="getPayload" scoped="" ref="0x7e177d48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e177e28"/>
        <function-ref name="cancel" scoped="" ref="0x7e177f08"/>
        <function-ref name="sendDone" scoped="" ref="0x7e176010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7e176b80" loc="53:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7e176b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e176d58"/>
        <function-ref name="receive" scoped="" ref="0x7e176e38"/>
        <function-ref name="getPayload" scoped="" ref="0x7e176f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7e160458" loc="55:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7e160458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e160630"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e160710"/>
        <function-ref name="getPayload" scoped="" ref="0x7e1607f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e1608d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e1609b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e1763e8" loc="52:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e1763e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e1765c0"/>
        <function-ref name="receive" scoped="" ref="0x7e1766a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e176780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7e1554a8" loc="57:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e1554a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7e155680"/>
        <function-ref name="noAck" scoped="" ref="0x7e155760"/>
        <function-ref name="wasAcked" scoped="" ref="0x7e155840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7e1599c8" loc="56:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e1599c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7e159ba0"/>
        <function-ref name="address" scoped="" ref="0x7e159c80"/>
        <function-ref name="destination" scoped="" ref="0x7e159d60"/>
        <function-ref name="setSource" scoped="" ref="0x7e159e40"/>
        <function-ref name="setDestination" scoped="" ref="0x7e159f20"/>
        <function-ref name="type" scoped="" ref="0x7e172018"/>
        <function-ref name="setType" scoped="" ref="0x7e1720f8"/>
        <function-ref name="isForMe" scoped="" ref="0x7e1721d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7e153df0" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e153df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e152010"/>
        <function-ref name="stopDone" scoped="" ref="0x7e1520f0"/>
        <function-ref name="start" scoped="" ref="0x7e1521d0"/>
        <function-ref name="stop" scoped="" ref="0x7e1522b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7e152688" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7e152688"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7e208ed0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e152860"/>
        <function-ref name="getPayload" scoped="" ref="0x7e152940"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e152a20"/>
        <function-ref name="cancel" scoped="" ref="0x7e152b00"/>
        <function-ref name="sendDone" scoped="" ref="0x7e152be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7e1507a8" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7e1507a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7e208ed0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e150980"/>
        <function-ref name="receive" scoped="" ref="0x7e150a60"/>
        <function-ref name="getPayload" scoped="" ref="0x7e150b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7e142698" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7e142698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e142870"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e142950"/>
        <function-ref name="getPayload" scoped="" ref="0x7e142a30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e142b10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e142bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7e13c1a8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7e13c1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7e13c380"/>
        <function-ref name="getRssi" scoped="" ref="0x7e13c460"/>
        <function-ref name="getPower" scoped="" ref="0x7e13c540"/>
        <function-ref name="getLqi" scoped="" ref="0x7e13c620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e150010" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e150010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7e208ed0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e1501e8"/>
        <function-ref name="receive" scoped="" ref="0x7e1502c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7e1503a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7e13c778" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e13c778"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7e13c950"/>
        <function-ref name="noAck" scoped="" ref="0x7e13ca30"/>
        <function-ref name="wasAcked" scoped="" ref="0x7e13cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7e150c90" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e150c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7e150e68"/>
        <function-ref name="address" scoped="" ref="0x7e142010"/>
        <function-ref name="destination" scoped="" ref="0x7e1420f0"/>
        <function-ref name="setSource" scoped="" ref="0x7e1421d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7e1422b0"/>
        <function-ref name="type" scoped="" ref="0x7e142390"/>
        <function-ref name="setType" scoped="" ref="0x7e142470"/>
        <function-ref name="isForMe" scoped="" ref="0x7e142550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7e134010" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7e134010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e1341e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7e1342c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e1343a8"/>
        <function-ref name="cancel" scoped="" ref="0x7e134488"/>
        <function-ref name="sendDone" scoped="" ref="0x7e134568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7e1346e0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7e1346e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e1348b8"/>
        <function-ref name="receive" scoped="" ref="0x7e134998"/>
        <function-ref name="getPayload" scoped="" ref="0x7e134a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7e13ee40" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7e13ee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7e208ed0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e138050"/>
        <function-ref name="getPayload" scoped="" ref="0x7e138130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e138210"/>
        <function-ref name="cancel" scoped="" ref="0x7e1382f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7e1383d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7e137010" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7e137010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7e208ed0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e1371e8"/>
        <function-ref name="receive" scoped="" ref="0x7e1372c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7e1373a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7e137e38" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7e137e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e136050"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e136130"/>
        <function-ref name="getPayload" scoped="" ref="0x7e136210"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e1362f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e1363d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e1387a8" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e1387a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7e208ed0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e138980"/>
        <function-ref name="receive" scoped="" ref="0x7e138a60"/>
        <function-ref name="getPayload" scoped="" ref="0x7e138b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7e1374f8" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e1374f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7e1376d0"/>
        <function-ref name="address" scoped="" ref="0x7e1377b0"/>
        <function-ref name="destination" scoped="" ref="0x7e137890"/>
        <function-ref name="setSource" scoped="" ref="0x7e137970"/>
        <function-ref name="setDestination" scoped="" ref="0x7e137a50"/>
        <function-ref name="type" scoped="" ref="0x7e137b30"/>
        <function-ref name="setType" scoped="" ref="0x7e137c10"/>
        <function-ref name="isForMe" scoped="" ref="0x7e137cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7e0dc548" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e0dc548"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e0dc720"/>
        <function-ref name="stopDone" scoped="" ref="0x7e0dc800"/>
        <function-ref name="start" scoped="" ref="0x7e0dc8e0"/>
        <function-ref name="stop" scoped="" ref="0x7e0dc9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7e0dcb28" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7e0dcb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e0dcd00"/>
        <function-ref name="getPayload" scoped="" ref="0x7e0dcde0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e0dcec0"/>
        <function-ref name="cancel" scoped="" ref="0x7e0db010"/>
        <function-ref name="sendDone" scoped="" ref="0x7e0db0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e0db258" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e0db258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e0db430"/>
        <function-ref name="receive" scoped="" ref="0x7e0db510"/>
        <function-ref name="getPayload" scoped="" ref="0x7e0db5f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7e0db760" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e0db760"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7e0db938"/>
        <function-ref name="address" scoped="" ref="0x7e0dba18"/>
        <function-ref name="destination" scoped="" ref="0x7e0dbaf8"/>
        <function-ref name="setSource" scoped="" ref="0x7e0dbbd8"/>
        <function-ref name="setDestination" scoped="" ref="0x7e0dbcb8"/>
        <function-ref name="type" scoped="" ref="0x7e0dbd98"/>
        <function-ref name="setType" scoped="" ref="0x7e0dbe78"/>
        <function-ref name="isForMe" scoped="" ref="0x7e0da010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7e0d6250" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e0d6250"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e0d6428"/>
        <function-ref name="stopDone" scoped="" ref="0x7e0d6508"/>
        <function-ref name="start" scoped="" ref="0x7e0d65e8"/>
        <function-ref name="stop" scoped="" ref="0x7e0d66c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7e0bc1e0" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x7e0bc1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e0bc3b8"/>
        <function-ref name="cancel" scoped="" ref="0x7e0bc498"/>
        <function-ref name="modify" scoped="" ref="0x7e0bc578"/>
        <function-ref name="sendDone" scoped="" ref="0x7e0bc658"/>
        <function-ref name="resendCCA" scoped="" ref="0x7e0bc738"/>
        <function-ref name="resend" scoped="" ref="0x7e0bc818"/>
        <function-ref name="sendCCA" scoped="" ref="0x7e0bc8f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7e0d6830" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7e0d6830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e0d6a08"/>
        <function-ref name="getPayload" scoped="" ref="0x7e0d6ae8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e0d6bc8"/>
        <function-ref name="cancel" scoped="" ref="0x7e0d6ca8"/>
        <function-ref name="sendDone" scoped="" ref="0x7e0d6d88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7e0b6a20" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7e0b6a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7e0b6bf8"/>
        <function-ref name="rand32" scoped="" ref="0x7e0b6cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e0daee0" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e0daee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e0d60e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7e0c1a20" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7e0c1a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e0c1bf8"/>
        <function-ref name="stop" scoped="" ref="0x7e0c1cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7e0c1088" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7e0c1088"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7e0c1260"/>
        <function-ref name="rfOff" scoped="" ref="0x7e0c1340"/>
        <function-ref name="rxOn" scoped="" ref="0x7e0c1420"/>
        <function-ref name="startVReg" scoped="" ref="0x7e0c1500"/>
        <function-ref name="stopVReg" scoped="" ref="0x7e0c15e0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7e0c16c0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7e0c17a0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7e0c1880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e0ba7d8" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e0ba7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e0ba9b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e0baa90"/>
        <function-ref name="led1On" scoped="" ref="0x7e0bab70"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e0bac50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e0bad30"/>
        <function-ref name="get" scoped="" ref="0x7e0bae10"/>
        <function-ref name="led1Off" scoped="" ref="0x7e0baef0"/>
        <function-ref name="led2Off" scoped="" ref="0x7e0b72b0"/>
        <function-ref name="set" scoped="" ref="0x7e0b7010"/>
        <function-ref name="led0On" scoped="" ref="0x7e0b70f0"/>
        <function-ref name="led2On" scoped="" ref="0x7e0b71d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7e0d6ef8" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e0d6ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e0d50e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e0d51c0"/>
        <function-ref name="request" scoped="" ref="0x7e0d52a0"/>
        <function-ref name="granted" scoped="" ref="0x7e0d5380"/>
        <function-ref name="isOwner" scoped="" ref="0x7e0d5460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CsmaBackoff" ref="0x7e0b8290" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaBackoff" scoped="" ref="0x7e0b8290"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="congestion" scoped="" ref="0x7e0b8468"/>
        <function-ref name="initial" scoped="" ref="0x7e0b8548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7e0b6e48" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e0b6e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7e0ba050"/>
        <function-ref name="address" scoped="" ref="0x7e0ba130"/>
        <function-ref name="destination" scoped="" ref="0x7e0ba210"/>
        <function-ref name="setSource" scoped="" ref="0x7e0ba2f0"/>
        <function-ref name="setDestination" scoped="" ref="0x7e0ba3d0"/>
        <function-ref name="type" scoped="" ref="0x7e0ba4b0"/>
        <function-ref name="setType" scoped="" ref="0x7e0ba590"/>
        <function-ref name="isForMe" scoped="" ref="0x7e0ba670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7e0b4a20" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x7e0b4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e0b4bf8"/>
        <function-ref name="runTask" scoped="" ref="0x7e0b4cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7e0b41f0" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x7e0b41f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e0b4448"/>
        <function-ref name="runTask" scoped="" ref="0x7e0b4528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7e0b5a88" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x7e0b5a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e0b5c60"/>
        <function-ref name="runTask" scoped="" ref="0x7e0b5d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7e07a010" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7e07a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x7e07a1e8"/>
        <function-ref name="setChannel" scoped="" ref="0x7e07a2c8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7e07a3a8"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7e07a488"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7e07a568"/>
        <function-ref name="sync" scoped="" ref="0x7e07a648"/>
        <function-ref name="getChannel" scoped="" ref="0x7e07a728"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7e07a808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e07d780" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e07d780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e07d958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7e07a978" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7e07a978"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7e07ab50"/>
        <function-ref name="rfOff" scoped="" ref="0x7e07ac30"/>
        <function-ref name="rxOn" scoped="" ref="0x7e07ad10"/>
        <function-ref name="startVReg" scoped="" ref="0x7e07adf0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7e07aed0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7e079010"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7e0790f0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7e0791d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e07dac8" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e07dac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e07dca0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e07dd80"/>
        <function-ref name="request" scoped="" ref="0x7e07de60"/>
        <function-ref name="granted" scoped="" ref="0x7e07c010"/>
        <function-ref name="isOwner" scoped="" ref="0x7e07c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7e079340" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e079340"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7e079518"/>
        <function-ref name="address" scoped="" ref="0x7e0795f8"/>
        <function-ref name="destination" scoped="" ref="0x7e0796d8"/>
        <function-ref name="setSource" scoped="" ref="0x7e0797b8"/>
        <function-ref name="setDestination" scoped="" ref="0x7e079898"/>
        <function-ref name="type" scoped="" ref="0x7e079978"/>
        <function-ref name="setType" scoped="" ref="0x7e079a58"/>
        <function-ref name="isForMe" scoped="" ref="0x7e079b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7e0718f8" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7e0718f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x7e071ad0"/>
        <function-ref name="setChannel" scoped="" ref="0x7e071bb0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7e071c90"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7e071d70"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7e071e50"/>
        <function-ref name="sync" scoped="" ref="0x7e070010"/>
        <function-ref name="getChannel" scoped="" ref="0x7e0700f0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7e0701d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7e070e08" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x7e070e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120ce0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e061170"/>
        <function-ref name="fired" scoped="" ref="0x7e063a10"/>
        <function-ref name="startAt" scoped="" ref="0x7e063e10"/>
        <function-ref name="isRunning" scoped="" ref="0x7e063c10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e061370"/>
        <function-ref name="start" scoped="" ref="0x7e063570"/>
        <function-ref name="stop" scoped="" ref="0x7e063810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7e05b290" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7e05b290"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e05b468"/>
        <function-ref name="write" scoped="" ref="0x7e05b548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7e061ef0" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7e061ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e0600e0"/>
        <function-ref name="isInput" scoped="" ref="0x7e0601c0"/>
        <function-ref name="toggle" scoped="" ref="0x7e0602a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e060380"/>
        <function-ref name="get" scoped="" ref="0x7e060460"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e060540"/>
        <function-ref name="set" scoped="" ref="0x7e060620"/>
        <function-ref name="clr" scoped="" ref="0x7e060700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7e055918" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7e055918"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e055b70"/>
        <function-ref name="write" scoped="" ref="0x7e055c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7e061560" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7e061560"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e061738"/>
        <function-ref name="isInput" scoped="" ref="0x7e061818"/>
        <function-ref name="toggle" scoped="" ref="0x7e0618f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7e0619d8"/>
        <function-ref name="get" scoped="" ref="0x7e061ab8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e061b98"/>
        <function-ref name="set" scoped="" ref="0x7e061c78"/>
        <function-ref name="clr" scoped="" ref="0x7e061d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7e060898" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x7e060898"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e060a70"/>
        <function-ref name="isInput" scoped="" ref="0x7e060b50"/>
        <function-ref name="toggle" scoped="" ref="0x7e060c30"/>
        <function-ref name="isOutput" scoped="" ref="0x7e060d10"/>
        <function-ref name="get" scoped="" ref="0x7e060df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e060ed0"/>
        <function-ref name="set" scoped="" ref="0x7e05f010"/>
        <function-ref name="clr" scoped="" ref="0x7e05f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e074ea8" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e074ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e0710c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7e05b6e8" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7e05b6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e05b8c0"/>
        <function-ref name="write" scoped="" ref="0x7e05b9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7e05f8a8" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7e05f8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e05fa80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e05fb60"/>
        <function-ref name="request" scoped="" ref="0x7e05fc40"/>
        <function-ref name="granted" scoped="" ref="0x7e05fd20"/>
        <function-ref name="isOwner" scoped="" ref="0x7e05fe00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7e0517c8" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7e0517c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e0519a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7e051b38" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7e051b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e051d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7e054830" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x7e054830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e054a08"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e054ae8"/>
        <function-ref name="request" scoped="" ref="0x7e054bc8"/>
        <function-ref name="granted" scoped="" ref="0x7e054ca8"/>
        <function-ref name="isOwner" scoped="" ref="0x7e054d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7e070340" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7e070340"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7e070518"/>
        <function-ref name="rfOff" scoped="" ref="0x7e0705f8"/>
        <function-ref name="rxOn" scoped="" ref="0x7e0706d8"/>
        <function-ref name="startVReg" scoped="" ref="0x7e0707b8"/>
        <function-ref name="stopVReg" scoped="" ref="0x7e070898"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7e070978"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7e070a58"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7e070b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7e0554c8" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7e0554c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e0556a0"/>
        <function-ref name="write" scoped="" ref="0x7e055780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7e055de8" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7e055de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e05b010"/>
        <function-ref name="write" scoped="" ref="0x7e05b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e071230" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e071230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e071408"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e0714e8"/>
        <function-ref name="request" scoped="" ref="0x7e0715c8"/>
        <function-ref name="granted" scoped="" ref="0x7e0716a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7e071788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7e058310" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7e058310"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e0584e8"/>
        <function-ref name="write" scoped="" ref="0x7e0585c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7e0510e0" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7e0510e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e0512b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7e05f290" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x7e05f290"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e05f468"/>
        <function-ref name="disable" scoped="" ref="0x7e05f548"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e05f628"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e05f708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7e051e80" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e051e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7e054070"/>
        <function-ref name="address" scoped="" ref="0x7e054150"/>
        <function-ref name="destination" scoped="" ref="0x7e054230"/>
        <function-ref name="setSource" scoped="" ref="0x7e054310"/>
        <function-ref name="setDestination" scoped="" ref="0x7e0543f0"/>
        <function-ref name="type" scoped="" ref="0x7e0544d0"/>
        <function-ref name="setType" scoped="" ref="0x7e0545b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7e054690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e054ef0" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e054ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e0530e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e0531c0"/>
        <function-ref name="led1On" scoped="" ref="0x7e0532a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e053380"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e053460"/>
        <function-ref name="get" scoped="" ref="0x7e053540"/>
        <function-ref name="led1Off" scoped="" ref="0x7e053620"/>
        <function-ref name="led2Off" scoped="" ref="0x7e0539a0"/>
        <function-ref name="set" scoped="" ref="0x7e053700"/>
        <function-ref name="led0On" scoped="" ref="0x7e0537e0"/>
        <function-ref name="led2On" scoped="" ref="0x7e0538c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7e051450" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7e051450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e051628"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone_task" ref="0x7e042468" loc="86:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone_task" scoped="" ref="0x7e042468"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e042640"/>
        <function-ref name="runTask" scoped="" ref="0x7e042720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e011dc8" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e011dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e010010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7e0102e0" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x7e0102e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120ce0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e003638"/>
        <function-ref name="fired" scoped="" ref="0x7e010ed0"/>
        <function-ref name="startAt" scoped="" ref="0x7e0032f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7e0030f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e003838"/>
        <function-ref name="start" scoped="" ref="0x7e010a30"/>
        <function-ref name="stop" scoped="" ref="0x7e010cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7e000358" loc="67:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7e000358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120ce0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7debb750"/>
        <function-ref name="fired" scoped="" ref="0x7debb010"/>
        <function-ref name="startAt" scoped="" ref="0x7debb410"/>
        <function-ref name="isRunning" scoped="" ref="0x7debb210"/>
        <function-ref name="getAlarm" scoped="" ref="0x7debb950"/>
        <function-ref name="start" scoped="" ref="0x7e000aa8"/>
        <function-ref name="stop" scoped="" ref="0x7e000d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7debbb08" loc="68:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7debbb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7debbce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7d8489f8" loc="28:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7d8489f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120ce0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d847de0"/>
        <function-ref name="fired" scoped="" ref="0x7d8476a0"/>
        <function-ref name="startAt" scoped="" ref="0x7d847aa0"/>
        <function-ref name="isRunning" scoped="" ref="0x7d8478a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7d845010"/>
        <function-ref name="start" scoped="" ref="0x7d847200"/>
        <function-ref name="stop" scoped="" ref="0x7d8474a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7d844598" loc="30:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7d844598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="TOne" ref="0x7f081ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d843950"/>
        <function-ref name="fired" scoped="" ref="0x7d843210"/>
        <function-ref name="startAt" scoped="" ref="0x7d843610"/>
        <function-ref name="isRunning" scoped="" ref="0x7d843410"/>
        <function-ref name="getAlarm" scoped="" ref="0x7d843b50"/>
        <function-ref name="start" scoped="" ref="0x7d844ce8"/>
        <function-ref name="stop" scoped="" ref="0x7d843010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7dfd5e90" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7dfd5e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7dfda080"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7dfda160"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7dfda240"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7dfda320"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7dfda400"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7dfda4e0"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7dfda5c0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7dfda6a0"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7dfda780"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7dfda860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7dfc3d70" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7dfc3d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7dfc2538"/>
        <function-ref name="test" scoped="" ref="0x7dfc2138"/>
        <function-ref name="get" scoped="" ref="0x7dfd43e0"/>
        <function-ref name="captured" scoped="" ref="0x7dfd4880"/>
        <function-ref name="reset" scoped="" ref="0x7dfd4b20"/>
        <function-ref name="isOn" scoped="" ref="0x7dfc2338"/>
        <function-ref name="set" scoped="" ref="0x7dfd45e0"/>
        <function-ref name="start" scoped="" ref="0x7dfd4d20"/>
        <function-ref name="stop" scoped="" ref="0x7dfd4f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7dfc2ae0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7dfc2ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7dfc1ea0"/>
        <function-ref name="fired" scoped="" ref="0x7dfc16a0"/>
        <function-ref name="get" scoped="" ref="0x7dfc1200"/>
        <function-ref name="reset" scoped="" ref="0x7dfc18a0"/>
        <function-ref name="isOn" scoped="" ref="0x7dfc00b8"/>
        <function-ref name="set" scoped="" ref="0x7dfc1400"/>
        <function-ref name="start" scoped="" ref="0x7dfc1aa0"/>
        <function-ref name="stop" scoped="" ref="0x7dfc1ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7dfde660" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7dfde660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7dfddd70"/>
        <function-ref name="test" scoped="" ref="0x7dfdd970"/>
        <function-ref name="get" scoped="" ref="0x7dfdeca8"/>
        <function-ref name="setScale" scoped="" ref="0x7dfdc010"/>
        <function-ref name="getScale" scoped="" ref="0x7dfdc2b0"/>
        <function-ref name="reset" scoped="" ref="0x7dfdd370"/>
        <function-ref name="overflow" scoped="" ref="0x7dfdd170"/>
        <function-ref name="isOn" scoped="" ref="0x7dfddb70"/>
        <function-ref name="set" scoped="" ref="0x7dfdeea8"/>
        <function-ref name="start" scoped="" ref="0x7dfdd570"/>
        <function-ref name="stop" scoped="" ref="0x7dfdd770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7dfb9558" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7dfb9558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7dfb9730"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7dfb9810"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7dfb98f0"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7dfb99d0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7dfb9ab0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7dfb9b90"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7dfb9c70"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7dfb9d50"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7dfb9e30"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7dfb9f10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x7dfa42c8" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x7dfa42c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7dfa44a0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7dfa4580"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7dfa4660"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7dfa4740"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7dfa4820"/>
        <function-ref name="setControl" scoped="" ref="0x7dfa4900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7dfb6c18" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7dfb6c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7dfb5f18"/>
        <function-ref name="fired" scoped="" ref="0x7dfb5718"/>
        <function-ref name="get" scoped="" ref="0x7dfb5278"/>
        <function-ref name="reset" scoped="" ref="0x7dfb5918"/>
        <function-ref name="isOn" scoped="" ref="0x7dfb3130"/>
        <function-ref name="set" scoped="" ref="0x7dfb5478"/>
        <function-ref name="start" scoped="" ref="0x7dfb5b18"/>
        <function-ref name="stop" scoped="" ref="0x7dfb5d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7dfb8150" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7dfb8150"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7dfb68f8"/>
        <function-ref name="test" scoped="" ref="0x7dfb64f8"/>
        <function-ref name="get" scoped="" ref="0x7dfb8798"/>
        <function-ref name="captured" scoped="" ref="0x7dfb8c38"/>
        <function-ref name="reset" scoped="" ref="0x7dfb8ed8"/>
        <function-ref name="isOn" scoped="" ref="0x7dfb66f8"/>
        <function-ref name="set" scoped="" ref="0x7dfb8998"/>
        <function-ref name="start" scoped="" ref="0x7dfb60f8"/>
        <function-ref name="stop" scoped="" ref="0x7dfb62f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7dfb33b0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7dfb33b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7dfb26b8"/>
        <function-ref name="fired" scoped="" ref="0x7dfb3e98"/>
        <function-ref name="get" scoped="" ref="0x7dfb39f8"/>
        <function-ref name="reset" scoped="" ref="0x7dfb20b8"/>
        <function-ref name="isOn" scoped="" ref="0x7dfb28b8"/>
        <function-ref name="set" scoped="" ref="0x7dfb3bf8"/>
        <function-ref name="start" scoped="" ref="0x7dfb22b8"/>
        <function-ref name="stop" scoped="" ref="0x7dfb24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7dfb2b38" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7dfb2b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7dfb1ea0"/>
        <function-ref name="fired" scoped="" ref="0x7dfb16a0"/>
        <function-ref name="get" scoped="" ref="0x7dfb1200"/>
        <function-ref name="reset" scoped="" ref="0x7dfb18a0"/>
        <function-ref name="isOn" scoped="" ref="0x7dfa40b8"/>
        <function-ref name="set" scoped="" ref="0x7dfb1400"/>
        <function-ref name="start" scoped="" ref="0x7dfb1aa0"/>
        <function-ref name="stop" scoped="" ref="0x7dfb1ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7dfbb7a8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7dfbb7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7dfbaeb0"/>
        <function-ref name="test" scoped="" ref="0x7dfbaab0"/>
        <function-ref name="get" scoped="" ref="0x7dfbbdf0"/>
        <function-ref name="setScale" scoped="" ref="0x7dfb90d8"/>
        <function-ref name="getScale" scoped="" ref="0x7dfb9378"/>
        <function-ref name="reset" scoped="" ref="0x7dfba4b0"/>
        <function-ref name="overflow" scoped="" ref="0x7dfba2b0"/>
        <function-ref name="isOn" scoped="" ref="0x7dfbacb0"/>
        <function-ref name="set" scoped="" ref="0x7dfba010"/>
        <function-ref name="start" scoped="" ref="0x7dfba6b0"/>
        <function-ref name="stop" scoped="" ref="0x7dfba8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7df38f28" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7df38f28"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f2500e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f2500e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7df37110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7df37320" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7df37320"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7df35a48"/>
        <function-ref name="test" scoped="" ref="0x7df35648"/>
        <function-ref name="get" scoped="" ref="0x7df37968"/>
        <function-ref name="setScale" scoped="" ref="0x7df35c48"/>
        <function-ref name="getScale" scoped="" ref="0x7df35ee8"/>
        <function-ref name="reset" scoped="" ref="0x7df35048"/>
        <function-ref name="overflow" scoped="" ref="0x7df37e08"/>
        <function-ref name="isOn" scoped="" ref="0x7df35848"/>
        <function-ref name="set" scoped="" ref="0x7df37b68"/>
        <function-ref name="start" scoped="" ref="0x7df35248"/>
        <function-ref name="stop" scoped="" ref="0x7df35448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7d8399f8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7d8399f8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7f251f28"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7f251f28"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="TOne" ref="0x7f081ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d838de0"/>
        <function-ref name="fired" scoped="" ref="0x7d8386a0"/>
        <function-ref name="startAt" scoped="" ref="0x7d838aa0"/>
        <function-ref name="isRunning" scoped="" ref="0x7d8388a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7d837010"/>
        <function-ref name="start" scoped="" ref="0x7d838200"/>
        <function-ref name="stop" scoped="" ref="0x7d8384a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7d834120" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7d834120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d833448"/>
        <function-ref name="fired" scoped="" ref="0x7d834c08"/>
        <function-ref name="get" scoped="" ref="0x7d834768"/>
        <function-ref name="reset" scoped="" ref="0x7d834e08"/>
        <function-ref name="isOn" scoped="" ref="0x7d833648"/>
        <function-ref name="set" scoped="" ref="0x7d834968"/>
        <function-ref name="start" scoped="" ref="0x7d833048"/>
        <function-ref name="stop" scoped="" ref="0x7d833248"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7d837258" loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7d837258"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7d835a10"/>
        <function-ref name="test" scoped="" ref="0x7d835610"/>
        <function-ref name="get" scoped="" ref="0x7d8378a0"/>
        <function-ref name="setScale" scoped="" ref="0x7d835c10"/>
        <function-ref name="getScale" scoped="" ref="0x7d835eb0"/>
        <function-ref name="reset" scoped="" ref="0x7d835010"/>
        <function-ref name="overflow" scoped="" ref="0x7d837d40"/>
        <function-ref name="isOn" scoped="" ref="0x7d835810"/>
        <function-ref name="set" scoped="" ref="0x7d837aa0"/>
        <function-ref name="start" scoped="" ref="0x7d835210"/>
        <function-ref name="stop" scoped="" ref="0x7d835410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7df1bdb0" loc="24:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7df1bdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120ce0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7df1a518"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7df1a918"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7df1a718"/>
        <function-ref name="overflow" scoped="" ref="0x7df1ab18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7df15150" loc="24:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7df15150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="TOne" ref="0x7f081ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7df158a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7df15ca0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7df15aa0"/>
        <function-ref name="overflow" scoped="" ref="0x7df15ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7df13e88" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7df13e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="TOne" ref="0x7f081ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7df12600"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7df12a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7df12800"/>
        <function-ref name="overflow" scoped="" ref="0x7df12c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7df12e68" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7df12e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7df04610"/>
        <function-ref name="test" scoped="" ref="0x7df04210"/>
        <function-ref name="get" scoped="" ref="0x7df104d8"/>
        <function-ref name="setScale" scoped="" ref="0x7df04810"/>
        <function-ref name="getScale" scoped="" ref="0x7df04ab0"/>
        <function-ref name="reset" scoped="" ref="0x7df10b78"/>
        <function-ref name="overflow" scoped="" ref="0x7df10978"/>
        <function-ref name="isOn" scoped="" ref="0x7df04410"/>
        <function-ref name="set" scoped="" ref="0x7df106d8"/>
        <function-ref name="start" scoped="" ref="0x7df10d78"/>
        <function-ref name="stop" scoped="" ref="0x7df04010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7def3620" loc="52:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7def3620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120ce0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7def3d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7def2210"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7def2010"/>
        <function-ref name="overflow" scoped="" ref="0x7def2410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7df015c0" loc="51:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7df015c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120ce0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7df01d10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7def3128"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7df01f10"/>
        <function-ref name="overflow" scoped="" ref="0x7def3328"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7d842d28" loc="50:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7d842d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120ce0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d83f088"/>
        <function-ref name="fired" scoped="" ref="0x7d841938"/>
        <function-ref name="startAt" scoped="" ref="0x7d841d38"/>
        <function-ref name="isRunning" scoped="" ref="0x7d841b38"/>
        <function-ref name="getAlarm" scoped="" ref="0x7d83f288"/>
        <function-ref name="start" scoped="" ref="0x7d841498"/>
        <function-ref name="stop" scoped="" ref="0x7d841738"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7d83e5d0" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x7d83e5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="TOne" ref="0x7f081ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d83d950"/>
        <function-ref name="fired" scoped="" ref="0x7d83d210"/>
        <function-ref name="startAt" scoped="" ref="0x7d83d610"/>
        <function-ref name="isRunning" scoped="" ref="0x7d83d410"/>
        <function-ref name="getAlarm" scoped="" ref="0x7d83db50"/>
        <function-ref name="start" scoped="" ref="0x7d83ed20"/>
        <function-ref name="stop" scoped="" ref="0x7d83d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7d83f560" loc="57:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7d83f560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120ce0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7d83fcb0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7d83e0d8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7d83feb0"/>
        <function-ref name="overflow" scoped="" ref="0x7d83e2d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7deba280" loc="18:/opt/tinyos-2.x/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7deba280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7deba458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7deb5268" loc="68:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x7deb5268"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7deb5440"/>
        <function-ref name="isInput" scoped="" ref="0x7deb5520"/>
        <function-ref name="toggle" scoped="" ref="0x7deb5600"/>
        <function-ref name="isOutput" scoped="" ref="0x7deb56e0"/>
        <function-ref name="get" scoped="" ref="0x7deb57c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7deb58a0"/>
        <function-ref name="set" scoped="" ref="0x7deb5980"/>
        <function-ref name="clr" scoped="" ref="0x7deb5a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7deb5bd8" loc="69:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x7deb5bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7deb5db0"/>
        <function-ref name="isInput" scoped="" ref="0x7deb5e90"/>
        <function-ref name="toggle" scoped="" ref="0x7deb4010"/>
        <function-ref name="isOutput" scoped="" ref="0x7deb40f0"/>
        <function-ref name="get" scoped="" ref="0x7deb41d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7deb42b0"/>
        <function-ref name="set" scoped="" ref="0x7deb4390"/>
        <function-ref name="clr" scoped="" ref="0x7deb4470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7deb45e8" loc="70:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7deb45e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7deb47c0"/>
        <function-ref name="isInput" scoped="" ref="0x7deb48a0"/>
        <function-ref name="toggle" scoped="" ref="0x7deb4980"/>
        <function-ref name="isOutput" scoped="" ref="0x7deb4a60"/>
        <function-ref name="get" scoped="" ref="0x7deb4b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7deb4c20"/>
        <function-ref name="set" scoped="" ref="0x7deb4d00"/>
        <function-ref name="clr" scoped="" ref="0x7deb4de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7deb6818" loc="67:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7deb6818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7deb69f0"/>
        <function-ref name="isInput" scoped="" ref="0x7deb6ad0"/>
        <function-ref name="toggle" scoped="" ref="0x7deb6bb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7deb6c90"/>
        <function-ref name="get" scoped="" ref="0x7deb6d70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7deb6e50"/>
        <function-ref name="set" scoped="" ref="0x7deb5010"/>
        <function-ref name="clr" scoped="" ref="0x7deb50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7deb3980" loc="72:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x7deb3980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7deb3b58"/>
        <function-ref name="isInput" scoped="" ref="0x7deb3c38"/>
        <function-ref name="toggle" scoped="" ref="0x7deb3d18"/>
        <function-ref name="isOutput" scoped="" ref="0x7deb3df8"/>
        <function-ref name="get" scoped="" ref="0x7deb3ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7deb2010"/>
        <function-ref name="set" scoped="" ref="0x7deb20f0"/>
        <function-ref name="clr" scoped="" ref="0x7deb21d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7e013e90" loc="66:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7e013e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7deb6080"/>
        <function-ref name="isInput" scoped="" ref="0x7deb6160"/>
        <function-ref name="toggle" scoped="" ref="0x7deb6240"/>
        <function-ref name="isOutput" scoped="" ref="0x7deb6320"/>
        <function-ref name="get" scoped="" ref="0x7deb6400"/>
        <function-ref name="makeOutput" scoped="" ref="0x7deb64e0"/>
        <function-ref name="set" scoped="" ref="0x7deb65c0"/>
        <function-ref name="clr" scoped="" ref="0x7deb66a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7deb3010" loc="71:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x7deb3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7deb31e8"/>
        <function-ref name="isInput" scoped="" ref="0x7deb32c8"/>
        <function-ref name="toggle" scoped="" ref="0x7deb33a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7deb3488"/>
        <function-ref name="get" scoped="" ref="0x7deb3568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7deb3648"/>
        <function-ref name="set" scoped="" ref="0x7deb3728"/>
        <function-ref name="clr" scoped="" ref="0x7deb3808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7de9eed0" loc="39:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x7de9eed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7dea00c0"/>
        <function-ref name="disable" scoped="" ref="0x7dea01a0"/>
        <function-ref name="captured" scoped="" ref="0x7dea0280"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7dea0360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7dea0500" loc="40:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x7dea0500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7dea06d8"/>
        <function-ref name="disable" scoped="" ref="0x7dea07b8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7dea0898"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7dea0978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7dea0b18" loc="41:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7dea0b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7dea0cf0"/>
        <function-ref name="disable" scoped="" ref="0x7dea0dd0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7dea0eb0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7de9f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7de9b6b0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7de9b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7de9b888"/>
        <function-ref name="disable" scoped="" ref="0x7de9b968"/>
        <function-ref name="captured" scoped="" ref="0x7de9ba48"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7de9bb28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x7de9bd38" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x7de9bd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7de914f8"/>
        <function-ref name="test" scoped="" ref="0x7de910f8"/>
        <function-ref name="get" scoped="" ref="0x7de9a390"/>
        <function-ref name="captured" scoped="" ref="0x7de9a830"/>
        <function-ref name="reset" scoped="" ref="0x7de9aad0"/>
        <function-ref name="isOn" scoped="" ref="0x7de912f8"/>
        <function-ref name="set" scoped="" ref="0x7de9a590"/>
        <function-ref name="start" scoped="" ref="0x7de9acd0"/>
        <function-ref name="stop" scoped="" ref="0x7de9aed0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7de90cd0" loc="9:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7de90cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7de90ea8"/>
        <function-ref name="fired" scoped="" ref="0x7de85010"/>
        <function-ref name="disable" scoped="" ref="0x7de850f0"/>
        <function-ref name="edge" scoped="" ref="0x7de851d0"/>
        <function-ref name="enable" scoped="" ref="0x7de852b0"/>
        <function-ref name="getValue" scoped="" ref="0x7de85390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7de906d8" loc="8:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7de906d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7de908b0"/>
        <function-ref name="disable" scoped="" ref="0x7de90990"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7de90a70"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7de90b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATimer" ref="0x7de7f300" loc="71:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATimer" scoped="" ref="0x7de7f300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7de7dc28"/>
        <function-ref name="fired" scoped="" ref="0x7de7d048"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7de7d5e8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7de7d408"/>
        <function-ref name="getdt" scoped="" ref="0x7de7c010"/>
        <function-ref name="gett0" scoped="" ref="0x7de7de08"/>
        <function-ref name="isRunning" scoped="" ref="0x7de7d228"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7de7f928"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7de7d908"/>
        <function-ref name="startOneShot" scoped="" ref="0x7de7fba8"/>
        <function-ref name="stop" scoped="" ref="0x7de7fe28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7de78dc0" loc="113:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7de78dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7de77010"/>
        <function-ref name="runTask" scoped="" ref="0x7de770f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x7de80870" loc="70:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x7de80870"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de80a48"/>
        <function-ref name="isInput" scoped="" ref="0x7de80b28"/>
        <function-ref name="toggle" scoped="" ref="0x7de80c08"/>
        <function-ref name="isOutput" scoped="" ref="0x7de80ce8"/>
        <function-ref name="get" scoped="" ref="0x7de80dc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de80ea8"/>
        <function-ref name="set" scoped="" ref="0x7de7f010"/>
        <function-ref name="clr" scoped="" ref="0x7de7f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7de80240" loc="67:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7de80240"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7de80418"/>
        <function-ref name="disable" scoped="" ref="0x7de804f8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7de805d8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7de806b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x7de7cd98" loc="87:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x7de7cd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7de7b010"/>
        <function-ref name="runTask" scoped="" ref="0x7de7b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7de81a78" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="HplCC2420InterruptsC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7de81a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7de70388"/>
        <function-ref name="fired" scoped="" ref="0x7de71798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7de71d38"/>
        <function-ref name="isOneShot" scoped="" ref="0x7de71b58"/>
        <function-ref name="getdt" scoped="" ref="0x7de70748"/>
        <function-ref name="gett0" scoped="" ref="0x7de70568"/>
        <function-ref name="isRunning" scoped="" ref="0x7de71978"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7de710b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7de70068"/>
        <function-ref name="startOneShot" scoped="" ref="0x7de71338"/>
        <function-ref name="stop" scoped="" ref="0x7de715b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7dd24320" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7dd24320"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd244f8"/>
        <function-ref name="write" scoped="" ref="0x7dd245d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7dd27b98" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7dd27b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd27d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7dd24b90" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7dd24b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd24d68"/>
        <function-ref name="write" scoped="" ref="0x7dd24e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7dd23cb8" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dd23cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd23e90"/>
        <function-ref name="write" scoped="" ref="0x7dd22010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7dd269f0" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7dd269f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd26bc8"/>
        <function-ref name="write" scoped="" ref="0x7dd26ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7dd30a40" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7dd30a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd30c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7dd26260" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7dd26260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd26438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7dd24758" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7dd24758"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd24930"/>
        <function-ref name="write" scoped="" ref="0x7dd24a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7dd27ef0" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7dd27ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd260e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7dd23880" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7dd23880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd23a58"/>
        <function-ref name="write" scoped="" ref="0x7dd23b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7dd30d98" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7dd30d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd27010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7dd22190" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7dd22190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dd22368"/>
        <function-ref name="writeDone" scoped="" ref="0x7dd22448"/>
        <function-ref name="write" scoped="" ref="0x7dd22528"/>
        <function-ref name="beginRead" scoped="" ref="0x7dd22608"/>
        <function-ref name="readDone" scoped="" ref="0x7dd226e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7dd26e28" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7dd26e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd240c0"/>
        <function-ref name="write" scoped="" ref="0x7dd241a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7dd265b8" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7dd265b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd26790"/>
        <function-ref name="write" scoped="" ref="0x7dd26870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7dd27190" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7dd27190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd27368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7dd30010" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7dd30010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dd301e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dd302c8"/>
        <function-ref name="request" scoped="" ref="0x7dd303a8"/>
        <function-ref name="granted" scoped="" ref="0x7dd30488"/>
        <function-ref name="isOwner" scoped="" ref="0x7dd30568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7dd23448" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7dd23448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd23620"/>
        <function-ref name="write" scoped="" ref="0x7dd23700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7dd23010" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7dd23010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd231e8"/>
        <function-ref name="write" scoped="" ref="0x7dd232c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7dd306e8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7dd306e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd308c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7dd27840" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7dd27840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd27a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7dd274e8" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7dd274e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd276c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7dd22868" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7dd22868"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dd22a40"/>
        <function-ref name="writeDone" scoped="" ref="0x7dd22b20"/>
        <function-ref name="write" scoped="" ref="0x7dd22c00"/>
        <function-ref name="beginRead" scoped="" ref="0x7dd22ce0"/>
        <function-ref name="readDone" scoped="" ref="0x7dd22dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7de50c50" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x7de50c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7de50e28"/>
        <function-ref name="writeDone" scoped="" ref="0x7de50f08"/>
        <function-ref name="write" scoped="" ref="0x7de45010"/>
        <function-ref name="beginRead" scoped="" ref="0x7de450f0"/>
        <function-ref name="readDone" scoped="" ref="0x7de451d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7de45600" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x7de45600"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7de457d8"/>
        <function-ref name="write" scoped="" ref="0x7de458b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7de45ce0" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x7de45ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7de45eb8"/>
        <function-ref name="write" scoped="" ref="0x7de43010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7de502d0" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7de502d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7de504a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7de50588"/>
        <function-ref name="request" scoped="" ref="0x7de50668"/>
        <function-ref name="granted" scoped="" ref="0x7de50748"/>
        <function-ref name="isOwner" scoped="" ref="0x7de50828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7de43438" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x7de43438"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7de43610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7de34c08" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7de34c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7de34de0"/>
        <function-ref name="sendDone" scoped="" ref="0x7de34ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7de3e158" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x7de3e158"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7de3e330"/>
        <function-ref name="writeDone" scoped="" ref="0x7de3e410"/>
        <function-ref name="write" scoped="" ref="0x7de3e4f0"/>
        <function-ref name="beginRead" scoped="" ref="0x7de3e5d0"/>
        <function-ref name="readDone" scoped="" ref="0x7de3e6b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7de37438" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7de37438"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7de37610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7de3dc40" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7de3dc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7de3de18"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7de3def8"/>
        <function-ref name="request" scoped="" ref="0x7de3b010"/>
        <function-ref name="granted" scoped="" ref="0x7de3b0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7de3b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7de3eae0" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x7de3eae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7de3ecb8"/>
        <function-ref name="write" scoped="" ref="0x7de3ed98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7de3d1e8" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x7de3d1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7de3d3c0"/>
        <function-ref name="write" scoped="" ref="0x7de3d4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7de38040" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7de38040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7de38218"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7de382f8"/>
        <function-ref name="led1On" scoped="" ref="0x7de383d8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7de384b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7de38598"/>
        <function-ref name="get" scoped="" ref="0x7de38678"/>
        <function-ref name="led1Off" scoped="" ref="0x7de38758"/>
        <function-ref name="led2Off" scoped="" ref="0x7de38ad8"/>
        <function-ref name="set" scoped="" ref="0x7de38838"/>
        <function-ref name="led0On" scoped="" ref="0x7de38918"/>
        <function-ref name="led2On" scoped="" ref="0x7de389f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7de3f7b0" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7de3f7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7de3f988"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7de3fa68"/>
        <function-ref name="request" scoped="" ref="0x7de3fb48"/>
        <function-ref name="granted" scoped="" ref="0x7de3fc28"/>
        <function-ref name="isOwner" scoped="" ref="0x7de3fd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7de3d8c8" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x7de3d8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7de3daa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7ddfe4a8" loc="43:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiP.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7ddfe4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ddfe680"/>
        <function-ref name="sendDone" scoped="" ref="0x7ddfe760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7ddfe170" loc="42:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiP.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7ddfe170"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7ddfe348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ddff6c8" loc="39:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiP.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ddff6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ddff8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ddffa00" loc="40:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiP.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7ddffa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ddffbd8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ddffcb8"/>
        <function-ref name="request" scoped="" ref="0x7ddffd98"/>
        <function-ref name="granted" scoped="" ref="0x7ddffe78"/>
        <function-ref name="isOwner" scoped="" ref="0x7ddfe010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7ddf84c0" loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7ddf84c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ddf8698"/>
        <function-ref name="sendDone" scoped="" ref="0x7ddf8778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7ddf8178" loc="67:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7ddf8178"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7ddf8350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ddfcdd0" loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ddfcdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ddf8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ddf8b78" loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7ddf8b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ddf8d50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ddf8e30"/>
        <function-ref name="request" scoped="" ref="0x7ddf8f10"/>
        <function-ref name="granted" scoped="" ref="0x7ddf7010"/>
        <function-ref name="isOwner" scoped="" ref="0x7ddf70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7ddf39d8" loc="79:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7ddf39d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ddf3bb0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ddf3c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x7dde5500" loc="84:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x7dde5500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dde56d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dde57b8"/>
        <function-ref name="request" scoped="" ref="0x7dde5898"/>
        <function-ref name="granted" scoped="" ref="0x7dde5978"/>
        <function-ref name="isOwner" scoped="" ref="0x7dde5a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7ddf36b0" loc="78:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7ddf36b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7ddf3888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ddf3390" loc="77:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ddf3390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ddf3568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7ddd8998" loc="83:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7ddd8998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7ddd8b70"/>
        <function-ref name="sleep" scoped="" ref="0x7dde5010"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7ddd8d30"/>
        <function-ref name="dataReady" scoped="" ref="0x7dde50f0"/>
        <function-ref name="initMaster" scoped="" ref="0x7ddd8ef0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7dde6010"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7dde60f0"/>
        <function-ref name="read" scoped="" ref="0x7dde61d0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7dde62b0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7dde6390"/>
        <function-ref name="setClock" scoped="" ref="0x7dde6470"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7dde6550"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7dde6630"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7dde6790"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7dde6870"/>
        <function-ref name="write" scoped="" ref="0x7dde6950"/>
        <function-ref name="enableSpi" scoped="" ref="0x7dde6a30"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7dde6b10"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7dde6bf0"/>
        <function-ref name="getClock" scoped="" ref="0x7dde6cd0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7dde6db0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7ddd8c50"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7ddd8e10"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7dde6e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ddf1100" loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7ddf1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ddf12d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ddf13b8"/>
        <function-ref name="request" scoped="" ref="0x7ddf1498"/>
        <function-ref name="granted" scoped="" ref="0x7ddf1578"/>
        <function-ref name="isOwner" scoped="" ref="0x7ddf1658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7ddd7010" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7ddd7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7ddd71e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7dde5ba8" loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7dde5ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7dde5d80"/>
        <function-ref name="userId" scoped="" ref="0x7dde5e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7dda6308" loc="59:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7dda6308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7dda64e0"/>
        <function-ref name="sleep" scoped="" ref="0x7dda5950"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7dda66a0"/>
        <function-ref name="dataReady" scoped="" ref="0x7dda5a30"/>
        <function-ref name="initMaster" scoped="" ref="0x7dda6860"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7dda6940"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7dda6a20"/>
        <function-ref name="read" scoped="" ref="0x7dda6b00"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7dda6be0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7dda6cc0"/>
        <function-ref name="setClock" scoped="" ref="0x7dda6da0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7dda6e80"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7dda5010"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7dda5170"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7dda5250"/>
        <function-ref name="write" scoped="" ref="0x7dda5330"/>
        <function-ref name="enableSpi" scoped="" ref="0x7dda5410"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7dda54f0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7dda55d0"/>
        <function-ref name="getClock" scoped="" ref="0x7dda56b0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7dda5790"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7dda65c0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7dda6780"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7dda5870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7dd9d9d8" loc="64:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7dd9d9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd9dbb0"/>
        <function-ref name="isInput" scoped="" ref="0x7dd9dc90"/>
        <function-ref name="toggle" scoped="" ref="0x7dd9dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd9de50"/>
        <function-ref name="get" scoped="" ref="0x7dd9c010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd9c0f0"/>
        <function-ref name="set" scoped="" ref="0x7dd9c1d0"/>
        <function-ref name="clr" scoped="" ref="0x7dd9c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7dd9e6c8" loc="62:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7dd9e6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd9e8a0"/>
        <function-ref name="isInput" scoped="" ref="0x7dd9e980"/>
        <function-ref name="toggle" scoped="" ref="0x7dd9ea60"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd9eb40"/>
        <function-ref name="get" scoped="" ref="0x7dd9ec20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd9ed00"/>
        <function-ref name="set" scoped="" ref="0x7dd9ede0"/>
        <function-ref name="clr" scoped="" ref="0x7dd9eec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7dd9fce0" loc="61:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7dd9fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd9feb8"/>
        <function-ref name="isInput" scoped="" ref="0x7dd9e010"/>
        <function-ref name="toggle" scoped="" ref="0x7dd9e0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd9e1d0"/>
        <function-ref name="get" scoped="" ref="0x7dd9e2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd9e390"/>
        <function-ref name="set" scoped="" ref="0x7dd9e470"/>
        <function-ref name="clr" scoped="" ref="0x7dd9e550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7dd9f880" loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7dd9f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7dd9fa58"/>
        <function-ref name="stop" scoped="" ref="0x7dd9fb38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7dd9c428" loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7dd9c428"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7dd9c600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7dda0010" loc="57:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7dda0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7dda01e8"/>
        <function-ref name="sleep" scoped="" ref="0x7dd9f630"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7dda03a8"/>
        <function-ref name="dataReady" scoped="" ref="0x7dd9f710"/>
        <function-ref name="initMaster" scoped="" ref="0x7dda0568"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7dda0648"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7dda0728"/>
        <function-ref name="read" scoped="" ref="0x7dda0808"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7dda08e8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7dda09c8"/>
        <function-ref name="setClock" scoped="" ref="0x7dda0aa8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7dda0b88"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7dda0c68"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7dda0dc8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7dda0ea8"/>
        <function-ref name="write" scoped="" ref="0x7dd9f010"/>
        <function-ref name="enableSpi" scoped="" ref="0x7dd9f0f0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7dd9f1d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7dd9f2b0"/>
        <function-ref name="getClock" scoped="" ref="0x7dd9f390"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7dd9f470"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7dda02c8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7dda0488"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7dd9f550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7dd9d068" loc="63:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7dd9d068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd9d240"/>
        <function-ref name="isInput" scoped="" ref="0x7dd9d320"/>
        <function-ref name="toggle" scoped="" ref="0x7dd9d400"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd9d4e0"/>
        <function-ref name="get" scoped="" ref="0x7dd9d5c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd9d6a0"/>
        <function-ref name="set" scoped="" ref="0x7dd9d780"/>
        <function-ref name="clr" scoped="" ref="0x7dd9d860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7dd64010" loc="76:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7dd64010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7dd641f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7dd642d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7dd648c8" loc="79:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7dd648c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7dd64ab0"/>
        <function-ref name="configure" scoped="" ref="0x7dd64b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7dd65888" loc="75:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7dd65888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dd65a70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dd65b50"/>
        <function-ref name="request" scoped="" ref="0x7dd65c30"/>
        <function-ref name="granted" scoped="" ref="0x7dd65d10"/>
        <function-ref name="isOwner" scoped="" ref="0x7dd65df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7dd64418" loc="77:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7dd64418"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7dd645f0"/>
        <function-ref name="userId" scoped="" ref="0x7dd646d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d7d5450" loc="34:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d7d5450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d7d5628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7d7d5788" loc="35:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7d7d5788"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7d7d5960"/>
        <function-ref name="isEmpty" scoped="" ref="0x7d7d5a40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7d7d5b20"/>
        <function-ref name="dequeue" scoped="" ref="0x7d7d5c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7d7d4ec0" loc="54:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7d7d4ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7d7d30c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7d7d31a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7d7d37a0" loc="58:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7d7d37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7d7d3988"/>
        <function-ref name="configure" scoped="" ref="0x7d7d3a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7d7d3bc8" loc="59:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7d7d3bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7d7d3da0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7d7d3e80"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7d7d2010"/>
        <function-ref name="dequeue" scoped="" ref="0x7d7d20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7d7d4780" loc="53:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7d7d4780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d7d4968"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d7d4a48"/>
        <function-ref name="request" scoped="" ref="0x7d7d4b28"/>
        <function-ref name="granted" scoped="" ref="0x7d7d4c08"/>
        <function-ref name="isOwner" scoped="" ref="0x7d7d4ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7d7d32e0" loc="55:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7d7d32e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7d7d34b8"/>
        <function-ref name="userId" scoped="" ref="0x7d7d3598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7d7d2270" loc="71:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7d7d2270"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d7d2448"/>
        <function-ref name="runTask" scoped="" ref="0x7d7d2528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7dd1b9a8" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7dd1b9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd1bb80"/>
        <function-ref name="write" scoped="" ref="0x7dd1bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7dd1c260" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7dd1c260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd1c438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7dd1a270" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7dd1a270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd1a448"/>
        <function-ref name="write" scoped="" ref="0x7dd1a528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7dd19368" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dd19368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd19540"/>
        <function-ref name="write" scoped="" ref="0x7dd19620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7dd1b0b8" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7dd1b0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd1b290"/>
        <function-ref name="write" scoped="" ref="0x7dd1b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7dd1e190" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7dd1e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd1e368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7dd1c910" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7dd1c910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd1cae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7dd1bde0" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7dd1bde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd1a010"/>
        <function-ref name="write" scoped="" ref="0x7dd1a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7dd1c5b8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7dd1c5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd1c790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7dd1af18" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7dd1af18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd19108"/>
        <function-ref name="write" scoped="" ref="0x7dd191e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7dd1e4e8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7dd1e4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd1e6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7dd197a0" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7dd197a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dd19978"/>
        <function-ref name="writeDone" scoped="" ref="0x7dd19a58"/>
        <function-ref name="write" scoped="" ref="0x7dd19b38"/>
        <function-ref name="beginRead" scoped="" ref="0x7dd19c18"/>
        <function-ref name="readDone" scoped="" ref="0x7dd19cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7dd1b4f0" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7dd1b4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd1b748"/>
        <function-ref name="write" scoped="" ref="0x7dd1b828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7dd1cc68" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7dd1cc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd1ce40"/>
        <function-ref name="write" scoped="" ref="0x7dd1cf20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7dd1e840" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7dd1e840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd1ea18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7dd1f728" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7dd1f728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dd1f900"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dd1f9e0"/>
        <function-ref name="request" scoped="" ref="0x7dd1fac0"/>
        <function-ref name="granted" scoped="" ref="0x7dd1fba0"/>
        <function-ref name="isOwner" scoped="" ref="0x7dd1fc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7dd1aae0" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7dd1aae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd1acb8"/>
        <function-ref name="write" scoped="" ref="0x7dd1ad98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7dd1a6a8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7dd1a6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd1a880"/>
        <function-ref name="write" scoped="" ref="0x7dd1a960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7dd1fe00" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7dd1fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd1e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7dd1eef0" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7dd1eef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd1c0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7dd1eb98" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7dd1eb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd1ed70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7dd19e78" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7dd19e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dd18070"/>
        <function-ref name="writeDone" scoped="" ref="0x7dd18150"/>
        <function-ref name="write" scoped="" ref="0x7dd18230"/>
        <function-ref name="beginRead" scoped="" ref="0x7dd18310"/>
        <function-ref name="readDone" scoped="" ref="0x7dd183f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7dd06a18" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x7dd06a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dd06bf0"/>
        <function-ref name="cancel" scoped="" ref="0x7dd06cd0"/>
        <function-ref name="modify" scoped="" ref="0x7dd06db0"/>
        <function-ref name="sendDone" scoped="" ref="0x7dd06e90"/>
        <function-ref name="resendCCA" scoped="" ref="0x7dd05010"/>
        <function-ref name="resend" scoped="" ref="0x7dd050f0"/>
        <function-ref name="sendCCA" scoped="" ref="0x7dd051d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dd062a8" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dd062a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dd06480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7dd065f0" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7dd065f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7dd067c8"/>
        <function-ref name="stop" scoped="" ref="0x7dd068a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaBackoff" ref="0x7dd05340" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaBackoff" scoped="" ref="0x7dd05340"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="congestion" scoped="" ref="0x7dd05518"/>
        <function-ref name="initial" scoped="" ref="0x7dd055f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioTimeStamping" ref="0x7dd00218" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioTimeStamping" scoped="" ref="0x7dd00218"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimeStamping"/>
      </instance>
      <interface-functions>
        <function-ref name="transmittedSFD" scoped="" ref="0x7dd003f0"/>
        <function-ref name="receivedSFD" scoped="" ref="0x7dd004d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7dcf5600" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7dcf5600"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dcf57d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7dcf9480" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x7dcf9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7dcf9658"/>
        <function-ref name="disable" scoped="" ref="0x7dcf9738"/>
        <function-ref name="captured" scoped="" ref="0x7dcf9818"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7dcf98f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7dcfcd28" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x7dcfcd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120ce0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7dcf9088"/>
        <function-ref name="fired" scoped="" ref="0x7dcfb938"/>
        <function-ref name="startAt" scoped="" ref="0x7dcfbd38"/>
        <function-ref name="isRunning" scoped="" ref="0x7dcfbb38"/>
        <function-ref name="getAlarm" scoped="" ref="0x7dcf9288"/>
        <function-ref name="start" scoped="" ref="0x7dcfb498"/>
        <function-ref name="stop" scoped="" ref="0x7dcfb738"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7dcf65e0" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dcf65e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dcf6838"/>
        <function-ref name="write" scoped="" ref="0x7dcf6918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7dcfda70" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7dcfda70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dcfdc48"/>
        <function-ref name="cancel" scoped="" ref="0x7dcfdd28"/>
        <function-ref name="modify" scoped="" ref="0x7dcfde08"/>
        <function-ref name="sendDone" scoped="" ref="0x7dcfdee8"/>
        <function-ref name="resendCCA" scoped="" ref="0x7dcfc010"/>
        <function-ref name="resend" scoped="" ref="0x7dcfc0f0"/>
        <function-ref name="sendCCA" scoped="" ref="0x7dcfc1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7dcf6ab0" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7dcf6ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dcf6c88"/>
        <function-ref name="write" scoped="" ref="0x7dcf6d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7dcf5978" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7dcf5978"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dcf5b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7dcf8448" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7dcf8448"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dcf8620"/>
        <function-ref name="isInput" scoped="" ref="0x7dcf8700"/>
        <function-ref name="toggle" scoped="" ref="0x7dcf87e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dcf88c0"/>
        <function-ref name="get" scoped="" ref="0x7dcf89a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dcf8a80"/>
        <function-ref name="set" scoped="" ref="0x7dcf8b60"/>
        <function-ref name="clr" scoped="" ref="0x7dcf8c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7dcf09c0" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7dcf09c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7dcf0b98"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7dcf0c78"/>
        <function-ref name="sfd" scoped="" ref="0x7dcf0d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dcfd2d8" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dcfd2d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dcfd4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7dcf77d0" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7dcf77d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dcf79a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dcf7a88"/>
        <function-ref name="request" scoped="" ref="0x7dcf7b68"/>
        <function-ref name="granted" scoped="" ref="0x7dcf7c48"/>
        <function-ref name="isOwner" scoped="" ref="0x7dcf7d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7dcf9a90" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7dcf9a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dcf9c68"/>
        <function-ref name="isInput" scoped="" ref="0x7dcf9d48"/>
        <function-ref name="toggle" scoped="" ref="0x7dcf9e28"/>
        <function-ref name="isOutput" scoped="" ref="0x7dcf9f08"/>
        <function-ref name="get" scoped="" ref="0x7dcf8010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dcf80f0"/>
        <function-ref name="set" scoped="" ref="0x7dcf81d0"/>
        <function-ref name="clr" scoped="" ref="0x7dcf82b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7dcf6f00" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7dcf6f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dcf50f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7dcf8dd8" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x7dcf8dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dcf7010"/>
        <function-ref name="isInput" scoped="" ref="0x7dcf70f0"/>
        <function-ref name="toggle" scoped="" ref="0x7dcf71d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dcf72b0"/>
        <function-ref name="get" scoped="" ref="0x7dcf7390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dcf7470"/>
        <function-ref name="set" scoped="" ref="0x7dcf7550"/>
        <function-ref name="clr" scoped="" ref="0x7dcf7630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7dcf0ec0" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7dcf0ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7dcf30c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7dcf31a0"/>
        <function-ref name="led1On" scoped="" ref="0x7dcf3280"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7dcf3360"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7dcf3440"/>
        <function-ref name="get" scoped="" ref="0x7dcf3520"/>
        <function-ref name="led1Off" scoped="" ref="0x7dcf3600"/>
        <function-ref name="led2Off" scoped="" ref="0x7dcf3980"/>
        <function-ref name="set" scoped="" ref="0x7dcf36e0"/>
        <function-ref name="led0On" scoped="" ref="0x7dcf37c0"/>
        <function-ref name="led2On" scoped="" ref="0x7dcf38a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7dcfd620" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7dcfd620"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7dcfd7f8"/>
        <function-ref name="stop" scoped="" ref="0x7dcfd8d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaBackoff" ref="0x7dcfc340" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaBackoff" scoped="" ref="0x7dcfc340"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="congestion" scoped="" ref="0x7dcfc518"/>
        <function-ref name="initial" scoped="" ref="0x7dcfc5f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeStamp" ref="0x7dcfc7a0" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStamp" scoped="" ref="0x7dcfc7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimeStamping"/>
      </instance>
      <interface-functions>
        <function-ref name="transmittedSFD" scoped="" ref="0x7dcfc978"/>
        <function-ref name="receivedSFD" scoped="" ref="0x7dcfca58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7dcf7ec0" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7dcf7ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dcf60c0"/>
        <function-ref name="writeDone" scoped="" ref="0x7dcf61a0"/>
        <function-ref name="write" scoped="" ref="0x7dcf6280"/>
        <function-ref name="beginRead" scoped="" ref="0x7dcf6360"/>
        <function-ref name="readDone" scoped="" ref="0x7dcf6440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7dcf5288" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7dcf5288"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dcf5460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7dca2eb8" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7dca2eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dca00c0"/>
        <function-ref name="write" scoped="" ref="0x7dca01a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7dca36c0" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7dca36c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dca3898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7dca0758" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7dca0758"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dca0930"/>
        <function-ref name="write" scoped="" ref="0x7dca0a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7dc9f880" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dc9f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc9fa58"/>
        <function-ref name="write" scoped="" ref="0x7dc9fb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7dca25c8" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7dca25c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dca27a0"/>
        <function-ref name="write" scoped="" ref="0x7dca2880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7dca45c8" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7dca45c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dca47a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7dca3d70" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7dca3d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dca2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7dca0320" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7dca0320"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dca04f8"/>
        <function-ref name="write" scoped="" ref="0x7dca05d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7dca3a18" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7dca3a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dca3bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7dc9f448" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7dc9f448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc9f620"/>
        <function-ref name="write" scoped="" ref="0x7dc9f700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7dca4920" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7dca4920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dca4af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7dc9fcb8" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7dc9fcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dc9fe90"/>
        <function-ref name="writeDone" scoped="" ref="0x7dc9e010"/>
        <function-ref name="write" scoped="" ref="0x7dc9e0f0"/>
        <function-ref name="beginRead" scoped="" ref="0x7dc9e1d0"/>
        <function-ref name="readDone" scoped="" ref="0x7dc9e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7dca2a00" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7dca2a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dca2c58"/>
        <function-ref name="write" scoped="" ref="0x7dca2d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7dca2190" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7dca2190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dca2368"/>
        <function-ref name="write" scoped="" ref="0x7dca2448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7dca4c78" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7dca4c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dca4e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7dca5ae0" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7dca5ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dca5cb8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dca5d98"/>
        <function-ref name="request" scoped="" ref="0x7dca5e78"/>
        <function-ref name="granted" scoped="" ref="0x7dca4010"/>
        <function-ref name="isOwner" scoped="" ref="0x7dca40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7dc9f010" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7dc9f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc9f1e8"/>
        <function-ref name="write" scoped="" ref="0x7dc9f2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7dca0b90" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7dca0b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dca0d68"/>
        <function-ref name="write" scoped="" ref="0x7dca0e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7dca4270" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7dca4270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dca4448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7dca3368" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7dca3368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dca3540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7dca3010" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7dca3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dca31e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7dc9e430" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7dc9e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dc9e608"/>
        <function-ref name="writeDone" scoped="" ref="0x7dc9e6e8"/>
        <function-ref name="write" scoped="" ref="0x7dc9e7c8"/>
        <function-ref name="beginRead" scoped="" ref="0x7dc9e8a8"/>
        <function-ref name="readDone" scoped="" ref="0x7dc9e988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7dc98d08" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7dc98d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7dc98ee0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7dc97010"/>
        <function-ref name="sfd" scoped="" ref="0x7dc970f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dc98598" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dc98598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dc98770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7dc97258" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7dc97258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7dc97430"/>
        <function-ref name="receive" scoped="" ref="0x7dc97510"/>
        <function-ref name="getPayload" scoped="" ref="0x7dc975f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7dc988e0" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7dc988e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7dc98ab8"/>
        <function-ref name="stop" scoped="" ref="0x7dc98b98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7dc911a8" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x7dc911a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dc91380"/>
        <function-ref name="isInput" scoped="" ref="0x7dc91460"/>
        <function-ref name="toggle" scoped="" ref="0x7dc91540"/>
        <function-ref name="isOutput" scoped="" ref="0x7dc91620"/>
        <function-ref name="get" scoped="" ref="0x7dc91700"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dc917e0"/>
        <function-ref name="set" scoped="" ref="0x7dc918c0"/>
        <function-ref name="clr" scoped="" ref="0x7dc919a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7dc83558" loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x7dc83558"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7dc83730"/>
        <function-ref name="runTask" scoped="" ref="0x7dc83810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7dc91b38" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x7dc91b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dc91d10"/>
        <function-ref name="isInput" scoped="" ref="0x7dc91df0"/>
        <function-ref name="toggle" scoped="" ref="0x7dc91ed0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dc90010"/>
        <function-ref name="get" scoped="" ref="0x7dc900f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dc901d0"/>
        <function-ref name="set" scoped="" ref="0x7dc902b0"/>
        <function-ref name="clr" scoped="" ref="0x7dc90390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7dc93c88" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7dc93c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7dc93e60"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7dc92010"/>
        <function-ref name="sfd" scoped="" ref="0x7dc920f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7dc87978" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7dc87978"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc87b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7dc92788" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7dc92788"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dc92960"/>
        <function-ref name="isInput" scoped="" ref="0x7dc92a40"/>
        <function-ref name="toggle" scoped="" ref="0x7dc92b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7dc92c00"/>
        <function-ref name="get" scoped="" ref="0x7dc92ce0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dc92dc0"/>
        <function-ref name="set" scoped="" ref="0x7dc92ea0"/>
        <function-ref name="clr" scoped="" ref="0x7dc91010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dc93518" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dc93518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dc936f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7dc92258" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7dc92258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7dc92430"/>
        <function-ref name="receive" scoped="" ref="0x7dc92510"/>
        <function-ref name="getPayload" scoped="" ref="0x7dc925f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7dc90b48" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7dc90b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dc90d20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dc90e00"/>
        <function-ref name="request" scoped="" ref="0x7dc90ee0"/>
        <function-ref name="granted" scoped="" ref="0x7dc87010"/>
        <function-ref name="isOwner" scoped="" ref="0x7dc870f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7dc87288" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7dc87288"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dc87460"/>
        <function-ref name="writeDone" scoped="" ref="0x7dc87540"/>
        <function-ref name="write" scoped="" ref="0x7dc87620"/>
        <function-ref name="beginRead" scoped="" ref="0x7dc87700"/>
        <function-ref name="readDone" scoped="" ref="0x7dc877e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7dc86060" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7dc86060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7dc862b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7dc86398"/>
        <function-ref name="led1On" scoped="" ref="0x7dc86478"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7dc86558"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7dc86638"/>
        <function-ref name="get" scoped="" ref="0x7dc86718"/>
        <function-ref name="led1Off" scoped="" ref="0x7dc867f8"/>
        <function-ref name="led2Off" scoped="" ref="0x7dc86b78"/>
        <function-ref name="set" scoped="" ref="0x7dc868d8"/>
        <function-ref name="led0On" scoped="" ref="0x7dc869b8"/>
        <function-ref name="led2On" scoped="" ref="0x7dc86a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7dc93860" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7dc93860"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7dc93a38"/>
        <function-ref name="stop" scoped="" ref="0x7dc93b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7dc90530" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7dc90530"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7dc90708"/>
        <function-ref name="disable" scoped="" ref="0x7dc907e8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7dc908c8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7dc909a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7dc87cf0" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7dc87cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc87ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7dc589a8" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7dc589a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc58b80"/>
        <function-ref name="write" scoped="" ref="0x7dc58c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7dc5a260" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7dc5a260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc5a438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7dc57270" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7dc57270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc57448"/>
        <function-ref name="write" scoped="" ref="0x7dc57528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7dc56368" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dc56368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc56540"/>
        <function-ref name="write" scoped="" ref="0x7dc56620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7dc580b8" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7dc580b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc58290"/>
        <function-ref name="write" scoped="" ref="0x7dc58370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7dc5b190" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7dc5b190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc5b368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7dc5a910" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7dc5a910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc5aae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7dc58de0" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7dc58de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc57010"/>
        <function-ref name="write" scoped="" ref="0x7dc570f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7dc5a5b8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7dc5a5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc5a790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7dc57f18" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7dc57f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc56108"/>
        <function-ref name="write" scoped="" ref="0x7dc561e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7dc5b4e8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7dc5b4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc5b6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7dc567a0" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7dc567a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dc56978"/>
        <function-ref name="writeDone" scoped="" ref="0x7dc56a58"/>
        <function-ref name="write" scoped="" ref="0x7dc56b38"/>
        <function-ref name="beginRead" scoped="" ref="0x7dc56c18"/>
        <function-ref name="readDone" scoped="" ref="0x7dc56cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7dc584f0" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7dc584f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc58748"/>
        <function-ref name="write" scoped="" ref="0x7dc58828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7dc5ac68" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7dc5ac68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc5ae40"/>
        <function-ref name="write" scoped="" ref="0x7dc5af20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7dc5b840" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7dc5b840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc5ba18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7dc946a8" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7dc946a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dc94880"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dc94960"/>
        <function-ref name="request" scoped="" ref="0x7dc94a40"/>
        <function-ref name="granted" scoped="" ref="0x7dc94b20"/>
        <function-ref name="isOwner" scoped="" ref="0x7dc94c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7dc57ae0" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7dc57ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc57cb8"/>
        <function-ref name="write" scoped="" ref="0x7dc57d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7dc576a8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7dc576a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc57880"/>
        <function-ref name="write" scoped="" ref="0x7dc57960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7dc94d80" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7dc94d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc5b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7dc5bef0" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7dc5bef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc5a0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7dc5bb98" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7dc5bb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc5bd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7dc56e78" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7dc56e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dc55070"/>
        <function-ref name="writeDone" scoped="" ref="0x7dc55150"/>
        <function-ref name="write" scoped="" ref="0x7dc55230"/>
        <function-ref name="beginRead" scoped="" ref="0x7dc55310"/>
        <function-ref name="readDone" scoped="" ref="0x7dc553f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7dc3eb38" loc="35:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7dc3eb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7dc3ed10"/>
        <function-ref name="rand32" scoped="" ref="0x7dc3edf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7dc3e288" loc="34:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7dc3e288"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dc3e8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dc435f0" loc="33:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dc435f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dc437c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7dc3ba00" loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7dc3ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7dc3bbd8"/>
        <function-ref name="rand32" scoped="" ref="0x7dc3bcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7dc3b150" loc="33:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7dc3b150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dc3b778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dc41d20" loc="32:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dc41d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dc41ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7dc36968" loc="37:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7dc36968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7dc36b40"/>
        <function-ref name="rand32" scoped="" ref="0x7dc36c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7dc360b8" loc="36:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7dc360b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dc366e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dc3ac78" loc="35:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dc3ac78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dc3ae50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7dc28c20" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7dc28c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7dc28df8"/>
        <function-ref name="getRssi" scoped="" ref="0x7dc28ed8"/>
        <function-ref name="getPower" scoped="" ref="0x7dc21010"/>
        <function-ref name="getLqi" scoped="" ref="0x7dc210f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7dc21290" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7dc21290"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7dc21468"/>
        <function-ref name="noAck" scoped="" ref="0x7dc21548"/>
        <function-ref name="wasAcked" scoped="" ref="0x7dc21628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7dc113b8" loc="41:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="ComSatC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7dc113b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dc11590"/>
        <function-ref name="getPayload" scoped="" ref="0x7dc11670"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dc11750"/>
        <function-ref name="cancel" scoped="" ref="0x7dc11830"/>
        <function-ref name="sendDone" scoped="" ref="0x7dc11910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7dc11a50" loc="42:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="ComSatC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7dc11a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7dc11c28"/>
        <function-ref name="payloadLength" scoped="" ref="0x7dc11d08"/>
        <function-ref name="getPayload" scoped="" ref="0x7dc11de8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dc11ec8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7dbc6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7dbc6150" loc="43:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="ComSatC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7dbc6150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7dbc6328"/>
        <function-ref name="address" scoped="" ref="0x7dbc6408"/>
        <function-ref name="destination" scoped="" ref="0x7dbc64e8"/>
        <function-ref name="setSource" scoped="" ref="0x7dbc65c8"/>
        <function-ref name="setDestination" scoped="" ref="0x7dbc66a8"/>
        <function-ref name="type" scoped="" ref="0x7dbc6788"/>
        <function-ref name="setType" scoped="" ref="0x7dbc6868"/>
        <function-ref name="isForMe" scoped="" ref="0x7dbc6948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7dbc6aa8" loc="44:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="ComSatC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7dbc6aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7dbc6c80"/>
        <function-ref name="noAck" scoped="" ref="0x7dbc6d60"/>
        <function-ref name="wasAcked" scoped="" ref="0x7dbc6e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7d768118" loc="36:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ComSatC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7d768118"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d7682f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d7683d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d7684b0"/>
        <function-ref name="cancel" scoped="" ref="0x7d768590"/>
        <function-ref name="sendDone" scoped="" ref="0x7d768670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7d7687e0" loc="38:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ComSatC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d7687e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d7689b8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d768a98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d768b78"/>
        <function-ref name="cancel" scoped="" ref="0x7d768c58"/>
        <function-ref name="sendDone" scoped="" ref="0x7d768d38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7d768e78" loc="39:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ComSatC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d768e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7d767070"/>
        <function-ref name="address" scoped="" ref="0x7d767150"/>
        <function-ref name="destination" scoped="" ref="0x7d767230"/>
        <function-ref name="setSource" scoped="" ref="0x7d767310"/>
        <function-ref name="setDestination" scoped="" ref="0x7d7673f0"/>
        <function-ref name="type" scoped="" ref="0x7d7674d0"/>
        <function-ref name="setType" scoped="" ref="0x7d7675b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7d767690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7dbf88c0" loc="35:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7dbf88c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dbf8a98"/>
        <function-ref name="getPayload" scoped="" ref="0x7dbf8b78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dbf8c58"/>
        <function-ref name="cancel" scoped="" ref="0x7dbf8d38"/>
        <function-ref name="sendDone" scoped="" ref="0x7dbf8e18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7dbd1a28" loc="40:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7dbd1a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7e208ed0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dbd1c10"/>
        <function-ref name="getPayload" scoped="" ref="0x7dbd1cf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dbd1dd0"/>
        <function-ref name="cancel" scoped="" ref="0x7dbd1eb0"/>
        <function-ref name="sendDone" scoped="" ref="0x7dbd0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7dbd12b8" loc="38:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7dbd12b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dbd14a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7dbd1580"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dbd1660"/>
        <function-ref name="cancel" scoped="" ref="0x7dbd1740"/>
        <function-ref name="sendDone" scoped="" ref="0x7dbd1820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7dbd0a88" loc="42:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7dbd0a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7dbd0c60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7dbd0d40"/>
        <function-ref name="getPayload" scoped="" ref="0x7dbd0e20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dbd0f00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7dbc9010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7dbc9190" loc="143:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x7dbc9190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7dbc9368"/>
        <function-ref name="runTask" scoped="" ref="0x7dbc9448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7dbd0150" loc="41:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7dbd0150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7dbd0328"/>
        <function-ref name="address" scoped="" ref="0x7dbd0408"/>
        <function-ref name="destination" scoped="" ref="0x7dbd04e8"/>
        <function-ref name="setSource" scoped="" ref="0x7dbd05c8"/>
        <function-ref name="setDestination" scoped="" ref="0x7dbd06a8"/>
        <function-ref name="type" scoped="" ref="0x7dbd0788"/>
        <function-ref name="setType" scoped="" ref="0x7dbd0868"/>
        <function-ref name="isForMe" scoped="" ref="0x7dbd0948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7dbc2030" loc="38:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="ComSatC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7dbc2030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7dbc2208"/>
        <function-ref name="payloadLength" scoped="" ref="0x7dbc22e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7dbc23c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dbc24a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7dbc2588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7dbc3b38" loc="37:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="ComSatC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7dbc3b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7dbc3d10"/>
        <function-ref name="receive" scoped="" ref="0x7dbc3df0"/>
        <function-ref name="getPayload" scoped="" ref="0x7dbc3ed0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7dbc26c8" loc="39:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="ComSatC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7dbc26c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7dbc28a0"/>
        <function-ref name="address" scoped="" ref="0x7dbc2980"/>
        <function-ref name="destination" scoped="" ref="0x7dbc2a60"/>
        <function-ref name="setSource" scoped="" ref="0x7dbc2b40"/>
        <function-ref name="setDestination" scoped="" ref="0x7dbc2c20"/>
        <function-ref name="type" scoped="" ref="0x7dbc2d00"/>
        <function-ref name="setType" scoped="" ref="0x7dbc2de0"/>
        <function-ref name="isForMe" scoped="" ref="0x7dbc2ec0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Boot" loc="39:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10;</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7ef83018" loc="49:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="LCDSetter" loc="1:LCDSetter.nc">
      <function command="" provided="0" name="setLCDDevicePriorty" ref="0x7ef429f0" loc="4:LCDSetter.nc">
        <interfacedef-ref qname="LCDSetter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="priority" ref="0x7ef42888" loc="4:LCDSetter.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7ef61bd8" loc="2:LCDSetter.nc">
        <interfacedef-ref qname="LCDSetter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setLCDReceivePacket" ref="0x7ef42e98" loc="5:LCDSetter.nc">
        <interfacedef-ref qname="LCDSetter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="payload" ref="0x7ef42d30" loc="5:LCDSetter.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLCDData" ref="0x7ef42550" loc="3:LCDSetter.nc">
        <interfacedef-ref qname="LCDSetter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7ef61ef8" loc="3:LCDSetter.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="value" ref="0x7ef420b0" loc="3:LCDSetter.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
          <variable name="avg" ref="0x7ef42240" loc="3:LCDSetter.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
          <variable name="stdev" ref="0x7ef423d0" loc="3:LCDSetter.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLCDStatus" ref="0x7ef41338" loc="7:LCDSetter.nc">
        <interfacedef-ref qname="LCDSetter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="stat" ref="0x7ef411d0" loc="7:LCDSetter.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LEDController" loc="2:LEDController.nc">
      <function command="" provided="0" name="test" ref="0x7ef63b38" loc="3:LEDController.nc">
        <interfacedef-ref qname="LEDController"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="BlinkLed1" ref="0x7ef53140" loc="7:LEDController.nc">
        <interfacedef-ref qname="LEDController"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="IntervalBlinkLed0" ref="0x7ef538d8" loc="10:LEDController.nc">
        <interfacedef-ref qname="LEDController"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="interval" ref="0x7ef53770" loc="10:LEDController.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="BlinkLed2" ref="0x7ef53438" loc="8:LEDController.nc">
        <interfacedef-ref qname="LEDController"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="IntervalBlinkLed1" ref="0x7ef53d78" loc="11:LEDController.nc">
        <interfacedef-ref qname="LEDController"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="interval" ref="0x7ef53c10" loc="11:LEDController.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="BlinkLed0" ref="0x7ef63e30" loc="6:LEDController.nc">
        <interfacedef-ref qname="LEDController"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="IntervalBlinkLed2" ref="0x7ef51230" loc="12:LEDController.nc">
        <interfacedef-ref qname="LEDController"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="interval" ref="0x7ef510c8" loc="12:LEDController.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="BlinkDone" ref="0x7ef51528" loc="13:LEDController.nc">
        <interfacedef-ref qname="LEDController"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f210198" loc="56:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f2105a0" loc="64:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ComSat" loc="1:ComSat.nc">
      <function event="" provided="0" name="initDone" ref="0x7ef23358" loc="3:ComSat.nc">
        <interfacedef-ref qname="ComSat"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="init" ref="0x7ef23060" loc="2:ComSat.nc">
        <interfacedef-ref qname="ComSat"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sendData" ref="0x7ef237f8" loc="4:ComSat.nc">
        <interfacedef-ref qname="ComSat"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ef23690" loc="4:ComSat.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="received" ref="0x7ef23c98" loc="5:ComSat.nc">
        <interfacedef-ref qname="ComSat"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ef23b30" loc="5:ComSat.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TempSensor" loc="1:TempSensor.nc">
      <function event="" provided="0" name="done" ref="0x7ef33f00" loc="3:TempSensor.nc">
        <interfacedef-ref qname="TempSensor"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mytemp" ref="0x7ef33a68" loc="3:TempSensor.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
          <variable name="myhumi" ref="0x7ef33bf8" loc="3:TempSensor.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
          <variable name="myur" ref="0x7ef33d88" loc="3:TempSensor.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7ef33748" loc="2:TempSensor.nc">
        <interfacedef-ref qname="TempSensor"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ef81660" loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ef81660"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7ef715b8" loc="125:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.&#10;</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7ef80950" loc="72:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7ef729a8" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7ef72418" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7ef725a8" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7ef720f0" loc="87:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.&#10;</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7ef71dd0" loc="140:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7ef719f8" loc="133:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7ef80d20" loc="81:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7ef81d18" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7ef81a70" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7ef71260" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7ef72cd0" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7ef72e60" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7ef80310" loc="62:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7ef80068" loc="62:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7ef80618" loc="67:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="40:/opt/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Init.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.1.2.13 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7ee61420" loc="51:/opt/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7ee33268" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7ee33010" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7ee42c98" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.&#10;</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7ee41288" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10;</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7ee41010" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7ee41860" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10;</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7ee415e0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7ee41c48" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10;</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10;</short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7edf17e0" loc="33:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7edf1af8" loc="34:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7edf11b0" loc="31:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7edf0140" loc="36:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7edf14c8" loc="32:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7edf1e10" loc="35:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7ee00b80" loc="29:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="clr" ref="0x7ee00e90" loc="30:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.&#10;&#10;</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f230010" loc="46:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f2307f8" loc="61:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f230428" loc="54:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10;</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f0513c8" loc="59:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep. </short>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.1.2.11 2006/09/22 19:23:59 idgay Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7efe0028" loc="54:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f152338"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f001ee8" loc="44:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7eb017c0" loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7eb017c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7eb01c80" loc="50:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10;</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ead4450" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ead4450"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7ead4568" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ead4568"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7ead4a38" loc="53:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ead4568"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7ead31b0" loc="65:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7ead4e58" loc="60:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits. </short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7ead3580" loc="71:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed. </short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10;</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7eae4388" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7eae4388"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7eae44a0" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7eae44a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7eae22a8" loc="98:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.&#10;</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7eae44a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7eae3268" loc="67:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7eae3f08" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7eae44a0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7eae44a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7eae39e0" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7eae44a0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7eae3b70" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7eae44a0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7eae36a0" loc="77:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7eae26e0" loc="105:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10;</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7eae44a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="start" ref="0x7eae4b60" loc="55:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7eae44a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7eae48c8" loc="55:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7eae44a0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7eae4f18" loc="62:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10;</short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x7eab0cd0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1015c0"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f101810"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7eaa6d00" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0e16f0"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f0e1940"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7eaa64f0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f03a8"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f0f05f8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7eaa69a8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f03a8"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f0f05f8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7eaa6840" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f03a8"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f0f05f8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7eaa51d0" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0e16f0"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f0e1940"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7eaa5068" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0e16f0"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f0e1940"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7eaa6198" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1015c0"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f101810"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7eaa6030" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1015c0"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f101810"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.&#10;</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7eaa3778" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7eaa3778"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7eaa0278" loc="65:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10;</short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7eaa2520" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7eaa3bf0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.&#10;</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7eaa3778"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="reset" ref="0x7eaa2858" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7eaa0600" loc="71:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10;</short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7eaa21f0" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.&#10;</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7eaa3778"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7eaa2010" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7eaa3778"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7eaa2b88" loc="56:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7eaa2eb8" loc="59:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.  &#10;</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7eac1010" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7eac1010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7eab50e8" loc="89:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="test" ref="0x7eac0a18" loc="78:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10;</short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7eac1470" loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.&#10;</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7eac1010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7eab5600" loc="95:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.&#10;</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7eab5428" loc="95:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7eab5998" loc="101:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.&#10;</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="reset" ref="0x7eac0010" loc="66:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7eac1cb8" loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7eac0da8" loc="84:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10;</short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7eac1970" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.&#10;</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7eac1010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7eac17b0" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7eac1010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7eac0348" loc="69:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7eac0678" loc="72:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <short>&#10; Constants for manipulating LEDs.&#10;&#10;</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7e8b1e00" loc="50:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7e8b0200" loc="56:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7e8b0570" loc="61:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7e8b0cb8" loc="72:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7e8a7788" loc="89:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7e8a7cc8" loc="106:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LED_LED0, LED_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7e8b08e0" loc="66:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7e8a63d0" loc="123:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask. </short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7e8a6030" loc="123:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7e8b1a90" loc="45:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7e8a7040" loc="78:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7e8a73b0" loc="83:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Interaction" loc="20:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
      <documentation loc="20:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
        <short>***************************************************************************</short>
      </documentation>
      <function event="" provided="0" name="StartDoneConfiguration" ref="0x7e767798" loc="22:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
        <interfacedef-ref qname="Interaction"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="appType" ref="0x7e7674a0" loc="22:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="optType" ref="0x7e767628" loc="22:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getSensorDataDone" ref="0x7e766590" loc="26:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
        <interfacedef-ref qname="Interaction"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:67" alignment="I:1"><struct-ref name="_app_struct" ref="0x7e791c40"/>
                <typename><typedef-ref name="App_struct_t" ref="0x7e7901e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="App_Payload" ref="0x7e766290" loc="26:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:67" alignment="I:1"><struct-ref name="_app_struct" ref="0x7e791c40"/>
                <typename><typedef-ref name="App_struct_t" ref="0x7e7901e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="app_size" ref="0x7e766420" loc="26:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="Urgency_Data" ref="0x7e765220" loc="29:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
        <interfacedef-ref qname="Interaction"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Urgency_Payload" ref="0x7e766f08" loc="29:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e7650b0" loc="29:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Process_CMD" ref="0x7e766bc0" loc="28:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
        <interfacedef-ref qname="Interaction"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="payload" ref="0x7e7668c8" loc="28:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e766a50" loc="28:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="SetSamplingTime" ref="0x7e767c30" loc="24:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
        <interfacedef-ref qname="Interaction"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="SamplingInfo" ref="0x7e767ac8" loc="24:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSensorData" ref="0x7e767f28" loc="25:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
        <interfacedef-ref qname="Interaction"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="StartConfiguration" ref="0x7e767178" loc="21:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
        <interfacedef-ref qname="Interaction"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:67" alignment="I:1"><struct-ref name="_app_struct" ref="0x7e791c40"/>
                <typename><typedef-ref name="App_struct_t" ref="0x7e7901e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="App_Payload" ref="0x7e767010" loc="21:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:67" alignment="I:1"><struct-ref name="_app_struct" ref="0x7e791c40"/>
                <typename><typedef-ref name="App_struct_t" ref="0x7e7901e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Send_LongData" ref="0x7e765b80" loc="31:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
        <interfacedef-ref qname="Interaction"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="OptType" ref="0x7e765540" loc="31:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="Cmd1" ref="0x7e7656c8" loc="31:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="Len" ref="0x7e765850" loc="31:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="LongDataBuff" ref="0x7e765a00" loc="31:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="65:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7e761700" loc="73:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.&#10;&#10;</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e761b50" loc="82:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10;</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="SCSuartDBG" loc="29:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBG.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBG.nc">
        <short>***************************************************************************</short>
      </documentation>
      <function command="" provided="0" name="UARTSend" ref="0x7e758220" loc="30:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBG.nc">
        <interfacedef-ref qname="SCSuartDBG"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e763f10" loc="30:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBG.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e7580b0" loc="30:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBG.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
      <documentation loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7e6e8608" loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7e6e8608"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7e6e8a68" loc="55:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.&#10; &#10;</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7e6e7158" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().&#10;&#10;</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7e6e8608"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7e6e8d88" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7e6e8f10" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7e6e8608"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CommunicationWithOPT" loc="20:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
      <documentation loc="20:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
        <short>***************************************************************************</short>
      </documentation>
      <function event="" provided="0" name="parsing_sensor" ref="0x7e6d8830" loc="30:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
        <interfacedef-ref qname="CommunicationWithOPT"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="RecvMsg" ref="0x7e6d86c8" loc="30:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="RequestLongMSG" ref="0x7e6d91f8" loc="26:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
        <interfacedef-ref qname="CommunicationWithOPT"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="OptType" ref="0x7e6e0ee8" loc="26:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="Seq" ref="0x7e6d9088" loc="26:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="SpecialControlMSG" ref="0x7e6d9e90" loc="27:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
        <interfacedef-ref qname="CommunicationWithOPT"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="TXpacketType" ref="0x7e6d9528" loc="27:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="OptType" ref="0x7e6d96b0" loc="27:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="Cmd1" ref="0x7e6d9838" loc="27:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="Cmd2" ref="0x7e6d99c0" loc="27:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="SetDataBuff" ref="0x7e6d9b70" loc="27:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="RXpacketType" ref="0x7e6d9d00" loc="27:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="parsing_control" ref="0x7e6d8cf8" loc="31:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
        <interfacedef-ref qname="CommunicationWithOPT"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="RecvMsg" ref="0x7e6d8b90" loc="31:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="parsing_longDT" ref="0x7e6d61d0" loc="32:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
        <interfacedef-ref qname="CommunicationWithOPT"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="RecvMsg" ref="0x7e6d6068" loc="32:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="RequestSensorMSG" ref="0x7e6e0bc8" loc="25:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
        <interfacedef-ref qname="CommunicationWithOPT"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="OptType" ref="0x7e6e0a60" loc="25:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="SendConfigureMSG" ref="0x7e6e1440" loc="22:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
        <interfacedef-ref qname="CommunicationWithOPT"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="SendLongMSG" ref="0x7e6e1da0" loc="23:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
        <interfacedef-ref qname="CommunicationWithOPT"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="OptType" ref="0x7e6e1760" loc="23:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="Cmd1" ref="0x7e6e18e8" loc="23:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="Len" ref="0x7e6e1a70" loc="23:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="LongDataBuff" ref="0x7e6e1c20" loc="23:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7e6e1140" loc="21:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
        <interfacedef-ref qname="CommunicationWithOPT"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="SendControlMSG" ref="0x7e6e0738" loc="24:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
        <interfacedef-ref qname="CommunicationWithOPT"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="OptType" ref="0x7e6e00f8" loc="24:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="Cmd1" ref="0x7e6e0280" loc="24:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="Cmd2" ref="0x7e6e0408" loc="24:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="SetDataBuff" ref="0x7e6e05b8" loc="24:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="parsing_config" ref="0x7e6d8368" loc="29:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
        <interfacedef-ref qname="CommunicationWithOPT"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="RecvMsg" ref="0x7e6d8200" loc="29:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SensirionSht11" loc="40:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
        <short>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor. &#10;&#10;</short>
        <long>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="measureHumidityDone" ref="0x7e629ae0" loc="84:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a humidity measurement.&#10;&#10;</short>
          <long>&#10; Presents the result of a humidity measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the humidity reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7e629718" loc="84:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7e6298a8" loc="84:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readStatusReg" ref="0x7e629ed8" loc="92:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
        <documentation loc="86:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Reads the current contents of the SHT11 status and control&#10; register.</short>
          <long>&#10; Reads the current contents of the SHT11 status and control&#10; register. See the datasheet for interpretation of this register.&#10;&#10; @return SUCCESS if the read will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="measureHumidity" ref="0x7e6293f0" loc="76:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Starts a humidity measurement.&#10;&#10;</short>
          <long>&#10; Starts a humidity measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="measureTemperature" ref="0x7e62a960" loc="61:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Starts a temperature measurement.&#10;&#10;</short>
          <long>&#10; Starts a temperature measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="writeStatusReg" ref="0x7e628b50" loc="109:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Writes a new value to the SHT11 status and control register.&#10;&#10;</short>
          <long>&#10; Writes a new value to the SHT11 status and control register.&#10;&#10; @param val the new value to be written&#10;&#10; @return SUCCESS if the write will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7e628900" loc="109:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7e62a0c0" loc="47:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Resets the sensor.&#10;&#10;</short>
          <long>&#10; Resets the sensor.&#10;&#10; @return SUCCESS if the sensor will be reset&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="writeStatusRegDone" ref="0x7e6260e0" loc="116:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
        <documentation loc="111:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Signals the completion of the status register write.&#10;&#10;</short>
          <long>&#10; Signals the completion of the status register write.&#10;&#10; @param result SUCCESS if the write was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7e628e78" loc="116:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readStatusRegDone" ref="0x7e6285d8" loc="100:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Presents the value of the status register.&#10;&#10;</short>
          <long>&#10; Presents the value of the status register.&#10;&#10; @param result SUCCESS if the read succeeded&#10; @param val the value of the register&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7e628228" loc="100:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7e6283b0" loc="100:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="resetDone" ref="0x7e62a5d8" loc="54:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Signals that the sensor has been reset.&#10;&#10;</short>
          <long>&#10; Signals that the sensor has been reset.&#10;&#10; @param result SUCCESS if the reset succeeded&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7e62a3e0" loc="54:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="measureTemperatureDone" ref="0x7e629070" loc="69:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a temperature measurement.&#10;&#10;</short>
          <long>&#10; Presents the result of a temperature measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the temperature reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7e62ac88" loc="69:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7e62ae18" loc="69:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
      <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.1.2.10 $&#10; @date $Date: 2006/08/15 11:50:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7e634d58" loc="101:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.&#10;&#10;</short>
          <long>&#10; Release a shared resource you previously acquired.&#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7e634620" loc="87:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="request" ref="0x7e6341f0" loc="78:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="granted" ref="0x7e634940" loc="92:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7e633180" loc="109:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="103:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="32:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.1.2.3 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7e5f3590" loc="57:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.&#10;&#10;</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0x7e5f31e8" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10;</short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7e5f5e00" loc="43:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7e5f5ad8" loc="42:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="66:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7e58a408" loc="88:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10;</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7e58a168" loc="88:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7e58aef0" loc="110:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="104:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.&#10;&#10;</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7e58aca0" loc="110:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7e58be20" loc="79:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents. </short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if issuing the start command was successful&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e58a980" loc="102:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Stop the component and pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;</short>
          <long>&#10; Stop the component and pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10; Return values of SUCCESS will always result in a&#10; &#60;code>stopDone()&#60;/code> event being signalled.&#10;&#10; @return SUCCESS if issuing the stop command was successful&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10;</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7e574858" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7e5725c8" loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0x7e574500" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="edge" ref="0x7e572288" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.&#10;</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7e572010" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7e5741b0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7e574c30" loc="52:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10;</short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10;</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7e565658" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10;</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.1.2.5 $&#10; @date $Date: 2006/08/15 11:50:42 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7e5172e0" loc="43:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7e5177b8" loc="51:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7e50a9b0" loc="55:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.&#10;</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="configure" ref="0x7e50a5d8" loc="49:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.&#10;</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceController" loc="40:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10;</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $Revision: 1.1.2.4 $&#10; @date $Date: 2006/08/15 11:50:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7e514440" loc="56:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
          <short>&#10; Release control of the resource&#10;&#10;</short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceController"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="requested" ref="0x7e514d08" loc="73:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceController"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="granted" ref="0x7e514010" loc="46:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceController"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7e514850" loc="65:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10; </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceController"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7e513218" loc="81:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceController"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7e511b18" loc="80:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.&#10;&#10;</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="userId" ref="0x7e511f18" loc="88:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.&#10; &#10;</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2006/08/15 11:50:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7e501248" loc="69:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a cleint id&#10;&#10;</short>
          <long>&#10; Enqueue a cleint id&#10;&#10; @param cleintId - the cleint id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7e507518"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7e501010" loc="69:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7e507518"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7e502288" loc="43:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.&#10;&#10;</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7e502868" loc="52:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10;</short>
          <long>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7e507518"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7e5025e0" loc="52:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7e507518"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7e502c78" loc="60:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the cleint id of the next resource in the queue. &#10;</short>
          <long>&#10; Retreive the cleint id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The cleint id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7e507518"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="45:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7e4bd290" loc="52:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource. </short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="19:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10;</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x7e474498" loc="32:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10;</short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7e4740d0" loc="25:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.&#10;</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x7e474860" loc="39:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.&#10;</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="51:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
      <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7e469350" loc="51:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7e469350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7e4697d0" loc="57:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.&#10; &#10;</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7e469ec0" loc="65:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().&#10;&#10;</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7e469350"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7e469b10" loc="65:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7e469c98" loc="65:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7e469350"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="68:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10;&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10;&#10; from multiple channels using the ATmega128's free-running mode.&#10;&#10;</short>
        <long>&#10;&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10;&#10; from multiple channels using the ATmega128's free-running mode.&#10;&#10; &#60;p>&#10;&#10; Because of the possibility that samples may be imprecise after &#10;&#10; switching channels and/or reference voltages, and because there&#10;&#10; is a one sample delay on swithcing channels and reference voltages,&#10;&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10;&#10; &#60;ol type=&#34;A&#34;>&#10;&#10; &#60;li>Acquire N samples from channel C:&#10;&#10;    &#60;ol>&#10;&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;&#10;       (note that the choice of prescalers is very limited, so you&#10;&#10;       don't have many choices for sampling rate)&#10;&#10;    &#60;li>ignore the first dataReady event&#10;&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;&#10;       on the last one&#10;&#10;    &#60;/ol>&#10;&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;&#10;    assumes that none of these channels are differential)&#10;&#10;    &#60;ol>&#10;&#10;    &#60;li>call getData to start sampling on channel C1&#10;&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;&#10;       *newChannel&#10;&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;&#10;       (the data from the first dataReady event is ignored)&#10;&#10;    &#60;/ol>&#10;&#10; &#60;/ol>&#10;&#10;&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;&#10; @author David Gay&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7e455538" loc="91:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10;&#10; Initiates free-running ADC conversions, with the ability to switch &#10;&#10; channels and reference-voltage with a one sample delay.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Initiates free-running ADC conversions, with the ability to switch &#10;&#10; channels and reference-voltage with a one sample delay.&#10;&#10;&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;&#10;   be changed in the dataReady event, though these changes happen&#10;&#10;   with a one-sample delay (this is a hardware restriction).&#10;&#10; @param refVoltage Initial A/D reference voltage. See the&#10;&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;&#10;   the reference voltage can be changed in the dataReady event with&#10;&#10;   a one-sample delay.&#10;&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;&#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10;&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;&#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;&#10;  See the ATmega128 manual for details.&#10;&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;&#10;   imprecise (due to a change in reference voltage, or switching to a&#10;&#10;   differential input channel)&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7e4569f8" loc="91:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7e456b88" loc="91:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7e456d28" loc="92:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7e456eb8" loc="92:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7e454668" loc="110:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10;&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10;&#10; Returns the next sample in a free-running conversion. Allow the user&#10;&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10;&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10;&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;&#10;   (we assume that the second conversion after a change of reference&#10;&#10;   voltage or after switching to a differential channel is precise)&#10;&#10; @param channel Channel this sample was from.&#10;&#10; @param newChannel Change this parameter to switch to a new channel&#10;&#10;   for the second next sample.&#10;&#10; @param newRefVoltage Change this parameter to change the reference &#10;&#10;   voltage for the second next sample.&#10;&#10;&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e455a68" loc="110:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7e455bf0" loc="110:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x7e455d78" loc="110:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x7e454010" loc="111:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x7e4541c0" loc="111:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="43:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10;&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10;&#10; a single sample from a channel.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10;&#10; a single sample from a channel.&#10;&#10;&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;&#10; @author David Gay&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7e45b3a0" loc="61:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10;&#10; Initiates an ADC conversion on a given channel.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Initiates an ADC conversion on a given channel.&#10;&#10;&#10;&#10; @param channel A/D conversion channel.&#10;&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10;&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;&#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10;&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;&#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;&#10;  See the ATmega128 manual for details.&#10;&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;&#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;&#10;   differential input channel)&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7e45c868" loc="61:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7e45c9f8" loc="61:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7e45cb98" loc="62:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7e45cd28" loc="62:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7e45a3f0" loc="82:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10;&#10; Cancel an outstanding getData operation.</short>
          <long>&#10;&#10; Cancel an outstanding getData operation. Use with care, to&#10;&#10; avoid problems with races between the dataReady event and cancel.&#10;&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;&#10;   conversion was already complete. dataReady will be (or has&#10;&#10;   already been) signaled.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7e45bd58" loc="72:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10;&#10; Indicates a sample has been recorded by the ADC as the result&#10;&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Indicates a sample has been recorded by the ADC as the result&#10;&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10;&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10;&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e45b8b8" loc="72:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7e45ba40" loc="72:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="39:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x7e444758" loc="105:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x7e448a60" loc="44:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10;</short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f132540"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x7f1327f8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x7e4428d0" loc="131:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="126:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10;</short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7e4426b0" loc="131:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7e444b58" loc="113:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="109:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10;</short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x7e445010" loc="73:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x7e446010" loc="49:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10;</short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f132540"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x7f1327f8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x7e448da8" loc="49:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f132540"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x7f1327f8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x7e445678" loc="82:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x7e442370" loc="124:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="119:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10;</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7e442dc8" loc="141:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="133:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x7e445340" loc="77:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x7e445cf0" loc="90:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="87:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x7e4459b8" loc="86:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7e4440e8" loc="97:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x7e444f08" loc="118:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="114:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10;</short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x7e4468e0" loc="60:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10;</short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1218f8"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f121ce8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x7e4466f8" loc="60:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1218f8"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f121ce8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x7e444420" loc="101:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="98:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x7e4463b0" loc="55:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10;</short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1218f8"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f121ce8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7e446c78" loc="66:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10;</short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7e4412f0" loc="147:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="143:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10;</short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e441120" loc="147:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7e44b128" loc="73:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.&#10;&#10;</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e44b598" loc="82:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10;</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ZigbexBusAdc" loc="27:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusAdc.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusAdc.nc">
        <short>***************************************************************************</short>
      </documentation>
      <function command="" provided="0" name="getChannel" ref="0x7e399f28" loc="31:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusAdc.nc">
        <documentation loc="28:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusAdc.nc">
          <short>&#10; Return the A/D channel number to use for one of the ADCn pins.&#10;</short>
        </documentation>
        <interfacedef-ref qname="ZigbexBusAdc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10;</short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.1 $ $Date: 2006/10/10 19:18:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7e34d570" loc="44:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7e34ef08" loc="42:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x7e34b818" loc="49:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e34b6b0" loc="49:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7e34b060" loc="47:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7e34e8c8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7e34ebe8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7e34d250" loc="43:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x7e34d890" loc="45:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="tx" ref="0x7e34dd30" loc="46:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e34dbc8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7e34b378" loc="48:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="SCSuartDBGRecv" loc="29:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGRecv.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGRecv.nc">
        <short>***************************************************************************</short>
      </documentation>
      <function event="" provided="0" name="UARTRecv" ref="0x7e264a60" loc="30:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGRecv.nc">
        <interfacedef-ref qname="SCSuartDBGRecv"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="recv_Char" ref="0x7e2648f8" loc="30:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGRecv.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.1.2.13 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="payloadLength" ref="0x7e19b3a0" loc="89:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This call is identical&#10; to &#60;TT>Packet.payloadLength&#60;/TT>, and is included in Receive as a&#10; convenience.&#10;&#10; @param  msg      the packet&#10; @return          the length of the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e19b120" loc="89:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x7e19d578" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  msg      the receied packet&#10; @param  payload  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return          a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
              <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e19eca0" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7e19ee40" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e19d010" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7e19ddc0" loc="79:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Return point to a protocol's payload region in a packet. </short>
          <long>&#10; Return point to a protocol's payload region in a packet.  If len&#10; is not NULL, getPayload will return the length of the payload in&#10; it. This call is identical to &#60;TT>Packet.getPayload&#60;/TT>, and is&#10; included in Receive as a convenience.&#10;&#10; @param  msg      the packet&#10; @param  len      a pointer to where to store the payload length&#10; @return          a pointer to the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e19d8c0" loc="79:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e19da68" loc="79:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x7e1c0440" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7e207288"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7e1c19a0" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7e207288"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7e1c1b50" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e1c1cd8" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7e1a1e30" loc="125:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.&#10;</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; The length of this region is maxPayloadLength(). This command&#10; behaves similarly to &#60;tt>Packet.getPayload&#60;/tt> (minus the&#10; length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e1a1b18" loc="125:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7e1a17d0" loc="112:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7e1c0b70" loc="85:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e1c0788" loc="85:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7e1a1380" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e1c0eb8" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7e1a1068" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7e1715b0" loc="54:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet. </short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  msg    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e171360" loc="54:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7e171c20" loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  msg    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e171900" loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7e1602e0" loc="108:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet. </short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.  If&#10; len is not NULL, getPayload will return the length of the payload&#10; in it, which is the same as the return value from&#10; payloadLength(). If a protocol does not support variable length&#10; packets, then *len is equal to maxPayloadLength().&#10;&#10; @param msg   the packet&#10; @param len   pointer to where the current payload length should be stored.&#10; @return      a pointer to the packet's data payload for this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e170d60" loc="108:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e170f08" loc="108:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7e170a18" loc="95:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7e170540" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param msg   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e170010" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e170198" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10;</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7e1565d8" loc="48:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10;</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param msg - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e156230" loc="48:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7e156c70" loc="60:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10;</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param msg - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e156940" loc="60:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7e155330" loc="74:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10;</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param msg - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e155010" loc="74:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
      <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="source" ref="0x7e15dee8" loc="77:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.&#10;</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param amsg  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7e207288"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7e15dc68" loc="77:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7e15d330" loc="57:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.&#10;</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7e207288"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="destination" ref="0x7e15d918" loc="67:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.&#10;</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param amsg    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7e207288"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7e15d688" loc="67:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7e15b328" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet. </short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7e207288"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7e15cad8" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7e15cc68" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7e207288"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7e15c790" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet. </short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7e207288"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7e15c248" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7e15c3d8" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7e207288"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7e159010" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.&#10;</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  amsg   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7e208ed0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7e15bda0" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7e159850" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet. </short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  amsg    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7e208ed0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7e159350" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7e1594d8" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7e208ed0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7e15ba58" loc="125:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7e15b670" loc="125:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7e13d468" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e13d0b0" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7e13d238" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7e13da38" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7fdb09c0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e13d7d0" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7e140d38" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.&#10;&#10;</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e140b48" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7e13c030" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e13dda0" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/tinyos-2.x/tos/interfaces/Send.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.1.2.13 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7e1313d8" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   msg     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e132b28" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e132cb0" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7e122df0" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.&#10;</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; The length of this region is maxPayloadLength(). This command&#10; behaves similarly to &#60;tt>Packet.getPayload&#60;/tt> (minus the&#10; length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param   msg    the packet&#10; @return         a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e122ad0" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7e122788" loc="101:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7e131aa8" loc="78:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   msg    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e131720" loc="78:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7e122338" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param msg   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e131df0" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7e122010" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.6 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7e0be4b8" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Send a message with CCA disabled.&#10;&#10;</short>
          <long>&#10; Send a message with CCA disabled.&#10;&#10; @param p_msg message to send.&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e0be2a0" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7e0bd010" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="72:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.&#10;&#10;</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="modify" ref="0x7e0bc068" loc="96:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="87:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7e0bda58" loc="96:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7e0bdc00" loc="96:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e0bdd88" loc="96:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7e0bd718" loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10;</short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e0bd378" loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7e0bd500" loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resendCCA" ref="0x7e0be888" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Send the previous message again with CCA enabled.&#10;&#10;</short>
          <long>&#10; Send the previous message again with CCA enabled.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="resend" ref="0x7e0bec50" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Send the previous message again with CCA disabled.&#10;&#10;</short>
          <long>&#10; Send the previous message again with CCA disabled.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sendCCA" ref="0x7e0d2f28" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Send a message with CCA enabled.&#10;&#10;</short>
          <long>&#10; Send a message with CCA enabled.&#10;&#10; @param p_msg message to send.&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e0d2d10" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/opt/tinyos-2.x/tos/interfaces/Random.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10;</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7e0b68a8" loc="41:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number. &#10;</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7e0b64f0" loc="35:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number. &#10;</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7e0d0100" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7e0d0ef8" loc="97:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Disable RX.&#10;&#10;</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7e0d0b78" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Enable RX.&#10;&#10;</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7e0d1590" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7e0d1c78" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.&#10;&#10;</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7e0d0458" loc="76:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7e0d07f8" loc="83:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Stop the oscillator.&#10;&#10;</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7e0d18e0" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaBackoff" loc="29:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
        <short>&#10; Interface for MAC Backoff values from the radio stack.&#10;</short>
        <long>&#10; Interface for MAC Backoff values from the radio stack.&#10; Allows application to change the backoff on a per packet basis.&#10; Only used if congestion control is enabled.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function event="" provided="0" name="congestion" ref="0x7e0b8118" loc="43:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
          <short>&#10; Return backoff time after message m could not be send due to congestion.&#10;</short>
          <long>&#10; Return backoff time after message m could not be send due to congestion.&#10; The units are raio dependent.&#10; @return Backoff time after congestion&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e0b9e88" loc="43:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initial" ref="0x7e0b9b10" loc="36:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
          <short>&#10; Return initial backoff time before attempting to send message m.</short>
          <long>&#10; Return initial backoff time before attempting to send message m. The&#10; units are radio dependent.&#10; @return Initial backoff time&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e0b98d8" loc="36:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.6 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="syncDone" ref="0x7e0786d0" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7e078568" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7e078e80" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7e078d18" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7e076668" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7e076500" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7e076e28" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7e076cc0" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7e0761d8" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sync" ref="0x7e078248" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7e0789f8" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
          <short>&#10; Change the channel of the radio.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7e076998" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.4 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7e056d98" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.&#10;&#10;</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7e1ef620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e056b78" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7e055318" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.&#10; &#10;</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7e1ef620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e055100" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="36:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Strobe.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.&#10;</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7e052f10" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Strobe.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7e1ef620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.8 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7e05a7d0" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7e1ef620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7e05a208" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7e05a3b0" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7e05a538" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7e058160" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7e1ef620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7e05ab18" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7e05acc0" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7e05ae48" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10;</short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7dfd5820" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short> Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f082700"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f082950"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x7dfd67c8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b19f8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f0b1c48"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7dfd6660" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b19f8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f0b1c48"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7dfd5010" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short> Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f090558"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f0907a8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x7dfd87c0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short> Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c2b78"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f0c2dc8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7dfd54c8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f090558"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f0907a8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7dfd5360" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f090558"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f0907a8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7dfd5cd8" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f082700"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f082950"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7dfd5b70" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f082700"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f082950"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x7dfd8e28" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b0ae0"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f0b0d30"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x7dfd8af8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b19f8"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f0b1c48"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x7dfd6308" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c2b78"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f0c2dc8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7dfd61a0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c2b78"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f0c2dc8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x7dfd6c80" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b0ae0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f0b0d30"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7dfd6b18" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b0ae0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f0b0d30"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.&#10;</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7dfd2620" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dfd2620"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7dfc3b20" loc="79:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.&#10;</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7dfc3938" loc="79:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7dfc3278" loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10;</short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7dfd2a90" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.&#10;</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dfd2620"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="captured" ref="0x7dfd0538" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.&#10;</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dfd2620"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7dfd0358" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dfd2620"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7dfd0870" loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7dfc3600" loc="73:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10;</short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7dfd0010" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.&#10;</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dfd2620"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7dfd2dd0" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dfd2620"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7dfd0ba0" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7dfd0ed0" loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="35:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.1.2.13 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7de9e4b0" loc="43:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0x7de9ed18" loc="55:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.&#10;</short>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="captured" ref="0x7de9e9e8" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.&#10;&#10;</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7de9e7f8" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7de9e188" loc="42:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.&#10;&#10;</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10;</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7de56198" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7de57d00" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7de57e88" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7de54b90" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
        <documentation loc="84:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.&#10;&#10;</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7de54610" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7de54798" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7de54920" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7de542b0" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7e1ef620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7de56dd0" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7de54010" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7de57998" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7e1ef620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7de57568" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7de576f0" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7de56a68" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.&#10;&#10;</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7de564f8" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7de56680" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7de56808" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="43:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus. </short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.1.2.1 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7de35f18" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.&#10;&#10;</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param txBuf A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param rxBuf A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7de357f8" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7de359a0" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7de35b30" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7de34a90" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.&#10;&#10;</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param txBuf The buffer used for transmission&#10; @param rxBuf The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7de34290" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7de34438" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7de345c8" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7de34760" loc="72:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7de372c0" loc="34:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10;</short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7de37088" loc="34:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7dddf010" loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7dddb920" loc="109:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7dddd0f0" loc="100:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7dddbdd8" loc="111:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7dddbc70" loc="111:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7dde1be0" loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7ddddd70" loc="105:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7ddddc08" loc="105:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7ddde5e0" loc="96:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7ddde478" loc="96:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7dddf6c0" loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10;</short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7ddd87e8" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7ddd8680" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7ddde908" loc="97:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7ddda5e8" loc="114:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7ddda480" loc="114:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7dddac30" loc="120:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7dddb5f8" loc="108:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7dddb490" loc="108:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7ddd8338" loc="124:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7dddd5a0" loc="102:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7dddd438" loc="102:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7dddfbc8" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10;</short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7dddf9f8" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7dddedb0" loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7dddec48" loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7dddb140" loc="106:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7ddda140" loc="112:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7ddda908" loc="115:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7ddd8010" loc="122:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7dddd8c0" loc="103:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7dddf350" loc="72:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7ddde138" loc="92:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete. &#10;</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7dddff08" loc="92:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioTimeStamping" loc="33:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
        <short>&#10; Interface for receiving time stamp information from the radio.&#10;</short>
        <long>&#10; Interface for receiving time stamp information from the radio.&#10; This information is also embedded in packet metadata.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   October 10 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="transmittedSFD" ref="0x7dd019a0" loc="39:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
          <short> &#10; Provides the time at which start of frame delimiter has been&#10; transmitted: units are in terms of a 32kHz clock.&#10;</short>
        </documentation>
        <interfacedef-ref qname="RadioTimeStamping"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7dd01608" loc="39:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
          <variable name="p_msg" ref="0x7dd017b8" loc="39:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedSFD" ref="0x7dd000a0" loc="50:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
          <short> &#10; Provides the time at which start of frame delimiter was received:&#10; units are in terms of a 32kHz clock. </short>
          <long> &#10; Provides the time at which start of frame delimiter was received:&#10; units are in terms of a 32kHz clock.  &#60;b>NOTE&#60;/b> that receiving&#10; a receivedSFD() event does NOT mean that a packet will be&#10; received; the transmission may stop, become corrupted, or be&#10; filtered by the physical or link layers.  The number of rxSFD&#10; events will always be great than or equal to the number of&#10; Receive message events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioTimeStamping"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7dd01ce8" loc="50:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.5 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7dcf0848" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.&#10;&#10;</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7dcf0470" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7dcf0620" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1c35a0"/>
                <typename><typedef-ref name="message_t" ref="0x7e1c1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7dcf0138" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7dcf1d40" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.&#10;&#10;</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7dcf1b40" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.1.2.13 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7dc3f920" loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7dc3f920"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7dc3e030" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7dc3f920"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7dc3fd20" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7dc3f920"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
