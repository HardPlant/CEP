<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="6:SerialApp.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7e083190"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7dff38c8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7dff38c8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7dca2300"/></to>
    </wire>
    <wire loc="9:SerialApp.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7e090010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7dca30c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7dca30c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7dc81e58"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="13:SerialApp.nc">
      <from><interface-ref name="LedController" scoped="" ref="0x7e053a70"/></from>
      <to><interface-ref name="LedController" scoped="" ref="0x7da04398"/></to>
    </wire>
    <wire loc="7:LedControllerC.nc">
      <from><interface-ref name="LedController" scoped="" ref="0x7da04398"/></from>
      <to><interface-ref name="LedController" scoped="" ref="0x7da00640"/></to>
    </wire>
    <wire loc="17:SerialApp.nc">
      <from><interface-ref name="LCDSetter" scoped="" ref="0x7e0437d8"/></from>
      <to><interface-ref name="LCDSetter" scoped="" ref="0x7d8b6f00"/></to>
    </wire>
    <wire loc="30:LCDSetterC.nc">
      <from><interface-ref name="LCDSetter" scoped="" ref="0x7d8b6f00"/></from>
      <to><interface-ref name="LCDSetter" scoped="" ref="0x7d8b2010"/></to>
    </wire>
    <wire loc="21:SerialApp.nc">
      <from><interface-ref name="TempSensor" scoped="" ref="0x7e040188"/></from>
      <to><interface-ref name="TempSensor" scoped="" ref="0x7d3ad010"/></to>
    </wire>
    <wire loc="27:TempSensorC.nc">
      <from><interface-ref name="TempSensor" scoped="" ref="0x7d3ad010"/></from>
      <to><interface-ref name="TempSensor" scoped="" ref="0x7d3a9430"/></to>
    </wire>
    <wire loc="25:SerialApp.nc">
      <from><interface-ref name="BaseStation" scoped="" ref="0x7e0322d8"/></from>
      <to><interface-ref name="BaseStation" scoped="" ref="0x7d382c30"/></to>
    </wire>
    <wire loc="74:BaseStationC.nc">
      <from><interface-ref name="BaseStation" scoped="" ref="0x7d382c30"/></from>
      <to><interface-ref name="BaseStation" scoped="" ref="0x7d3686e0"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7dff1080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7cd92040"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7dff1080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7c981548"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7dff1080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d241990"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7dff1080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d1f1578"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7dff1080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ce64cf0"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7dff1080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7cdf0750"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7dff1080"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x7d44edc8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7dff1080"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x7d44a608"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7dff1080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ca51758"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7dff1080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ca90358"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7dff1080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dc65060"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7dca2648"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7e330970"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7e330970"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7e170960"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7dca2b78"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dfe0d60"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7dfe0d60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dfb3d10"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7dca2ee8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7dff1080"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7dfd1010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d09af28"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7dfd1010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d596d30"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7dfd1010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dc21d00"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7dfc28f0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7dcd1160"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7dfb2400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dcd2d58"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7dfb2090"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d9716b8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7dfb2090"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7dfc0a38"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7dfc0a38"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7df90010"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7dfc0da0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7dfd1010"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7df72800"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7df53188"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7df53188"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7de54ac8"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7df821a0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7dfc0da0"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7def0e78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dd532d8"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7df23e98"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7de11330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7de11330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cc64718"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7df03068"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7ddf2d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7ddf2d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cc220f8"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7def3e78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7ddd3410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7ddd3410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cbe66c0"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7df52508"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7de53e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7de53e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cd1ba88"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7df00af8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7ddd4090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7ddd4090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cbe9228"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7df51808"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7de43bc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7de43bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cce52b0"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7df33980"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7de235d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7de235d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cca2c08"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7df21bd8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7de03030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7de03030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cc5f570"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7df02d98"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7ddf0ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7ddf0ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cc1d010"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7df61428"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7de61e70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7de61e70"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cd237f8"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7df43508"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7de41890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7de41890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ccdf0f8"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7df316c8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7de21250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7de21250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cc9da88"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7df12980"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7de02c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7de02c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cc5a538"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7def1b00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7ddd1170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7ddd1170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cbe1538"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7dee2d98"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dd41bc0"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7df11cb8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7ddf3a18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7ddf3a18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cc26c78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7de54ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cd1e6c0"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7df41268"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7de345d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7de345d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ccda010"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7dee3aa0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dd51590"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7df405e8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7de242a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7de242a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cca57f8"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7df22858"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7de11c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7de11c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cc620f8"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7df039d8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7ddf1790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7ddf1790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cc21ac8"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7def2808"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7ddd3d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7ddd3d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cbe40b0"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7df52e78"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7de527d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7de527d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cd19538"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7df50190"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7de425d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7de425d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cce3c78"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7df32348"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7de23f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7de23f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cca06c0"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7df205e8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7de03988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7de03988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cc5d010"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7df017a8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7dde34f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7dde34f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cc1c9e8"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7df61d98"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7de607f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7de607f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cd21228"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7df43e78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7de40250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7de40250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ccdeac8"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7df30068"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7de21ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7de21ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cc9b538"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7def0508"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7ddd1ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7ddd1ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cbde010"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7df23428"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7de129c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7de129c0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cc68d08"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7df106c8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7ddf2410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7ddf2410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cc24718"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7def3508"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7ddd49e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7ddd49e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cbe8c08"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7dee17a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dd35f20"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7df53af8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7de534f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7de534f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cd1c0b0"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7df41bd8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7de34f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7de34f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ccd99e8"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7df00188"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7dde06f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7dde06f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cbeb7f8"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7df33010"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7de24bf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7de24bf8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cca3228"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7df21268"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7de046b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7de046b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cc61ac8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7df02428"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7ddf0170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7ddf0170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cc1f570"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7def1190"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7ddd2790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7ddd2790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cbe3a88"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7df62a80"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7de61518"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7de61518"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cd28da8"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7df50b00"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7de42f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7de42f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cce1718"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7df32cb8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7de22890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7de22890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cc9e0b0"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7df12010"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7de02330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7de02330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cc5c9e8"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7dee2428"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dd44880"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7df11348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7ddf30c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7ddf30c0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cc282b0"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7df309d8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7de205d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7de205d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cc98010"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7df607a8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7de54170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7de54170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cd20c08"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7df42878"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7de40ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7de40ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ccdc570"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7e3109b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7e162120"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7e151540"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7e302c20"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7dc81e58"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7dc656f8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7dc656f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7da73370"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7dc65060"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dc53c20"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7dc54ea0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7da21a88"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7dc53c20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7db91c78"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7da27380"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7da83440"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7da814c8"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7dc359d0"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7dc359d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7db13608"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7da203d0"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7dc25870"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7dc25870"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7db12e48"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7db90078"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7dc10be0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7db73e10"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7dc10be0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7db43c10"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7dbf0848"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7db212f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7dc10be0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7dab6010"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7db74680"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7dac1ed8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7db34320"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x7da77bf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7e3109b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7da24240"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7e3109b8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="10:LedControllerC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7d9f5010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7da01bb8"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7da01bb8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7d9948f8"/></to>
    </wire>
    <wire loc="13:LedControllerC.nc">
      <from><interface-ref name="LedTimer0" scoped="" ref="0x7d9f5cb8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7d9626d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7d9626d8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7dc81e58"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:LedControllerC.nc">
      <from><interface-ref name="LedTimer1" scoped="" ref="0x7d9e6c78"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7d975330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7d975330"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7dc81e58"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:LedControllerC.nc">
      <from><interface-ref name="LedTimer2" scoped="" ref="0x7d9e3c78"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7d966cb0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7d966cb0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7dc81e58"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:LedControllerC.nc">
      <from><interface-ref name="CompleteTimer" scoped="" ref="0x7d9d6c78"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7d9575a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7d9575a8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7dc81e58"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:LedControllerC.nc">
      <from><interface-ref name="MorseTimer" scoped="" ref="0x7d9e0c78"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7d9540f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7d9540f0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7dc81e58"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7d9716b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d9945d8"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7d993628"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7d973908"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7d973908"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7df61d98"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7d992010"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7d972368"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7d972368"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7df61428"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7d992980"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7d972cf8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7d972cf8"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7df62a80"/></to>
    </wire>
    <wire loc="28:LCDSetterC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7d8b24e8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7d8b3e10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7d8b3e10"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7dc81e58"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:LCDSetterC.nc">
      <from><interface-ref name="Interaction" scoped="" ref="0x7d8a3ea8"/></from>
      <to><interface-ref name="Interaction" scoped="" ref="0x7d865ba8"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
      <from><interface-ref name="Interaction" scoped="" ref="0x7d865ba8"/></from>
      <to><interface-ref name="Interaction" scoped="" ref="0x7d862408"/></to>
    </wire>
    <wire loc="37:LCDSetterC.nc">
      <from><interface-ref name="SCSuartDBGstd" scoped="" ref="0x7d899e90"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7d3cef20"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7d3cef20"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7d3cb730"/></to>
    </wire>
    <wire loc="38:LCDSetterC.nc">
      <from><interface-ref name="SCSuartDBG" scoped="" ref="0x7d8964f8"/></from>
      <to><interface-ref name="SCSuartDBG" scoped="" ref="0x7d3e17e0"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGC.nc">
      <from><interface-ref name="SCSuartDBG" scoped="" ref="0x7d3e17e0"/></from>
      <to><interface-ref name="SCSuartDBG" scoped="" ref="0x7d3cb0e0"/></to>
    </wire>
    <wire loc="45:LCDSetterM.nc">
      <from><interface-ref name="TryToSetTimer" scoped="" ref="0x7d897d40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7e3109b8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:LCDSetterM.nc">
      <from><interface-ref name="TryToConfigure" scoped="" ref="0x7d898ed0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7e3109b8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7d862d88"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7da01bb8"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
      <from><interface-ref name="ConfigTimeout" scoped="" ref="0x7d861ae0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7d7b3268"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7d7b3268"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7dc81e58"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
      <from><interface-ref name="SensorCheckTimer" scoped="" ref="0x7d859af8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7d7b0cb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7d7b0cb8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7dc81e58"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
      <from><interface-ref name="C328_Reset_Timer" scoped="" ref="0x7d856af8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7d7a76e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7d7a76e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7dc81e58"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
      <from><interface-ref name="Read_Humi" scoped="" ref="0x7d848530"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7d5e10c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Humidity" scoped="" ref="0x7d5e10c0"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7cb094b0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
      <from><interface-ref name="Read_Temp" scoped="" ref="0x7d851100"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7d5e24f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Temperature" scoped="" ref="0x7d5e24f0"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7cb0a8d8"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
      <from><interface-ref name="Read_Photo" scoped="" ref="0x7d851cb8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d4deac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7d4deac8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7ca63aa0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
      <from><interface-ref name="Read_Ultrared" scoped="" ref="0x7d847888"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d4b6990"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7d4b6990"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7ca241c8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
      <from><interface-ref name="CommunicationWithOPT" scoped="" ref="0x7d8364d0"/></from>
      <to><interface-ref name="CommunicationWithOPT" scoped="" ref="0x7d49db58"/></to>
    </wire>
    <wire loc="29:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTC.nc">
      <from><interface-ref name="CommunicationWithOPT" scoped="" ref="0x7d49db58"/></from>
      <to><interface-ref name="CommunicationWithOPT" scoped="" ref="0x7d4905e8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
      <from><interface-ref name="SCSuartDBG" scoped="" ref="0x7d844160"/></from>
      <to><interface-ref name="SCSuartDBG" scoped="" ref="0x7d3e7438"/></to>
    </wire>
    <wire loc="339:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <from><interface-ref name="SendBasicSensor" scoped="" ref="0x7d7c9a10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7e3109b8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <from><interface-ref name="Event_Urgency_Data" scoped="" ref="0x7d815b98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7e3109b8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="293:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <from><interface-ref name="ProcessCMD" scoped="" ref="0x7d7da290"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7e3109b8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <from><interface-ref name="Set_C328_Restart_Timer_START" scoped="" ref="0x7d8300e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7e3109b8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <from><interface-ref name="TaskStartDoneConfiguration" scoped="" ref="0x7d833240"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7e3109b8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="211:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <from><interface-ref name="TryToGetSensorData" scoped="" ref="0x7d7f56e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7e3109b8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <from><interface-ref name="TaskGetSensorDataDone" scoped="" ref="0x7d832238"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7e3109b8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TempResource" scoped="" ref="0x7cb07010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7d75ab88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Sht11Temp" scoped="" ref="0x7cb07dc0"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7d7594f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="HumResource" scoped="" ref="0x7cb076e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7d75ab88"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Sht11Hum" scoped="" ref="0x7cb06970"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7d7594f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="SensirionSht11" scoped="" ref="0x7d7594f8"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7d6fa068"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7d75ab88"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7d6ea100"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7d6ea100"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7d6144e0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7d6fabb0"/></from>
      <to><interface-ref name="DATA" scoped="" ref="0x7d6ea7f0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7d6ea7f0"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7df23e98"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="CLOCK" scoped="" ref="0x7d6f95f0"/></from>
      <to><interface-ref name="SCK" scoped="" ref="0x7d6e91a8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7d6e91a8"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x7df23428"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x7d6f8010"/></from>
      <to><interface-ref name="InterruptDATA" scoped="" ref="0x7d6e9b40"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x7d6e9b40"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7d677a28"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7d6f8678"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7d5e85d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7d5e85d8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7dc81e58"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7d6f6588"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7da01bb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="readSensor" scoped="" ref="0x7d6f46a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7e3109b8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="signalStatusDone" scoped="" ref="0x7d6f4270"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7e3109b8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7d6144e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ca8d7f0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7d6e1618"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7df23e98"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7d6d8010"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x7df23428"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7d6d9700"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7d6d3bc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7d6d3bc8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7dc81e58"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7d676050"/></from>
      <to><interface-ref name="Int1" scoped="" ref="0x7d6c6010"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7d6c6010"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7d692228"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7d610980"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7d6d9088"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7d60c9c0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7d6136d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7d6136d8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7ca8cab0"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ResourceController" scoped="" ref="0x7d60c328"/></from>
      <to><interface-ref name="ResourceController" scoped="" ref="0x7d613040"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceController" scoped="" ref="0x7d613040"/></from>
      <to><interface-ref name="ResourceController" scoped="" ref="0x7ca8c418"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11P.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7d6d8d78"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7e3109b8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x7d6c17c8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7d682538"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x7d6c57c8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7d6872d0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x7d6c0010"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7d6805e0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7d6c67c8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7d68b228"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x7d6c1010"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7d6853b0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7d6c2778"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7d6a2228"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7d6c5010"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7d689228"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7d6a29e0"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x7d6b4808"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7d6929e0"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x7d6b4b80"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7d68b9e0"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x7d6b4ef8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7d6899e0"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x7d6b6280"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7d687a88"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x7d6b65f8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7d685b68"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x7d6b6970"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7d682cf0"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x7d6b6ce8"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7d680d98"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x7d6b5088"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7d614c20"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7ca8c010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7ca8b010"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7d613b88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x7ca8b438"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7ca90690"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x7ca8a6d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7e3109b8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x7ca72898"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7d610980"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7ca72e50"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7d60c010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceController" scoped="" ref="0x7ca71190"/></from>
      <to><interface-ref name="ResourceController" scoped="" ref="0x7d60c328"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7ca71828"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7d60c9c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="stopTask" scoped="" ref="0x7ca71c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7e3109b8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="startTask" scoped="" ref="0x7ca700b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7e3109b8"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7ca63aa0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7ca61258"/></to>
    </wire>
    <wire>
      <from><interface-ref name="subRead" scoped="" ref="0x7ca61e08"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7ca5e1c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7ca5e1c8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7ca5c750"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7ca5c750"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d5b5800"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7ca5b318"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d4dda98"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoDeviceP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d4dda98"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d4d8240"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7ca5b7f0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7d4dd690"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoDeviceP.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7d4dd690"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7d4dcd80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d5b11a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7ca5b318"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7d5b1920"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7d5a86e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7d5a4100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7ca5b7f0"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7d5b5800"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d4f4670"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x7d5ad390"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x7d50a530"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7d4e6ec0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7d5b1920"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d509838"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d5b11a8"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7d4e6318"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d50c700"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7d5090c0"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7d5a0568"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7d5a0568"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7d591b18"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7d5999c0"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7d592040"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7d5a86e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7d5400c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7d5400c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ca50bf0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7d5247c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7d5a4100"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x7d585468"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x7d566468"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x7d566468"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x7d561c70"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7d58d800"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7dfc28f0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7d520da8"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7d591710"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceController" scoped="" ref="0x7d51e548"/></from>
      <to><interface-ref name="ResourceController" scoped="" ref="0x7d540c10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceController" scoped="" ref="0x7d540c10"/></from>
      <to><interface-ref name="ResourceController" scoped="" ref="0x7ca4d7b0"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7d55d040"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7e0f0078"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7d540808"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7ca4d3a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7d524310"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7ca4de48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7ca4c338"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7d5247c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x7ca4c760"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7ca51a90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x7ca4a970"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7e3109b8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7ca32968"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7d520da8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7ca32d60"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7d51e230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceController" scoped="" ref="0x7ca31150"/></from>
      <to><interface-ref name="ResourceController" scoped="" ref="0x7d51e548"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7ca317e8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7d51ebe0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x7d501d10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7e3109b8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoDeviceP.nc">
      <from><interface-ref name="PhotoPin" scoped="" ref="0x7d4d8798"/></from>
      <to><interface-ref name="PortB6" scoped="" ref="0x7df41268"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoDeviceP.nc">
      <from><interface-ref name="PhotoAdc" scoped="" ref="0x7d4d30f0"/></from>
      <to><interface-ref name="Adc0" scoped="" ref="0x7d4c7e78"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="Adc0" scoped="" ref="0x7d4c7e78"/></from>
      <to><interface-ref name="Adc0" scoped="" ref="0x7d4c3908"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="PW3" scoped="" ref="0x7d4ca428"/></from>
      <to><interface-ref name="PortC3" scoped="" ref="0x7df32348"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="PW6" scoped="" ref="0x7d4c8188"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0x7df30068"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="Adc3" scoped="" ref="0x7d4c6888"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x7d4c0360"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="Adc5" scoped="" ref="0x7d4c5010"/></from>
      <to><interface-ref name="Adc5" scoped="" ref="0x7d4c0a00"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="PW1" scoped="" ref="0x7d4cb088"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x7df33010"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="PW4" scoped="" ref="0x7d4cad98"/></from>
      <to><interface-ref name="PortC4" scoped="" ref="0x7df32cb8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7d4c7508"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x7df039d8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="Adc1" scoped="" ref="0x7d4c61e8"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x7d4c3c58"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="PW7" scoped="" ref="0x7d4c8af8"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0x7df309d8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="Adc6" scoped="" ref="0x7d4c5360"/></from>
      <to><interface-ref name="Adc6" scoped="" ref="0x7d4c0d50"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="PW2" scoped="" ref="0x7d4cb9f8"/></from>
      <to><interface-ref name="PortC2" scoped="" ref="0x7df33980"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="PW5" scoped="" ref="0x7d4c97a8"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0x7df316c8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="Adc2" scoped="" ref="0x7d4c6538"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x7d4c0010"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="Adc4" scoped="" ref="0x7d4c6c58"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x7d4c06b0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="Adc7" scoped="" ref="0x7d4c56b0"/></from>
      <to><interface-ref name="Adc7" scoped="" ref="0x7d4bf0b0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="PW0" scoped="" ref="0x7d4cc6e8"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x7df405e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7ca241c8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7ca23948"/></to>
    </wire>
    <wire>
      <from><interface-ref name="subRead" scoped="" ref="0x7ca22598"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7ca21928"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7ca21928"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7ca1d010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7ca1d010"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d5b5800"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7ca1db20"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d4a0468"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredDeviceP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d4a0468"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d49cb60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7ca1c010"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7d4a0060"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredDeviceP.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7d4a0060"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7d49c758"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d5b11a8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7ca1db20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7d5b1920"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7d5a86e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7d5a4100"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7ca1c010"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredDeviceP.nc">
      <from><interface-ref name="UltraredPin" scoped="" ref="0x7d49b0e0"/></from>
      <to><interface-ref name="PW1" scoped="" ref="0x7d4cb088"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredDeviceP.nc">
      <from><interface-ref name="UltraredAdc" scoped="" ref="0x7d49ba58"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x7d4c61e8"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTC.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x7d48f2a8"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x7d4526d8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x7d4526d8"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x7d44a980"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTC.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x7d48f6e8"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x7d452b10"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x7d452b10"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x7d44add8"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTC.nc">
      <from><interface-ref name="HPLUART" scoped="" ref="0x7d4889c8"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x7d450010"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x7d450010"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x7d449290"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTC.nc">
      <from><interface-ref name="SCSuartDBG" scoped="" ref="0x7d48d4e8"/></from>
      <to><interface-ref name="SCSuartDBG" scoped="" ref="0x7d3e7438"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x7d453b90"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7d44ba60"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x7d453758"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7d44b608"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x7d453320"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7d44b1b0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7d449db8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7dfc28f0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7d448500"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7e0f0078"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGC.nc">
      <from><interface-ref name="SCSuartDBGRecv" scoped="" ref="0x7d3cebd8"/></from>
      <to><interface-ref name="SCSuartDBGRecv" scoped="" ref="0x7d3cb408"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGC.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x7d3cbba0"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7d453320"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGC.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x7d3ca010"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7d453758"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGC.nc">
      <from><interface-ref name="HPLUART" scoped="" ref="0x7d3ca440"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7d453b90"/></to>
    </wire>
    <wire loc="30:TempSensorC.nc">
      <from><interface-ref name="Read_Humidity" scoped="" ref="0x7d3a9940"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7d388010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Humidity" scoped="" ref="0x7d388010"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7ca115f0"/></to>
    </wire>
    <wire loc="31:TempSensorC.nc">
      <from><interface-ref name="Read_Temp" scoped="" ref="0x7d3a85a0"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7d389400"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Temperature" scoped="" ref="0x7d389400"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7ca12a20"/></to>
    </wire>
    <wire loc="34:TempSensorC.nc">
      <from><interface-ref name="Read_UR" scoped="" ref="0x7d3a7160"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d386838"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7d386838"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7c9efc38"/></to>
    </wire>
    <wire loc="37:TempSensorC.nc">
      <from><interface-ref name="LedController" scoped="" ref="0x7d3a7c50"/></from>
      <to><interface-ref name="LedController" scoped="" ref="0x7da04398"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7d3aba58"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7dc81e58"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TempResource" scoped="" ref="0x7c9fe128"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7d75ab88"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Sht11Temp" scoped="" ref="0x7c9feed8"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7d7594f8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="HumResource" scoped="" ref="0x7c9fe800"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7d75ab88"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Sht11Hum" scoped="" ref="0x7c9fda20"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7d7594f8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7c9efc38"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7c9ed3b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="subRead" scoped="" ref="0x7c9ec010"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7c9eb3b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7c9eb3b8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7c9e8978"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7c9e8978"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d5b5800"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7c9e74f8"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d4a0468"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7c9e79d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7d4a0060"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d5b11a8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7c9e74f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7d5b1920"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7d5a86e8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7d5a4100"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7c9e79d0"/></to>
    </wire>
    <wire loc="76:BaseStationC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7d368a78"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7d36fe38"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7d36fe38"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7d2be970"/></to>
    </wire>
    <wire loc="78:BaseStationC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7d328770"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7d2d76c8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7d2d76c8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7d2bd1e8"/></to>
    </wire>
    <wire loc="79:BaseStationC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7d326010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7d2d6010"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7d2d6010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7d2bdb18"/></to>
    </wire>
    <wire loc="80:BaseStationC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7d2ff7e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7d2d6c88"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7d2d6c88"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7d2ba158"/></to>
    </wire>
    <wire loc="81:BaseStationC.nc">
      <from><interface-ref name="RadioAMPacket" scoped="" ref="0x7d2f8b70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7d2d4400"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d2d4400"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7d2bc7a8"/></to>
    </wire>
    <wire loc="83:BaseStationC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7d2fe4d8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7da01bb8"/></to>
    </wire>
    <wire loc="78:BaseStationM.nc">
      <from><interface-ref name="radioSendTask" scoped="" ref="0x7d2f6308"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7e3109b8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7d2be970"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7d252010"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7d2bd1e8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7d2b28f8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7d2d67a8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7d2bc2c0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7d2bc2c0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7d2b09f0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7d2ba158"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7d2a1828"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7d2bdb18"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7d2b0258"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7d2d1010"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7d2b8248"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7d2b8248"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7cd77450"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d2bc7a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7d2b0ed8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7d252010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7d241cd8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7d2b5c50"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7cd7ed78"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7d29a6c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7d2525f0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7d2525f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7d23e338"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7d29ad98"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7d252cb0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7d252cb0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7cde73e8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><function-ref name="amAddress" scoped="" ref="0x7d29e4b8"/></from>
      <to><function-ref name="amAddress" scoped="" ref="0x7cd7d360"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d251260"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7d2b0ed8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7cde73e8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7cde2338"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d21eab8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7d251260"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d1e0180"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7d251260"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7d23ea00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7d1f18c0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7d1f18c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7d1d8060"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7d238c28"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7d1e17a0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7d1e17a0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7d1d70a8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7d23b610"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7ce60060"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7d23b610"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7cdf0a98"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7cdf0a98"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7cde39b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7ce60060"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7ce57908"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7d232e68"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7ce60488"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7ce60488"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ce57d58"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CsmaBackoff" scoped="" ref="0x7d222ed8"/></from>
      <to><interface-ref name="CsmaBackoff" scoped="" ref="0x7ce60d10"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="CsmaBackoff" scoped="" ref="0x7ce60d10"/></from>
      <to><interface-ref name="CsmaBackoff" scoped="" ref="0x7ce566c0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7d21e690"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7cd96e18"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7cd96e18"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7cd92d08"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7d2204f8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7da01bb8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7cdf0750"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7cde3668"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ce64cf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d176b10"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ce64cf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ce575c0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7d1f1578"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d1d9ce8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7d21c6b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7e3109b8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7d21de60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7e3109b8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7d21d730"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7e3109b8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7d1dddd8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7d1d8728"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d1bac38"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7d1e0180"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7d1d7b70"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7d175010"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7d175010"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7d172358"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7d1d42e8"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7d016818"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7d016818"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7df51808"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7d1d4c78"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7d0145e8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7d0145e8"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x7df52508"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7d1d36e8"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7d013980"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7d013980"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x7df53af8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7d1d2090"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7cfff500"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7cfff500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7cfdf240"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7d1d26a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ce826e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7ce826e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7cfa52d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7d1b8e80"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7ce81840"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7ce81840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7cfa3438"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7d1ba208"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7ce81b98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7ce81b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7cfa3438"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7d1ba8f0"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7ce805b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7ce805b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7cfa3438"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7d1ba580"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7ce80910"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7ce80910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7cfa3438"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7d1bb290"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7ce80c68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7ce80c68"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7cfa4ce0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7d1bb6e0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7ce7f0b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7ce7f0b8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7cfa4ce0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7d1bbbb0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7ce7f4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7ce7f4f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7cfa4ce0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7d1c1030"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7ce7f9a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7ce7f9a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7cfa4ce0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7d1c1488"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7ce7fde0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7ce7fde0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7cfa4ce0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7d1bf0b0"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7ce7dae0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7ce7dae0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7cfa4600"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7d1b9610"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ce79d28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7ce79d28"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7cfa52d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7d1b9cd0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7da01bb8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <from><interface-ref name="syncDone_task" scoped="" ref="0x7d1b5260"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7e3109b8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7d176b10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d171b08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x7d171b08"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d01a280"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x7d172358"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7c9d7d30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x7c9d7d30"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7c9cf0a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7c9cc940"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7c9d3818"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x7c9d3818"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7c9c8d28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x7c9ce8c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7d07ddb0"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7d07ddb0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7d0645c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7c9c54d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7d150368"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7d150368"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7d1215d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7c9c2320"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7d1389b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7d13ab98"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7d11e370"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7d134b48"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7d11d010"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7d1389b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7d11bb30"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7d1389b8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7d119338"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7d1389b8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7d117ac8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x7d114220"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7dbf4388"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7d099320"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7d150368"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7d055620"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7d077150"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7d077150"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7d075e88"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7d074e68"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7d150368"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7d015268"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x7df41bd8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7d015bd8"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7df02d98"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7d178e90"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x7df12010"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7d013010"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x7df21bd8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7cffded0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7cffb690"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7cfffb18"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7cfe56b8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x7cffbd18"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7d134b48"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7cfe5cb0"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x7d6c17c8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CCATimer" scoped="" ref="0x7cfde300"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7cfe0a78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7cfe0a78"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7dc81e58"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x7cfdf870"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7d178e90"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7cfd7d70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7e3109b8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x7cfdbd70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7e3109b8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7ce80260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7cfa3438"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7ce7d270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7cfa4ce0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ce7c368"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7cfa4600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7ce81190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7cfa3438"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7ce7df18"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7cfa4600"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7ce814e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7cfa3438"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7ce7c7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7cfa5c50"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7ce7d6a8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7cfa4600"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7ce82dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7cfa3438"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7ce81ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7cfa3438"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7ce7ce78"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7cfa5c50"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7cfa5c50"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7cf9d158"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7cfa4600"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7cf9dae0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7cfa4ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7cf9c1e8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7cfa52d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7cf9e7b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7cfa3438"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7cf9c8c8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7cf9cc40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7cf5b090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7cf5b090"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7cf55b78"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7cf97438"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7cf5b748"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiByte" scoped="" ref="0x7cf5b748"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7cf55178"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7cf93c08"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7cf5ba80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7cf5ba80"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7cf554c0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7cf98040"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7da01bb8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7cf554c0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7cf509d8"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7cf55178"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7cf506b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x7cf5cd28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7cf59dd0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7cf59dd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7cf50390"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7cf55b78"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7cf45100"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x7cf42500"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7cec0010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7cec0010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7c980908"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7cf42ba8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7cec0b58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7cec0b58"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7c96e470"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7cf35998"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7cf030f0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7cf030f0"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7cefedb8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7cf33010"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7e0f0078"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7cef8190"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7e0f0078"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7cefcb20"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7df51808"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7cefa508"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7df50190"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7cefae78"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7df50b00"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7cef9808"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7df43508"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7cec0750"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7c96e068"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7c96e930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7ce93030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x7c96ed58"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7c981880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x7c96d430"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7e3109b8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7ce740b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7cfa4ce0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7ce77880"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7cfa3438"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7ce74920"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7cfa4ce0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ce73ae0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7cfa4600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7ce767a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7cfa4ce0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7ce78788"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7cfa3438"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7ce76010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7cfa3438"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7ce744e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7cfa4ce0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7ce77bd8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7cfa3438"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7ce736a8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7cfa4600"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7ce78ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7cfa3438"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7ce73f18"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7cfa5c50"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7ce76bd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7cfa4ce0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7ce76368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7cfa4ce0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7ce78e38"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7cfa3438"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7ce73270"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7cfa4600"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7ce74d58"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7cfa4600"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7ce78430"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7cfa3438"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7ce77528"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7cfa3438"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7ce771d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7cfa3438"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7ce72608"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7cfa5c50"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="RadioTimeStamping" scoped="" ref="0x7ce5bbf8"/></from>
      <to><interface-ref name="TimeStamp" scoped="" ref="0x7ce56b20"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7ce550b8"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7d175010"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7ce54e20"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7d178e90"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7ce537c8"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7d016818"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7ce511a8"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7d013010"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7ce54810"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7cffded0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7ce51b40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7cdfdcd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7cdfdcd8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7cfa52d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7ce472c8"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7cdfcae0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7cdfcae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7cfa3438"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7ce47638"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7cdfb528"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7cdfb528"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7cfa3438"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7ce479b0"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7cdfb880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7cdfb880"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7cfa3438"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7ce47d28"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7cdfc788"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7cdfc788"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7cfa3438"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7ce50e50"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7cdf9920"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7cdf9920"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7cfa4ce0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7ce50288"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7cdf6608"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7cdf6608"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7cfa5c50"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ce50980"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7cdf7ae0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7cdf7ae0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7cfa4600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7ce42d78"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7cdf0ec0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7cdf0ec0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7cde3dd8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ce44338"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7da01bb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7cdf90b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7cfa4ce0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7cdfa7a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7cfa4ce0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7cdfa010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7cfa3438"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7cdf94e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7cfa4ce0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7cdfbbd8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7cfa3438"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7cdf76a8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7cfa4600"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7cdf7f18"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7cfa5c50"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7cdfabd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7cfa4ce0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7cdfa368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7cfa4ce0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7cdfce38"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7cfa3438"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7cdf7270"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7cfa4600"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7cdf9d58"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7cfa4600"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7cdfc430"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7cfa3438"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7cdfb1d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7cfa3438"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7cdde178"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7da01bb8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7cde2868"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7d016818"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7cde1288"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7d015268"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7cde1c18"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7d015bd8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7cde0610"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7cfffb18"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7cde0c28"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7cde49f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7cde49f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7cfa52d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7cddf368"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7cda6b20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7cda6b20"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7cfa5c50"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7cddfdd0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7cdb2190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7cdb2190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7cfa3438"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7cdda680"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7e3109b8"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7cdb0d38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7cfa4ce0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7cdb15b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7cfa3438"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7cda75c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7cfa4ce0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7cda66e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7cfa4600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7cdb0448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7cfa4ce0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7cdb24e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7cfa3438"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7cdb1c68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7cfa3438"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7cda7190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7cfa4ce0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7cdb1910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7cfa3438"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7cda62b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7cfa4600"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7cdb2840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7cfa3438"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7cdb0880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7cfa4ce0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7cdb0010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7cfa4ce0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7cdb2b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7cfa3438"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7cda7e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7cfa4600"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7cda7a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7cfa4600"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7cdb1260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7cfa3438"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7cdb2ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7cfa3438"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7cda5270"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7cfa5c50"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7cd92d08"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7cd86cd8"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7cd96568"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7cd92458"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7cd92458"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7cd86428"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7cd9b808"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7cd92040"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7cd92040"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7cd86010"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="SerialAppM" loc="2:SerialAppM.nc">
      <module/>
    </component>
    <component qname="MainC" loc="45:/opt/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/system/MainC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.1.2.11 2006/09/22 19:23:59 idgay Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.1.2.11 2006/09/22 19:23:59 idgay Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.1.2.11 2006/09/22 19:23:59 idgay Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformC.nc">
      <documentation loc="15:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10;</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformP.nc">
      <documentation loc="18:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10;</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10;</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10;</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.1.2.6 2006/09/22 19:12:14 idgay Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialApp.TimerMilliC" loc="36(SerialApp.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(SerialApp.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="22:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer. </short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmCounterMilliP.MilliInit" loc="35(AlarmCounterMilliP.MilliInit):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="35(AlarmCounterMilliP.MilliInit):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmCounterMilliP.MilliAlarm" loc="42(AlarmCounterMilliP.MilliAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="42(AlarmCounterMilliP.MilliAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10;</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmCounterMilliP.MilliCounter" loc="33(AlarmCounterMilliP.MilliCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="33(AlarmCounterMilliP.MilliCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmCounterMilliP.Transform32" loc="53(AlarmCounterMilliP.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
      <documentation loc="53(AlarmCounterMilliP.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
        <short>&#10; TransformAlarmCounterC decreases precision and/or widens an Alarm/Counter&#10; pair.</short>
        <long>&#10; TransformAlarmCounterC decreases precision and/or widens an Alarm/Counter&#10; pair. This component has a reduced interrupt overhead compared to using&#10; TransformAlarmC and TransformCounterC separately. However, it is not as &#10; useful for hardware timers with multiple compare registers.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   interfaces.&#10; @param to_size_type The type for the width of the transformed interfaces.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   interfaces.&#10; @param from_size_type The type for the width of the original interfaces.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmCounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10;</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10;</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
          <value cst="I:14">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LedControllerC" loc="1:LedControllerC.nc">
      <configuration/>
    </component>
    <component qname="LedControllerM" loc="1:LedControllerM.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10;</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10;</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.1.2.11 2006/09/22 19:23:59 idgay Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedControllerC.LedTimer1" loc="36(LedControllerC.LedTimer1):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(LedControllerC.LedTimer1):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LedControllerC.LedTimer2" loc="36(LedControllerC.LedTimer2):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(LedControllerC.LedTimer2):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LedControllerC.LedTimer0" loc="36(LedControllerC.LedTimer0):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(LedControllerC.LedTimer0):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LedControllerC.CompleteTimer" loc="36(LedControllerC.CompleteTimer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(LedControllerC.CompleteTimer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LedControllerC.MorseTimer" loc="36(LedControllerC.MorseTimer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(LedControllerC.MorseTimer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LCDSetterC" loc="22:LCDSetterC.nc">
      <documentation loc="22:LCDSetterC.nc">
        <short>//////////////////////////////////////</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="LCDSetterM" loc="20:LCDSetterM.nc">
      <documentation loc="20:LCDSetterM.nc">
        <short>***************************************************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="LCDSetterC.TimerMilliC" loc="36(LCDSetterC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(LCDSetterC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InteractionC" loc="22:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
      <documentation loc="22:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
        <short>////////////////////////////////////////////</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="InteractionM" loc="20:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <documentation loc="20:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
        <short>***************************************************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="InteractionC.ConfigTimeout" loc="36(InteractionC.ConfigTimeout):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(InteractionC.ConfigTimeout):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InteractionC.SensorCheckTimerC" loc="36(InteractionC.SensorCheckTimerC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(InteractionC.SensorCheckTimerC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InteractionC.C328_Reset_TimerC" loc="36(InteractionC.C328_Reset_TimerC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(InteractionC.C328_Reset_TimerC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InteractionC.SensirionSht11C" loc="45(InteractionC.SensirionSht11C):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11C.nc">
      <documentation loc="45(InteractionC.SensirionSht11C):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InteractionC.SensirionSht11C.SensirionSht11ReaderP" loc="43(InteractionC.SensirionSht11C.SensirionSht11ReaderP):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <documentation loc="43(InteractionC.SensirionSht11C.SensirionSht11ReaderP):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
        <short>&#10; SensirionSht11ReaderP transforms the HAL-level SensirionSht11&#10; interface into a pair of SID Read interfaces, one for the&#10; temperature sensor and one for the humidity sensor.</short>
        <long>&#10; SensirionSht11ReaderP transforms the HAL-level SensirionSht11&#10; interface into a pair of SID Read interfaces, one for the&#10; temperature sensor and one for the humidity sensor. It acquires the&#10; underlying resource before executing each read, enabling&#10; arbitrated access.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C" loc="43:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HalSensirionSht11C.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HalSensirionSht11C.nc">
        <short>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform.</short>
        <long>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform. This component provides the SensirionSht11&#10; interface, which offers full control over the device. Please&#10; acquire the Resource before using it.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/08/15 11:59:09 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalSensirionSht11C.SensirionSht11LogicP" loc="53(HalSensirionSht11C.SensirionSht11LogicP):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11LogicP.nc">
      <documentation loc="53(HalSensirionSht11C.SensirionSht11LogicP):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C" loc="43:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
        <short>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them.</short>
        <long>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them. You&#10; really shouldn't be wiring to this, unless you're writing a new&#10; Sensirion SHT11 driver.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/08/15 11:59:09 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11P" loc="42:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11P.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11P.nc">
        <short>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.&#10;&#10;</short>
        <long>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/06/20 18:56:07 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.TimerMilliC" loc="36(HplSensirionSht11C.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(HplSensirionSht11C.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptC" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.&#10;</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="30(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="30(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="30(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="30(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="30(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="30(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="30(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="30(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.InterruptDATAC" loc="6(HplSensirionSht11C.InterruptDATAC):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="6(HplSensirionSht11C.InterruptDATAC):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter" loc="79(HplSensirionSht11C.Arbiter):/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <documentation loc="79(HplSensirionSht11C.Arbiter):/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Sht11.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Queue" loc="32(HplSensirionSht11C.Arbiter.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Arbiter" loc="51(HplSensirionSht11C.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="51(HplSensirionSht11C.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceController interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceController interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceController&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC" loc="57(HplSensirionSht11C.SplitControlPowerManagerC):/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="57(HplSensirionSht11C.SplitControlPowerManagerC):/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices. </short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager" loc="48(HplSensirionSht11C.SplitControlPowerManagerC.PowerManager):/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <documentation loc="48(HplSensirionSht11C.SplitControlPowerManagerC.PowerManager):/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10;</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C.TimerMilliC" loc="36(HalSensirionSht11C.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(HalSensirionSht11C.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InteractionC.PhotoSensorC" loc="19(InteractionC.PhotoSensorC):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoSensorC.nc">
      <documentation loc="19(InteractionC.PhotoSensorC):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10;</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PhotoSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InteractionC.PhotoSensorC.DemoChannel" loc="27(InteractionC.PhotoSensorC.DemoChannel):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoC.nc">
      <documentation loc="27(InteractionC.PhotoSensorC.DemoChannel):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="0">
        <component-ref qname="PhotoC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InteractionC.PhotoSensorC.DemoChannel.ADC_ShiftM" loc="27(InteractionC.PhotoSensorC.DemoChannel.ADC_ShiftM):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc">
      <documentation loc="27(InteractionC.PhotoSensorC.DemoChannel.ADC_ShiftM):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="0">
        <component-ref qname="ADC_ShiftM"/>
      </instance>
      <module/>
    </component>
    <component qname="InteractionC.PhotoSensorC.DemoChannel.PhotoProC" loc="26(InteractionC.PhotoSensorC.DemoChannel.PhotoProC):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoProC.nc">
      <documentation loc="26(InteractionC.PhotoSensorC.DemoChannel.PhotoProC):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoProC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="0">
        <component-ref qname="PhotoProC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InteractionC.PhotoSensorC.DemoChannel.PhotoProC.AdcReadClientC" loc="21(InteractionC.PhotoSensorC.DemoChannel.PhotoProC.AdcReadClientC):/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="21(InteractionC.PhotoSensorC.DemoChannel.PhotoProC.AdcReadClientC):/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC. </short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="16:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <documentation loc="16:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10;</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="42:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10;</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="62:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <documentation loc="62:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
        <short>&#10;&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10;&#10;&#10; @author Jason Hill&#10;&#10; @author David Gay&#10;&#10; @author Philip Levis&#10;&#10; @author Phil Buonadonna&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="35:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10;</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="35:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10;</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="79(Atm128AdcC.AdcArbiter):/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="79(Atm128AdcC.AdcArbiter):/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="32(Atm128AdcC.AdcArbiter.Queue):/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="32(Atm128AdcC.AdcArbiter.Queue):/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.1.2.3 $&#10; @date $Date: 2006/10/23 05:45:49 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="51(Atm128AdcC.AdcArbiter.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="51(Atm128AdcC.AdcArbiter.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceController interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceController interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceController&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="57(Atm128AdcC.PM):/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="57(Atm128AdcC.PM):/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10;</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="48(Atm128AdcC.PM.PowerManager):/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="48(Atm128AdcC.PM.PowerManager):/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10;</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10;</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <documentation loc="23(WireAdcP.ArbitrateRead):/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10;</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoDeviceP" loc="29:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoDeviceP.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoDeviceP.nc">
        <short>***************************************************************************</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="PhotoP" loc="27:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoP.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoP.nc">
        <short>***************************************************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="ZigbexBusC" loc="27:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="ZigbexBusP" loc="27:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusP.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusP.nc">
        <short>***************************************************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="InteractionC.UltraredSensorC" loc="19(InteractionC.UltraredSensorC):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredSensorC.nc">
      <documentation loc="19(InteractionC.UltraredSensorC):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10;</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="UltraredSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InteractionC.UltraredSensorC.DemoChannel" loc="27(InteractionC.UltraredSensorC.DemoChannel):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredC.nc">
      <documentation loc="27(InteractionC.UltraredSensorC.DemoChannel):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="0">
        <component-ref qname="UltraredC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InteractionC.UltraredSensorC.DemoChannel.ADC_ShiftM" loc="27(InteractionC.UltraredSensorC.DemoChannel.ADC_ShiftM):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc">
      <documentation loc="27(InteractionC.UltraredSensorC.DemoChannel.ADC_ShiftM):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="1">
        <component-ref qname="ADC_ShiftM"/>
      </instance>
      <module/>
    </component>
    <component qname="InteractionC.UltraredSensorC.DemoChannel.UltraredProC" loc="29(InteractionC.UltraredSensorC.DemoChannel.UltraredProC):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredProC.nc">
      <documentation loc="29(InteractionC.UltraredSensorC.DemoChannel.UltraredProC):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredProC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="0">
        <component-ref qname="UltraredProC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InteractionC.UltraredSensorC.DemoChannel.UltraredProC.AdcReadClientC" loc="21(InteractionC.UltraredSensorC.DemoChannel.UltraredProC.AdcReadClientC):/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="21(InteractionC.UltraredSensorC.DemoChannel.UltraredProC.AdcReadClientC):/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC. </short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UltraredDeviceP" loc="29:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredDeviceP.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredDeviceP.nc">
        <short>***************************************************************************</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="UltraredP" loc="27:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredP.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredP.nc">
        <short>***************************************************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="CommunicationWithOPTC" loc="22:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTC.nc">
      <documentation loc="22:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="CommunicationWithOPTM" loc="20:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTM.nc">
      <documentation loc="20:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTM.nc">
        <short>***************************************************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="35:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.&#10;&#10;</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="69:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <documentation loc="69:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega128 serial port HPL.&#10;&#10;</short>
        <long> &#10; Private component of the Atmega128 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NoSCSuartDBGC" loc="2:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/NoSCSuartDBGC.nc">
      <module/>
    </component>
    <component qname="SCSuartDBGC" loc="29:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGC.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="SCSuartDBGM" loc="29:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGM.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGM.nc">
        <short>***************************************************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="TempSensorC" loc="20:TempSensorC.nc">
      <documentation loc="20:TempSensorC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="TempSensorM" loc="23:TempSensorM.nc">
      <documentation loc="23:TempSensorM.nc">
        <short>***************************************************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="TempSensorC.TimerMilliC" loc="36(TempSensorC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(TempSensorC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TempSensorC.Sensor" loc="45(TempSensorC.Sensor):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11C.nc">
      <documentation loc="45(TempSensorC.Sensor):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SensirionSht11C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TempSensorC.Sensor.SensirionSht11ReaderP" loc="43(TempSensorC.Sensor.SensirionSht11ReaderP):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <documentation loc="43(TempSensorC.Sensor.SensirionSht11ReaderP):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
        <short>&#10; SensirionSht11ReaderP transforms the HAL-level SensirionSht11&#10; interface into a pair of SID Read interfaces, one for the&#10; temperature sensor and one for the humidity sensor.</short>
        <long>&#10; SensirionSht11ReaderP transforms the HAL-level SensirionSht11&#10; interface into a pair of SID Read interfaces, one for the&#10; temperature sensor and one for the humidity sensor. It acquires the&#10; underlying resource before executing each read, enabling&#10; arbitrated access.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SensirionSht11ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="TempSensorC.URSensor" loc="19(TempSensorC.URSensor):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredSensorC.nc">
      <documentation loc="19(TempSensorC.URSensor):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10;</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="UltraredSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TempSensorC.URSensor.DemoChannel" loc="27(TempSensorC.URSensor.DemoChannel):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredC.nc">
      <documentation loc="27(TempSensorC.URSensor.DemoChannel):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="1">
        <component-ref qname="UltraredC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TempSensorC.URSensor.DemoChannel.ADC_ShiftM" loc="27(TempSensorC.URSensor.DemoChannel.ADC_ShiftM):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc">
      <documentation loc="27(TempSensorC.URSensor.DemoChannel.ADC_ShiftM):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="2">
        <component-ref qname="ADC_ShiftM"/>
      </instance>
      <module/>
    </component>
    <component qname="TempSensorC.URSensor.DemoChannel.UltraredProC" loc="29(TempSensorC.URSensor.DemoChannel.UltraredProC):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredProC.nc">
      <documentation loc="29(TempSensorC.URSensor.DemoChannel.UltraredProC):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredProC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="1">
        <component-ref qname="UltraredProC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TempSensorC.URSensor.DemoChannel.UltraredProC.AdcReadClientC" loc="21(TempSensorC.URSensor.DemoChannel.UltraredProC.AdcReadClientC):/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="21(TempSensorC.URSensor.DemoChannel.UltraredProC.AdcReadClientC):/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC. </short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BaseStationC" loc="67:BaseStationC.nc">
      <documentation loc="67:BaseStationC.nc">
        <short>&#10;&#10; The TinyOS 2.x base station that forwards packets between the UART&#10;&#10; and radio.It replaces the GenericBase of TinyOS 1.0 and the&#10;&#10; TOSBase of TinyOS 1.1.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; The TinyOS 2.x base station that forwards packets between the UART&#10;&#10; and radio.It replaces the GenericBase of TinyOS 1.0 and the&#10;&#10; TOSBase of TinyOS 1.1.&#10;&#10;&#10;&#10; &#60;p>On the serial link, BaseStation sends and receives simple active&#10;&#10; messages (not particular radio packets): on the radio link, it&#10;&#10; sends radio active messages, whose format depends on the network&#10;&#10; stack being used. BaseStation will copy its compiled-in group ID to&#10;&#10; messages moving from the serial link to the radio, and will filter&#10;&#10; out incoming radio messages that do not contain that group ID.&#60;/p>&#10;&#10;&#10;&#10; &#60;p>BaseStation includes queues in both directions, with a guarantee&#10;&#10; that once a message enters a queue, it will eventually leave on the&#10;&#10; other interface. The queues allow the BaseStation to handle load&#10;&#10; spikes.&#60;/p>&#10;&#10;&#10;&#10; &#60;p>BaseStation acknowledges a message arriving over the serial link&#10;&#10; only if that message was successfully enqueued for delivery to the&#10;&#10; radio link.&#60;/p>&#10;&#10;&#10;&#10; &#60;p>The LEDS are programmed to toggle as follows:&#60;/p>&#10;&#10; &#60;ul>&#10;&#10; &#60;li>&#60;b>RED Toggle:&#60;/b>: Message bridged from serial to radio&#60;/li>&#10;&#10; &#60;li>&#60;b>GREEN Toggle:&#60;/b> Message bridged from radio to serial&#60;/li>&#10;&#10; &#60;li>&#60;b>YELLOW/BLUE Toggle:&#60;/b> Dropped message due to queue overflow in either direction&#60;/li>&#10;&#10; &#60;/ul>&#10;&#10;&#10;&#10; @author Phil Buonadonna&#10;&#10; @author Gilman Tolle&#10;&#10; @author David Gay&#10;&#10; @author Philip Levis&#10;&#10; @date August 10 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BaseStationM" loc="50:BaseStationM.nc">
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="47:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <documentation loc="47:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the micaZ platform.</short>
        <long>&#10;&#10; The Active Message layer on the micaZ platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @date June 19 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
        <short>&#10; The Active Message layer for the CC2420 radio.</short>
        <long>&#10; The Active Message layer for the CC2420 radio. This configuration&#10; just layers the AM dispatch (CC2420ActiveMessageM) on top of the&#10; underlying CC2420 radio packet (CC2420CsmaRadioC), which is&#10; inherently an AM packet (acknowledgements based on AM destination&#10; addr and group). Note that snooping may not work, due to CC2420&#10; early packet rejection if acknowledgements are enabled.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.11 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="35:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.8 $ $Date: 2006/08/04 00:34:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.11 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.12 $ $Date: 2006/07/17 05:04:16 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.8 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.22 $ $Date: 2006/09/07 17:53:12 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/AlarmMultiplexC.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/chips/cc2420/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="66(AlarmMultiplexC.Alarm):/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="66(AlarmMultiplexC.Alarm):/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.6 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.&#10;&#10;</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1P" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10;</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="35(InitOneP.InitOne):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="42(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="42(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10;</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220b60"/>
            <typename><typedef-ref name="TOne" ref="0x7e181ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="33(CounterOne16C.NCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220b60"/>
            <typename><typedef-ref name="TOne" ref="0x7e181ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="43(Counter32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="43(Counter32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10;</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220b60"/>
            <typename><typedef-ref name="T32khz" ref="0x7e220ce0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220b60"/>
            <typename><typedef-ref name="T32khz" ref="0x7e220ce0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x7e181e80"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="40(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="40(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm. </short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220b60"/>
            <typename><typedef-ref name="T32khz" ref="0x7e220ce0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220b60"/>
            <typename><typedef-ref name="TOne" ref="0x7e181ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/opt/tinyos-2.x/tos/system/NoInitC.nc">
      <documentation loc="16:/opt/tinyos-2.x/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="64:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="64:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10;</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.1.2.6 2006/06/20 18:56:06 jwhui Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.6 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.6 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="33(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="33(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10;</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="65:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsP.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.1.2.4 2006/06/20 18:56:06 jwhui Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @version @version $Revision: 1.1.2.4 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.TimerMilliC" loc="36(HplCC2420InterruptsC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(HplCC2420InterruptsC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <documentation loc="39(CC2420ControlC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.8 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiImplP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.12 $ $Date: 2006/09/28 19:26:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiP.HplCC2420SpiC" loc="37(CC2420SpiP.HplCC2420SpiC):/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="37(CC2420SpiP.HplCC2420SpiC):/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.4 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.&#10;&#10;</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.1.2.9 2006/08/15 11:59:08 klueska Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <documentation loc="75:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller. </short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.1.2.10 2006/09/28 19:26:21 jwhui Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10;</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.1.2.4 2006/03/13 23:07:53 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <documentation loc="56:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10;</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="73(Atm128SpiC.Arbiter):/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="73(Atm128SpiC.Arbiter):/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="32(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="51(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="51(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <documentation loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420TransmitC" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.8 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.14 $ $Date: 2006/08/15 11:59:08 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <documentation loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.5 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.10 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <documentation loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="32:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="31:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
        <short>&#10; This is the configuration for RandomMlcgC, a &#10; multiplicative linear congruential generator. &#10;&#10;</short>
        <long>&#10; This is the configuration for RandomMlcgC, a &#10; multiplicative linear congruential generator. &#10;&#10; @author  Barbara Hohlt&#10; @author  Philip Levis&#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgP" loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers. </short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;		S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420PacketC.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420PacketC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7ded3c20" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7ded3db0" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7dec4010" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7deb0218" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7deb03b8" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7deb0558" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7deb06f0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7ddb3218" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7ddb33b8" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7ddb3558" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7ddb36f0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="36:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7db86010" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7db86010"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7db861a0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10;</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7db72608" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7db72608"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7db728c8" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7db728c8"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x7db72a58" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7db35ae8" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7db35ae8"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7db35da8" loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7db35da8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmCounterC" loc="53:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc" abstract="">
      <documentation loc="53:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
        <short>&#10; TransformAlarmCounterC decreases precision and/or widens an Alarm/Counter&#10; pair.</short>
        <long>&#10; TransformAlarmCounterC decreases precision and/or widens an Alarm/Counter&#10; pair. This component has a reduced interrupt overhead compared to using&#10; TransformAlarmC and TransformCounterC separately. However, it is not as &#10; useful for hardware timers with multiple compare registers.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   interfaces.&#10; @param to_size_type The type for the width of the transformed interfaces.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   interfaces.&#10; @param from_size_type The type for the width of the original interfaces.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7db11b18" loc="54:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7db11b18"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7db11dd8" loc="55:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7db11dd8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7db10010" loc="56:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7db10010"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7db102d0" loc="57:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7db102d0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7db10470" loc="58:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7db10738" loc="59:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7db10738"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10;</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7daa6cc0" loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7daa6cc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10;</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7da72698" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7da72698"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7da72820" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7da17228" loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7da17228"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11C" loc="45:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11C.nc" abstract="">
      <documentation loc="45:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:07 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensirionSht11ReaderP" loc="43:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc" abstract="">
      <documentation loc="43:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
        <short>&#10; SensirionSht11ReaderP transforms the HAL-level SensirionSht11&#10; interface into a pair of SID Read interfaces, one for the&#10; temperature sensor and one for the humidity sensor.</short>
        <long>&#10; SensirionSht11ReaderP transforms the HAL-level SensirionSht11&#10; interface into a pair of SID Read interfaces, one for the&#10; temperature sensor and one for the humidity sensor. It acquires the&#10; underlying resource before executing each read, enabling&#10; arbitrated access.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11LogicP" loc="53:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11LogicP.nc" abstract="">
      <documentation loc="53:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="">
      <documentation loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x7d6a04e8" loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x7d6a0688" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x7d6a0828" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7d6a09c0" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="">
      <documentation loc="6:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="79:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="79:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7d668538" loc="79:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc" abstract="">
      <parameters>
        <constant name="size" ref="0x7d653948" loc="32:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="51:/opt/tinyos-2.x/tos/system/ArbiterP.nc" abstract="">
      <documentation loc="51:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceController interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceController interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceController&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="controller_id" ref="0x7d63c948" loc="51:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="57:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="57:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices. </short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="48:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="48:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10;</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PhotoSensorC" loc="19:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoSensorC.nc" abstract="">
      <documentation loc="19:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10;</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PhotoC" loc="27:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoC.nc" abstract="">
      <documentation loc="27:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ADC_ShiftM" loc="27:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc" abstract="">
      <documentation loc="27:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc">
        <short>***************************************************************************</short>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PhotoProC" loc="26:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoProC.nc" abstract="">
      <documentation loc="26:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoProC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="21:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="21:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC. </short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="79:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="79:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7d53e610" loc="79:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="32:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.1.2.3 $&#10; @date $Date: 2006/10/23 05:45:49 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7d537068" loc="32:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="57:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="57:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10;</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="48:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc" abstract="">
      <documentation loc="48:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10;</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc" abstract="">
      <documentation loc="23:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10;</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x7d4f6f10" loc="23:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x7d4f6f10"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="UltraredSensorC" loc="19:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredSensorC.nc" abstract="">
      <documentation loc="19:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10;</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UltraredC" loc="27:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredC.nc" abstract="">
      <documentation loc="27:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UltraredProC" loc="29:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredProC.nc" abstract="">
      <documentation loc="29:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredProC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420AlarmC" loc="66:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="66:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.6 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="26:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc" abstract="">
      <documentation loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10;</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7d062580" loc="44:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7d062580"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7d062840" loc="45:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7d062840"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7d062a08" loc="46:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7d062a08"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7d062cc8" loc="47:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7d062cc8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7d062e68" loc="48:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7d061168" loc="49:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7d061168"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="40:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc" abstract="">
      <documentation loc="40:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm. </short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7d051860" loc="41:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7d051860"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7d051b20" loc="42:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7d051b20"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7d051ce8" loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7d051ce8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7d044010" loc="44:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7d044010"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7d0441b0" loc="45:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10;</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc" abstract="">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="37:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.4 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7cebf8a0" loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleArbiterP" loc="51:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc" abstract="">
      <documentation loc="51:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Boot" ref="0x7e083190" loc="4:SerialAppM.nc">
      <component-ref qname="SerialAppM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7e083190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7e083368"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LCDSetter" ref="0x7e0437d8" loc="9:SerialAppM.nc">
      <component-ref qname="SerialAppM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LCDSetter" scoped="" ref="0x7e0437d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCDSetter"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e0439b0"/>
        <function-ref name="setLCD" scoped="" ref="0x7e043a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedController" ref="0x7e053a70" loc="8:SerialAppM.nc">
      <component-ref qname="SerialAppM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedController" scoped="" ref="0x7e053a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LedController"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e053c48"/>
        <function-ref name="BlinkLed1" scoped="" ref="0x7e053d28"/>
        <function-ref name="BlinkLed2" scoped="" ref="0x7e053e08"/>
        <function-ref name="BlinkLed0" scoped="" ref="0x7e053ee8"/>
        <function-ref name="setNumber" scoped="" ref="0x7e061010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BaseStation" ref="0x7e0322d8" loc="11:SerialAppM.nc">
      <component-ref qname="SerialAppM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BaseStation" scoped="" ref="0x7e0322d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BaseStation"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e0324b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempSensor" ref="0x7e040188" loc="10:SerialAppM.nc">
      <component-ref qname="SerialAppM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempSensor" scoped="" ref="0x7e040188"/></type-interface>
      <instance>
        <interfacedef-ref qname="TempSensor"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7e040360"/>
        <function-ref name="start" scoped="" ref="0x7e040440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7e090010" loc="6:SerialAppM.nc">
      <component-ref qname="SerialAppM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e090010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e070928"/>
        <function-ref name="fired" scoped="" ref="0x7e090d18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e0702e8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e070108"/>
        <function-ref name="getdt" scoped="" ref="0x7e070ce8"/>
        <function-ref name="gett0" scoped="" ref="0x7e070b08"/>
        <function-ref name="isRunning" scoped="" ref="0x7e090ef8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e090638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e070608"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e0908b8"/>
        <function-ref name="stop" scoped="" ref="0x7e090b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7dff1080" loc="47:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7dff1080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dff1258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7dff38c8" loc="46:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7dff38c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7dff3aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7dfd1010" loc="43:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7dfd1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dfd11e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dfe0d60" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dfe0d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dfd3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7dfc28f0" loc="41:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7dfc28f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7dfc2ac8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7dfc2ba8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7dfc2c88"/>
        <function-ref name="actualMicro" scoped="" ref="0x7dfc2d68"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7dfc2e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7dfb2090" loc="36:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7dfb2090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dfb2268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dfb3d10" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dfb3d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dfb3ee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7dfb2400" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7dfb2400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dfb25d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7dfc0da0" loc="18:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7dfc0da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dfa0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7dfc0a38" loc="17:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7dfc0a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dfc0c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7df821a0" loc="22:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7df821a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7df82378"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7df72800" loc="21:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7df72800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df729d8"/>
        <function-ref name="isInput" scoped="" ref="0x7df72ab8"/>
        <function-ref name="toggle" scoped="" ref="0x7df72b98"/>
        <function-ref name="isOutput" scoped="" ref="0x7df72c78"/>
        <function-ref name="get" scoped="" ref="0x7df72d58"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df72e38"/>
        <function-ref name="set" scoped="" ref="0x7df72f18"/>
        <function-ref name="clr" scoped="" ref="0x7df82010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7df90010" loc="20:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7df90010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7df901e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7def0e78" loc="91:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7def0e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dee3308"/>
        <function-ref name="isInput" scoped="" ref="0x7dee33e8"/>
        <function-ref name="toggle" scoped="" ref="0x7dee34c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7dee35a8"/>
        <function-ref name="get" scoped="" ref="0x7dee3688"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dee3768"/>
        <function-ref name="set" scoped="" ref="0x7dee3848"/>
        <function-ref name="clr" scoped="" ref="0x7dee3928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7df23e98" loc="65:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7df23e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df220c0"/>
        <function-ref name="isInput" scoped="" ref="0x7df221a0"/>
        <function-ref name="toggle" scoped="" ref="0x7df22280"/>
        <function-ref name="isOutput" scoped="" ref="0x7df22360"/>
        <function-ref name="get" scoped="" ref="0x7df22440"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df22520"/>
        <function-ref name="set" scoped="" ref="0x7df22600"/>
        <function-ref name="clr" scoped="" ref="0x7df226e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7df03068" loc="76:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7df03068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df03240"/>
        <function-ref name="isInput" scoped="" ref="0x7df03320"/>
        <function-ref name="toggle" scoped="" ref="0x7df03400"/>
        <function-ref name="isOutput" scoped="" ref="0x7df034e0"/>
        <function-ref name="get" scoped="" ref="0x7df035c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df036a0"/>
        <function-ref name="set" scoped="" ref="0x7df03780"/>
        <function-ref name="clr" scoped="" ref="0x7df03860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7def3e78" loc="85:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7def3e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7def2070"/>
        <function-ref name="isInput" scoped="" ref="0x7def2150"/>
        <function-ref name="toggle" scoped="" ref="0x7def2230"/>
        <function-ref name="isOutput" scoped="" ref="0x7def2310"/>
        <function-ref name="get" scoped="" ref="0x7def23f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7def24d0"/>
        <function-ref name="set" scoped="" ref="0x7def25b0"/>
        <function-ref name="clr" scoped="" ref="0x7def2690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7df52508" loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7df52508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df526e0"/>
        <function-ref name="isInput" scoped="" ref="0x7df527c0"/>
        <function-ref name="toggle" scoped="" ref="0x7df528a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7df52980"/>
        <function-ref name="get" scoped="" ref="0x7df52a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df52b40"/>
        <function-ref name="set" scoped="" ref="0x7df52c20"/>
        <function-ref name="clr" scoped="" ref="0x7df52d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7df00af8" loc="83:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7df00af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df00cd0"/>
        <function-ref name="isInput" scoped="" ref="0x7df00db0"/>
        <function-ref name="toggle" scoped="" ref="0x7df00e90"/>
        <function-ref name="isOutput" scoped="" ref="0x7def3010"/>
        <function-ref name="get" scoped="" ref="0x7def30f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7def31d0"/>
        <function-ref name="set" scoped="" ref="0x7def32b0"/>
        <function-ref name="clr" scoped="" ref="0x7def3390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7df51808" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7df51808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df519e0"/>
        <function-ref name="isInput" scoped="" ref="0x7df51ac0"/>
        <function-ref name="toggle" scoped="" ref="0x7df51ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7df51c80"/>
        <function-ref name="get" scoped="" ref="0x7df51d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df51e40"/>
        <function-ref name="set" scoped="" ref="0x7df51f20"/>
        <function-ref name="clr" scoped="" ref="0x7df50018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7df33980" loc="57:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7df33980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df33b58"/>
        <function-ref name="isInput" scoped="" ref="0x7df33c38"/>
        <function-ref name="toggle" scoped="" ref="0x7df33d18"/>
        <function-ref name="isOutput" scoped="" ref="0x7df33df8"/>
        <function-ref name="get" scoped="" ref="0x7df33ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df32010"/>
        <function-ref name="set" scoped="" ref="0x7df320f0"/>
        <function-ref name="clr" scoped="" ref="0x7df321d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7df21bd8" loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7df21bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df21db0"/>
        <function-ref name="isInput" scoped="" ref="0x7df21e90"/>
        <function-ref name="toggle" scoped="" ref="0x7df20010"/>
        <function-ref name="isOutput" scoped="" ref="0x7df200f0"/>
        <function-ref name="get" scoped="" ref="0x7df201d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df202b0"/>
        <function-ref name="set" scoped="" ref="0x7df20390"/>
        <function-ref name="clr" scoped="" ref="0x7df20470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7df02d98" loc="79:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7df02d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df01010"/>
        <function-ref name="isInput" scoped="" ref="0x7df010f0"/>
        <function-ref name="toggle" scoped="" ref="0x7df011d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7df012b0"/>
        <function-ref name="get" scoped="" ref="0x7df01390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df01470"/>
        <function-ref name="set" scoped="" ref="0x7df01550"/>
        <function-ref name="clr" scoped="" ref="0x7df01630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7df61428" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7df61428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df61600"/>
        <function-ref name="isInput" scoped="" ref="0x7df616e0"/>
        <function-ref name="toggle" scoped="" ref="0x7df617c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7df618a0"/>
        <function-ref name="get" scoped="" ref="0x7df61980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df61a60"/>
        <function-ref name="set" scoped="" ref="0x7df61b40"/>
        <function-ref name="clr" scoped="" ref="0x7df61c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7df43508" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7df43508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df436e0"/>
        <function-ref name="isInput" scoped="" ref="0x7df437c0"/>
        <function-ref name="toggle" scoped="" ref="0x7df438a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7df43980"/>
        <function-ref name="get" scoped="" ref="0x7df43a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df43b40"/>
        <function-ref name="set" scoped="" ref="0x7df43c20"/>
        <function-ref name="clr" scoped="" ref="0x7df43d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7df316c8" loc="60:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7df316c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df318a0"/>
        <function-ref name="isInput" scoped="" ref="0x7df31980"/>
        <function-ref name="toggle" scoped="" ref="0x7df31a60"/>
        <function-ref name="isOutput" scoped="" ref="0x7df31b40"/>
        <function-ref name="get" scoped="" ref="0x7df31c20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df31d00"/>
        <function-ref name="set" scoped="" ref="0x7df31de0"/>
        <function-ref name="clr" scoped="" ref="0x7df31ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7df12980" loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7df12980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df12b58"/>
        <function-ref name="isInput" scoped="" ref="0x7df12c38"/>
        <function-ref name="toggle" scoped="" ref="0x7df12d18"/>
        <function-ref name="isOutput" scoped="" ref="0x7df12df8"/>
        <function-ref name="get" scoped="" ref="0x7df12ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df11010"/>
        <function-ref name="set" scoped="" ref="0x7df110f0"/>
        <function-ref name="clr" scoped="" ref="0x7df111d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7def1b00" loc="88:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7def1b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7def1cd8"/>
        <function-ref name="isInput" scoped="" ref="0x7def1db8"/>
        <function-ref name="toggle" scoped="" ref="0x7def1e98"/>
        <function-ref name="isOutput" scoped="" ref="0x7def0010"/>
        <function-ref name="get" scoped="" ref="0x7def00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7def01d0"/>
        <function-ref name="set" scoped="" ref="0x7def02b0"/>
        <function-ref name="clr" scoped="" ref="0x7def0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7dee2d98" loc="94:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7dee2d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dee1010"/>
        <function-ref name="isInput" scoped="" ref="0x7dee10f0"/>
        <function-ref name="toggle" scoped="" ref="0x7dee11d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dee12b0"/>
        <function-ref name="get" scoped="" ref="0x7dee1390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dee1470"/>
        <function-ref name="set" scoped="" ref="0x7dee1550"/>
        <function-ref name="clr" scoped="" ref="0x7dee1630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7df11cb8" loc="74:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7df11cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df11e90"/>
        <function-ref name="isInput" scoped="" ref="0x7df10010"/>
        <function-ref name="toggle" scoped="" ref="0x7df100f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7df101d0"/>
        <function-ref name="get" scoped="" ref="0x7df102b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df10390"/>
        <function-ref name="set" scoped="" ref="0x7df10470"/>
        <function-ref name="clr" scoped="" ref="0x7df10550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7df53188" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7df53188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df53360"/>
        <function-ref name="isInput" scoped="" ref="0x7df53440"/>
        <function-ref name="toggle" scoped="" ref="0x7df53520"/>
        <function-ref name="isOutput" scoped="" ref="0x7df53600"/>
        <function-ref name="get" scoped="" ref="0x7df536e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df537c0"/>
        <function-ref name="set" scoped="" ref="0x7df538a0"/>
        <function-ref name="clr" scoped="" ref="0x7df53980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7df41268" loc="52:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7df41268"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df41440"/>
        <function-ref name="isInput" scoped="" ref="0x7df41520"/>
        <function-ref name="toggle" scoped="" ref="0x7df41600"/>
        <function-ref name="isOutput" scoped="" ref="0x7df416e0"/>
        <function-ref name="get" scoped="" ref="0x7df417c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df418a0"/>
        <function-ref name="set" scoped="" ref="0x7df41980"/>
        <function-ref name="clr" scoped="" ref="0x7df41a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7dee3aa0" loc="92:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7dee3aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dee3c78"/>
        <function-ref name="isInput" scoped="" ref="0x7dee3d58"/>
        <function-ref name="toggle" scoped="" ref="0x7dee3e38"/>
        <function-ref name="isOutput" scoped="" ref="0x7dee3f18"/>
        <function-ref name="get" scoped="" ref="0x7dee2010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dee20f0"/>
        <function-ref name="set" scoped="" ref="0x7dee21d0"/>
        <function-ref name="clr" scoped="" ref="0x7dee22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7df405e8" loc="55:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7df405e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df407c0"/>
        <function-ref name="isInput" scoped="" ref="0x7df408a0"/>
        <function-ref name="toggle" scoped="" ref="0x7df40980"/>
        <function-ref name="isOutput" scoped="" ref="0x7df40a60"/>
        <function-ref name="get" scoped="" ref="0x7df40b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df40c20"/>
        <function-ref name="set" scoped="" ref="0x7df40d00"/>
        <function-ref name="clr" scoped="" ref="0x7df40de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7df22858" loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7df22858"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df22a30"/>
        <function-ref name="isInput" scoped="" ref="0x7df22b10"/>
        <function-ref name="toggle" scoped="" ref="0x7df22bf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7df22cd0"/>
        <function-ref name="get" scoped="" ref="0x7df22db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df22e90"/>
        <function-ref name="set" scoped="" ref="0x7df21010"/>
        <function-ref name="clr" scoped="" ref="0x7df210f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7df039d8" loc="77:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7df039d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df03bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7df03c90"/>
        <function-ref name="toggle" scoped="" ref="0x7df03d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7df03e50"/>
        <function-ref name="get" scoped="" ref="0x7df02010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df020f0"/>
        <function-ref name="set" scoped="" ref="0x7df021d0"/>
        <function-ref name="clr" scoped="" ref="0x7df022b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7def2808" loc="86:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7def2808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7def29e0"/>
        <function-ref name="isInput" scoped="" ref="0x7def2ac0"/>
        <function-ref name="toggle" scoped="" ref="0x7def2ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7def2c80"/>
        <function-ref name="get" scoped="" ref="0x7def2d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7def2e40"/>
        <function-ref name="set" scoped="" ref="0x7def2f20"/>
        <function-ref name="clr" scoped="" ref="0x7def1018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7df52e78" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7df52e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df51070"/>
        <function-ref name="isInput" scoped="" ref="0x7df51150"/>
        <function-ref name="toggle" scoped="" ref="0x7df51230"/>
        <function-ref name="isOutput" scoped="" ref="0x7df51310"/>
        <function-ref name="get" scoped="" ref="0x7df513f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df514d0"/>
        <function-ref name="set" scoped="" ref="0x7df515b0"/>
        <function-ref name="clr" scoped="" ref="0x7df51690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7df50190" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7df50190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df50368"/>
        <function-ref name="isInput" scoped="" ref="0x7df50448"/>
        <function-ref name="toggle" scoped="" ref="0x7df50528"/>
        <function-ref name="isOutput" scoped="" ref="0x7df50608"/>
        <function-ref name="get" scoped="" ref="0x7df506e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df507c8"/>
        <function-ref name="set" scoped="" ref="0x7df508a8"/>
        <function-ref name="clr" scoped="" ref="0x7df50988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7df32348" loc="58:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7df32348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df32520"/>
        <function-ref name="isInput" scoped="" ref="0x7df32600"/>
        <function-ref name="toggle" scoped="" ref="0x7df326e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7df327c0"/>
        <function-ref name="get" scoped="" ref="0x7df328a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df32980"/>
        <function-ref name="set" scoped="" ref="0x7df32a60"/>
        <function-ref name="clr" scoped="" ref="0x7df32b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7df205e8" loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7df205e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df207c0"/>
        <function-ref name="isInput" scoped="" ref="0x7df208a0"/>
        <function-ref name="toggle" scoped="" ref="0x7df20980"/>
        <function-ref name="isOutput" scoped="" ref="0x7df20a60"/>
        <function-ref name="get" scoped="" ref="0x7df20b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df20c20"/>
        <function-ref name="set" scoped="" ref="0x7df20d00"/>
        <function-ref name="clr" scoped="" ref="0x7df20de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7df017a8" loc="80:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7df017a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df01980"/>
        <function-ref name="isInput" scoped="" ref="0x7df01a60"/>
        <function-ref name="toggle" scoped="" ref="0x7df01b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7df01c20"/>
        <function-ref name="get" scoped="" ref="0x7df01d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df01de0"/>
        <function-ref name="set" scoped="" ref="0x7df01ec0"/>
        <function-ref name="clr" scoped="" ref="0x7df00010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7df61d98" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7df61d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df60010"/>
        <function-ref name="isInput" scoped="" ref="0x7df600f0"/>
        <function-ref name="toggle" scoped="" ref="0x7df601d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7df602b0"/>
        <function-ref name="get" scoped="" ref="0x7df60390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df60470"/>
        <function-ref name="set" scoped="" ref="0x7df60550"/>
        <function-ref name="clr" scoped="" ref="0x7df60630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7df43e78" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7df43e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df420e0"/>
        <function-ref name="isInput" scoped="" ref="0x7df421c0"/>
        <function-ref name="toggle" scoped="" ref="0x7df422a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7df42380"/>
        <function-ref name="get" scoped="" ref="0x7df42460"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df42540"/>
        <function-ref name="set" scoped="" ref="0x7df42620"/>
        <function-ref name="clr" scoped="" ref="0x7df42700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7df30068" loc="61:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7df30068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df30240"/>
        <function-ref name="isInput" scoped="" ref="0x7df30320"/>
        <function-ref name="toggle" scoped="" ref="0x7df30400"/>
        <function-ref name="isOutput" scoped="" ref="0x7df304e0"/>
        <function-ref name="get" scoped="" ref="0x7df305c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df306a0"/>
        <function-ref name="set" scoped="" ref="0x7df30780"/>
        <function-ref name="clr" scoped="" ref="0x7df30860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7def0508" loc="89:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7def0508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7def06e0"/>
        <function-ref name="isInput" scoped="" ref="0x7def07c0"/>
        <function-ref name="toggle" scoped="" ref="0x7def08a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7def0980"/>
        <function-ref name="get" scoped="" ref="0x7def0a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7def0b40"/>
        <function-ref name="set" scoped="" ref="0x7def0c20"/>
        <function-ref name="clr" scoped="" ref="0x7def0d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7df23428" loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7df23428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df23700"/>
        <function-ref name="isInput" scoped="" ref="0x7df237e0"/>
        <function-ref name="toggle" scoped="" ref="0x7df238c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7df239a0"/>
        <function-ref name="get" scoped="" ref="0x7df23a80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df23b60"/>
        <function-ref name="set" scoped="" ref="0x7df23c40"/>
        <function-ref name="clr" scoped="" ref="0x7df23d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7df106c8" loc="75:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7df106c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df108a0"/>
        <function-ref name="isInput" scoped="" ref="0x7df10980"/>
        <function-ref name="toggle" scoped="" ref="0x7df10a60"/>
        <function-ref name="isOutput" scoped="" ref="0x7df10b40"/>
        <function-ref name="get" scoped="" ref="0x7df10c20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df10d00"/>
        <function-ref name="set" scoped="" ref="0x7df10de0"/>
        <function-ref name="clr" scoped="" ref="0x7df10ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7def3508" loc="84:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7def3508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7def36e0"/>
        <function-ref name="isInput" scoped="" ref="0x7def37c0"/>
        <function-ref name="toggle" scoped="" ref="0x7def38a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7def3980"/>
        <function-ref name="get" scoped="" ref="0x7def3a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7def3b40"/>
        <function-ref name="set" scoped="" ref="0x7def3c20"/>
        <function-ref name="clr" scoped="" ref="0x7def3d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7dee17a8" loc="95:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7dee17a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dee1980"/>
        <function-ref name="isInput" scoped="" ref="0x7dee1a60"/>
        <function-ref name="toggle" scoped="" ref="0x7dee1b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7dee1c20"/>
        <function-ref name="get" scoped="" ref="0x7dee1d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dee1de0"/>
        <function-ref name="set" scoped="" ref="0x7dee1ec0"/>
        <function-ref name="clr" scoped="" ref="0x7dee0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7df53af8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7df53af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df53cd0"/>
        <function-ref name="isInput" scoped="" ref="0x7df53db0"/>
        <function-ref name="toggle" scoped="" ref="0x7df53e90"/>
        <function-ref name="isOutput" scoped="" ref="0x7df52010"/>
        <function-ref name="get" scoped="" ref="0x7df520f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df521d0"/>
        <function-ref name="set" scoped="" ref="0x7df522b0"/>
        <function-ref name="clr" scoped="" ref="0x7df52390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7df41bd8" loc="53:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7df41bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df41db0"/>
        <function-ref name="isInput" scoped="" ref="0x7df41e90"/>
        <function-ref name="toggle" scoped="" ref="0x7df40010"/>
        <function-ref name="isOutput" scoped="" ref="0x7df400f0"/>
        <function-ref name="get" scoped="" ref="0x7df401d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df402b0"/>
        <function-ref name="set" scoped="" ref="0x7df40390"/>
        <function-ref name="clr" scoped="" ref="0x7df40470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7df00188" loc="82:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7df00188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df00360"/>
        <function-ref name="isInput" scoped="" ref="0x7df00440"/>
        <function-ref name="toggle" scoped="" ref="0x7df00520"/>
        <function-ref name="isOutput" scoped="" ref="0x7df00600"/>
        <function-ref name="get" scoped="" ref="0x7df006e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df007c0"/>
        <function-ref name="set" scoped="" ref="0x7df008a0"/>
        <function-ref name="clr" scoped="" ref="0x7df00980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7df33010" loc="56:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7df33010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df331e8"/>
        <function-ref name="isInput" scoped="" ref="0x7df332c8"/>
        <function-ref name="toggle" scoped="" ref="0x7df333a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7df33488"/>
        <function-ref name="get" scoped="" ref="0x7df33568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df33648"/>
        <function-ref name="set" scoped="" ref="0x7df33728"/>
        <function-ref name="clr" scoped="" ref="0x7df33808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7df21268" loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7df21268"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df21440"/>
        <function-ref name="isInput" scoped="" ref="0x7df21520"/>
        <function-ref name="toggle" scoped="" ref="0x7df21600"/>
        <function-ref name="isOutput" scoped="" ref="0x7df216e0"/>
        <function-ref name="get" scoped="" ref="0x7df217c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df218a0"/>
        <function-ref name="set" scoped="" ref="0x7df21980"/>
        <function-ref name="clr" scoped="" ref="0x7df21a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7df02428" loc="78:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7df02428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df02600"/>
        <function-ref name="isInput" scoped="" ref="0x7df026e0"/>
        <function-ref name="toggle" scoped="" ref="0x7df027c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7df028a0"/>
        <function-ref name="get" scoped="" ref="0x7df02980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df02a60"/>
        <function-ref name="set" scoped="" ref="0x7df02b40"/>
        <function-ref name="clr" scoped="" ref="0x7df02c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7def1190" loc="87:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7def1190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7def1368"/>
        <function-ref name="isInput" scoped="" ref="0x7def1448"/>
        <function-ref name="toggle" scoped="" ref="0x7def1528"/>
        <function-ref name="isOutput" scoped="" ref="0x7def1608"/>
        <function-ref name="get" scoped="" ref="0x7def16e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7def17c8"/>
        <function-ref name="set" scoped="" ref="0x7def18a8"/>
        <function-ref name="clr" scoped="" ref="0x7def1988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7df62a80" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7df62a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df62c58"/>
        <function-ref name="isInput" scoped="" ref="0x7df62d38"/>
        <function-ref name="toggle" scoped="" ref="0x7df62e18"/>
        <function-ref name="isOutput" scoped="" ref="0x7df62ef8"/>
        <function-ref name="get" scoped="" ref="0x7df61010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df610f0"/>
        <function-ref name="set" scoped="" ref="0x7df611d0"/>
        <function-ref name="clr" scoped="" ref="0x7df612b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7df50b00" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7df50b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df50cd8"/>
        <function-ref name="isInput" scoped="" ref="0x7df50db8"/>
        <function-ref name="toggle" scoped="" ref="0x7df50e98"/>
        <function-ref name="isOutput" scoped="" ref="0x7df43010"/>
        <function-ref name="get" scoped="" ref="0x7df430f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df431d0"/>
        <function-ref name="set" scoped="" ref="0x7df432b0"/>
        <function-ref name="clr" scoped="" ref="0x7df43390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7df32cb8" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7df32cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df32e90"/>
        <function-ref name="isInput" scoped="" ref="0x7df31010"/>
        <function-ref name="toggle" scoped="" ref="0x7df310f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7df311d0"/>
        <function-ref name="get" scoped="" ref="0x7df312b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df31390"/>
        <function-ref name="set" scoped="" ref="0x7df31470"/>
        <function-ref name="clr" scoped="" ref="0x7df31550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7df12010" loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7df12010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df121e8"/>
        <function-ref name="isInput" scoped="" ref="0x7df122c8"/>
        <function-ref name="toggle" scoped="" ref="0x7df123a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7df12488"/>
        <function-ref name="get" scoped="" ref="0x7df12568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df12648"/>
        <function-ref name="set" scoped="" ref="0x7df12728"/>
        <function-ref name="clr" scoped="" ref="0x7df12808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7dee2428" loc="93:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7dee2428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dee2600"/>
        <function-ref name="isInput" scoped="" ref="0x7dee26e0"/>
        <function-ref name="toggle" scoped="" ref="0x7dee27c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dee28a0"/>
        <function-ref name="get" scoped="" ref="0x7dee2980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dee2a60"/>
        <function-ref name="set" scoped="" ref="0x7dee2b40"/>
        <function-ref name="clr" scoped="" ref="0x7dee2c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7df11348" loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7df11348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df11520"/>
        <function-ref name="isInput" scoped="" ref="0x7df11600"/>
        <function-ref name="toggle" scoped="" ref="0x7df116e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7df117c0"/>
        <function-ref name="get" scoped="" ref="0x7df118a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df11980"/>
        <function-ref name="set" scoped="" ref="0x7df11a60"/>
        <function-ref name="clr" scoped="" ref="0x7df11b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7df309d8" loc="62:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7df309d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df30bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7df30c90"/>
        <function-ref name="toggle" scoped="" ref="0x7df30d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7df30e50"/>
        <function-ref name="get" scoped="" ref="0x7df23010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df230f0"/>
        <function-ref name="set" scoped="" ref="0x7df231d0"/>
        <function-ref name="clr" scoped="" ref="0x7df232b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7df607a8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7df607a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df60980"/>
        <function-ref name="isInput" scoped="" ref="0x7df60a60"/>
        <function-ref name="toggle" scoped="" ref="0x7df60b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7df60c20"/>
        <function-ref name="get" scoped="" ref="0x7df60d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df60de0"/>
        <function-ref name="set" scoped="" ref="0x7df60ec0"/>
        <function-ref name="clr" scoped="" ref="0x7df53010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7df42878" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7df42878"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df42a50"/>
        <function-ref name="isInput" scoped="" ref="0x7df42b30"/>
        <function-ref name="toggle" scoped="" ref="0x7df42c10"/>
        <function-ref name="isOutput" scoped="" ref="0x7df42cf0"/>
        <function-ref name="get" scoped="" ref="0x7df42dd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df42eb0"/>
        <function-ref name="set" scoped="" ref="0x7df41010"/>
        <function-ref name="clr" scoped="" ref="0x7df410f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7de607f0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7de607f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de609c8"/>
        <function-ref name="isInput" scoped="" ref="0x7de60aa8"/>
        <function-ref name="toggle" scoped="" ref="0x7de60b88"/>
        <function-ref name="isOutput" scoped="" ref="0x7de60c68"/>
        <function-ref name="get" scoped="" ref="0x7de60d48"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de60e28"/>
        <function-ref name="set" scoped="" ref="0x7de60f08"/>
        <function-ref name="clr" scoped="" ref="0x7de54010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7de534f0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7de534f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de536c8"/>
        <function-ref name="isInput" scoped="" ref="0x7de537a8"/>
        <function-ref name="toggle" scoped="" ref="0x7de53888"/>
        <function-ref name="isOutput" scoped="" ref="0x7de53968"/>
        <function-ref name="get" scoped="" ref="0x7de53a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de53b28"/>
        <function-ref name="set" scoped="" ref="0x7de53c08"/>
        <function-ref name="clr" scoped="" ref="0x7de53ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7de61518" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7de61518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de616f0"/>
        <function-ref name="isInput" scoped="" ref="0x7de617d0"/>
        <function-ref name="toggle" scoped="" ref="0x7de618b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7de61990"/>
        <function-ref name="get" scoped="" ref="0x7de61a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de61b50"/>
        <function-ref name="set" scoped="" ref="0x7de61c30"/>
        <function-ref name="clr" scoped="" ref="0x7de61d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7de54170" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7de54170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de54348"/>
        <function-ref name="isInput" scoped="" ref="0x7de54428"/>
        <function-ref name="toggle" scoped="" ref="0x7de54508"/>
        <function-ref name="isOutput" scoped="" ref="0x7de545e8"/>
        <function-ref name="get" scoped="" ref="0x7de546c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de547a8"/>
        <function-ref name="set" scoped="" ref="0x7de54888"/>
        <function-ref name="clr" scoped="" ref="0x7de54968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7de53e48" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7de53e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de52050"/>
        <function-ref name="isInput" scoped="" ref="0x7de52130"/>
        <function-ref name="toggle" scoped="" ref="0x7de52210"/>
        <function-ref name="isOutput" scoped="" ref="0x7de522f0"/>
        <function-ref name="get" scoped="" ref="0x7de523d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de524b0"/>
        <function-ref name="set" scoped="" ref="0x7de52590"/>
        <function-ref name="clr" scoped="" ref="0x7de52670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7de61e70" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7de61e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de60070"/>
        <function-ref name="isInput" scoped="" ref="0x7de60150"/>
        <function-ref name="toggle" scoped="" ref="0x7de60230"/>
        <function-ref name="isOutput" scoped="" ref="0x7de60310"/>
        <function-ref name="get" scoped="" ref="0x7de603f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de604d0"/>
        <function-ref name="set" scoped="" ref="0x7de605b0"/>
        <function-ref name="clr" scoped="" ref="0x7de60690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7de54ac8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7de54ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de54ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7de54d80"/>
        <function-ref name="toggle" scoped="" ref="0x7de54e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7de53010"/>
        <function-ref name="get" scoped="" ref="0x7de530f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de531d0"/>
        <function-ref name="set" scoped="" ref="0x7de532b0"/>
        <function-ref name="clr" scoped="" ref="0x7de53390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7de527d0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7de527d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de529a8"/>
        <function-ref name="isInput" scoped="" ref="0x7de52a88"/>
        <function-ref name="toggle" scoped="" ref="0x7de52b68"/>
        <function-ref name="isOutput" scoped="" ref="0x7de52c48"/>
        <function-ref name="get" scoped="" ref="0x7de52d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de52e08"/>
        <function-ref name="set" scoped="" ref="0x7de52ee8"/>
        <function-ref name="clr" scoped="" ref="0x7de51010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cd28da8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cd28da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cd24010"/>
        <function-ref name="isInput" scoped="" ref="0x7cd240f0"/>
        <function-ref name="toggle" scoped="" ref="0x7cd241d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7cd242b0"/>
        <function-ref name="get" scoped="" ref="0x7cd24390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cd24470"/>
        <function-ref name="set" scoped="" ref="0x7cd24550"/>
        <function-ref name="clr" scoped="" ref="0x7cd24630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cd237f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cd237f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cd239d0"/>
        <function-ref name="isInput" scoped="" ref="0x7cd23ab0"/>
        <function-ref name="toggle" scoped="" ref="0x7cd23b90"/>
        <function-ref name="isOutput" scoped="" ref="0x7cd23c70"/>
        <function-ref name="get" scoped="" ref="0x7cd23d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cd23e30"/>
        <function-ref name="set" scoped="" ref="0x7cd23f10"/>
        <function-ref name="clr" scoped="" ref="0x7cd22010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cd21228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cd21228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cd21400"/>
        <function-ref name="isInput" scoped="" ref="0x7cd214e0"/>
        <function-ref name="toggle" scoped="" ref="0x7cd215c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7cd216a0"/>
        <function-ref name="get" scoped="" ref="0x7cd21780"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cd21860"/>
        <function-ref name="set" scoped="" ref="0x7cd21940"/>
        <function-ref name="clr" scoped="" ref="0x7cd21a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cd20c08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cd20c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cd20de0"/>
        <function-ref name="isInput" scoped="" ref="0x7cd20ec0"/>
        <function-ref name="toggle" scoped="" ref="0x7cd1f010"/>
        <function-ref name="isOutput" scoped="" ref="0x7cd1f0f0"/>
        <function-ref name="get" scoped="" ref="0x7cd1f1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cd1f2b0"/>
        <function-ref name="set" scoped="" ref="0x7cd1f390"/>
        <function-ref name="clr" scoped="" ref="0x7cd1f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cd1e6c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cd1e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cd1e898"/>
        <function-ref name="isInput" scoped="" ref="0x7cd1e978"/>
        <function-ref name="toggle" scoped="" ref="0x7cd1ea58"/>
        <function-ref name="isOutput" scoped="" ref="0x7cd1eb38"/>
        <function-ref name="get" scoped="" ref="0x7cd1ec18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cd1ecf8"/>
        <function-ref name="set" scoped="" ref="0x7cd1edd8"/>
        <function-ref name="clr" scoped="" ref="0x7cd1eeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cd1c0b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cd1c0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cd1c288"/>
        <function-ref name="isInput" scoped="" ref="0x7cd1c368"/>
        <function-ref name="toggle" scoped="" ref="0x7cd1c448"/>
        <function-ref name="isOutput" scoped="" ref="0x7cd1c528"/>
        <function-ref name="get" scoped="" ref="0x7cd1c608"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cd1c6e8"/>
        <function-ref name="set" scoped="" ref="0x7cd1c7c8"/>
        <function-ref name="clr" scoped="" ref="0x7cd1c8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cd1ba88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cd1ba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cd1bc60"/>
        <function-ref name="isInput" scoped="" ref="0x7cd1bd40"/>
        <function-ref name="toggle" scoped="" ref="0x7cd1be20"/>
        <function-ref name="isOutput" scoped="" ref="0x7cd1bf00"/>
        <function-ref name="get" scoped="" ref="0x7cd1a010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cd1a0f0"/>
        <function-ref name="set" scoped="" ref="0x7cd1a1d0"/>
        <function-ref name="clr" scoped="" ref="0x7cd1a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cd19538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cd19538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cd19710"/>
        <function-ref name="isInput" scoped="" ref="0x7cd197f0"/>
        <function-ref name="toggle" scoped="" ref="0x7cd198d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7cd199b0"/>
        <function-ref name="get" scoped="" ref="0x7cd19a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cd19b70"/>
        <function-ref name="set" scoped="" ref="0x7cd19c50"/>
        <function-ref name="clr" scoped="" ref="0x7cd19d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7de42f28" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7de42f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de41110"/>
        <function-ref name="isInput" scoped="" ref="0x7de411f0"/>
        <function-ref name="toggle" scoped="" ref="0x7de412d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7de413b0"/>
        <function-ref name="get" scoped="" ref="0x7de41490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de41570"/>
        <function-ref name="set" scoped="" ref="0x7de41650"/>
        <function-ref name="clr" scoped="" ref="0x7de41730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7de40ba8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7de40ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de40d80"/>
        <function-ref name="isInput" scoped="" ref="0x7de40e60"/>
        <function-ref name="toggle" scoped="" ref="0x7de34010"/>
        <function-ref name="isOutput" scoped="" ref="0x7de340f0"/>
        <function-ref name="get" scoped="" ref="0x7de341d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de342b0"/>
        <function-ref name="set" scoped="" ref="0x7de34390"/>
        <function-ref name="clr" scoped="" ref="0x7de34470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7de43bc0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7de43bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de43d98"/>
        <function-ref name="isInput" scoped="" ref="0x7de43e78"/>
        <function-ref name="toggle" scoped="" ref="0x7de42010"/>
        <function-ref name="isOutput" scoped="" ref="0x7de420f0"/>
        <function-ref name="get" scoped="" ref="0x7de421d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de422b0"/>
        <function-ref name="set" scoped="" ref="0x7de42390"/>
        <function-ref name="clr" scoped="" ref="0x7de42470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7de41890" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7de41890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de41a68"/>
        <function-ref name="isInput" scoped="" ref="0x7de41b48"/>
        <function-ref name="toggle" scoped="" ref="0x7de41c28"/>
        <function-ref name="isOutput" scoped="" ref="0x7de41d08"/>
        <function-ref name="get" scoped="" ref="0x7de41de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de41ec8"/>
        <function-ref name="set" scoped="" ref="0x7de40010"/>
        <function-ref name="clr" scoped="" ref="0x7de400f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7de345d0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7de345d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de347a8"/>
        <function-ref name="isInput" scoped="" ref="0x7de34888"/>
        <function-ref name="toggle" scoped="" ref="0x7de34968"/>
        <function-ref name="isOutput" scoped="" ref="0x7de34a48"/>
        <function-ref name="get" scoped="" ref="0x7de34b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de34c08"/>
        <function-ref name="set" scoped="" ref="0x7de34ce8"/>
        <function-ref name="clr" scoped="" ref="0x7de34dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7de425d0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7de425d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de427a8"/>
        <function-ref name="isInput" scoped="" ref="0x7de42888"/>
        <function-ref name="toggle" scoped="" ref="0x7de42968"/>
        <function-ref name="isOutput" scoped="" ref="0x7de42a48"/>
        <function-ref name="get" scoped="" ref="0x7de42b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de42c08"/>
        <function-ref name="set" scoped="" ref="0x7de42ce8"/>
        <function-ref name="clr" scoped="" ref="0x7de42dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7de40250" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7de40250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de40428"/>
        <function-ref name="isInput" scoped="" ref="0x7de40508"/>
        <function-ref name="toggle" scoped="" ref="0x7de405e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7de406c8"/>
        <function-ref name="get" scoped="" ref="0x7de407a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de40888"/>
        <function-ref name="set" scoped="" ref="0x7de40968"/>
        <function-ref name="clr" scoped="" ref="0x7de40a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7de34f28" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7de34f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de33110"/>
        <function-ref name="isInput" scoped="" ref="0x7de331f0"/>
        <function-ref name="toggle" scoped="" ref="0x7de332d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7de333b0"/>
        <function-ref name="get" scoped="" ref="0x7de33490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de33570"/>
        <function-ref name="set" scoped="" ref="0x7de33650"/>
        <function-ref name="clr" scoped="" ref="0x7de33730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cce52b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cce52b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cce5488"/>
        <function-ref name="isInput" scoped="" ref="0x7cce5568"/>
        <function-ref name="toggle" scoped="" ref="0x7cce5648"/>
        <function-ref name="isOutput" scoped="" ref="0x7cce5728"/>
        <function-ref name="get" scoped="" ref="0x7cce5808"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cce58e8"/>
        <function-ref name="set" scoped="" ref="0x7cce59c8"/>
        <function-ref name="clr" scoped="" ref="0x7cce5aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cce3c78" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cce3c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cce3e50"/>
        <function-ref name="isInput" scoped="" ref="0x7cce2010"/>
        <function-ref name="toggle" scoped="" ref="0x7cce20f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7cce21d0"/>
        <function-ref name="get" scoped="" ref="0x7cce22b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cce2390"/>
        <function-ref name="set" scoped="" ref="0x7cce2470"/>
        <function-ref name="clr" scoped="" ref="0x7cce2550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cce1718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cce1718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cce18f0"/>
        <function-ref name="isInput" scoped="" ref="0x7cce19d0"/>
        <function-ref name="toggle" scoped="" ref="0x7cce1ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x7cce1b90"/>
        <function-ref name="get" scoped="" ref="0x7cce1c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cce1d50"/>
        <function-ref name="set" scoped="" ref="0x7cce1e30"/>
        <function-ref name="clr" scoped="" ref="0x7cce1f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ccdf0f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ccdf0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ccdf2d0"/>
        <function-ref name="isInput" scoped="" ref="0x7ccdf3b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ccdf490"/>
        <function-ref name="isOutput" scoped="" ref="0x7ccdf570"/>
        <function-ref name="get" scoped="" ref="0x7ccdf650"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ccdf730"/>
        <function-ref name="set" scoped="" ref="0x7ccdf810"/>
        <function-ref name="clr" scoped="" ref="0x7ccdf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ccdeac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ccdeac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ccdeca0"/>
        <function-ref name="isInput" scoped="" ref="0x7ccded80"/>
        <function-ref name="toggle" scoped="" ref="0x7ccdee60"/>
        <function-ref name="isOutput" scoped="" ref="0x7ccdd010"/>
        <function-ref name="get" scoped="" ref="0x7ccdd0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ccdd1d0"/>
        <function-ref name="set" scoped="" ref="0x7ccdd2b0"/>
        <function-ref name="clr" scoped="" ref="0x7ccdd390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ccdc570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ccdc570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ccdc748"/>
        <function-ref name="isInput" scoped="" ref="0x7ccdc828"/>
        <function-ref name="toggle" scoped="" ref="0x7ccdc908"/>
        <function-ref name="isOutput" scoped="" ref="0x7ccdc9e8"/>
        <function-ref name="get" scoped="" ref="0x7ccdcac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ccdcba8"/>
        <function-ref name="set" scoped="" ref="0x7ccdcc88"/>
        <function-ref name="clr" scoped="" ref="0x7ccdcd68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ccda010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ccda010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ccda1e8"/>
        <function-ref name="isInput" scoped="" ref="0x7ccda2c8"/>
        <function-ref name="toggle" scoped="" ref="0x7ccda3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ccda488"/>
        <function-ref name="get" scoped="" ref="0x7ccda568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ccda648"/>
        <function-ref name="set" scoped="" ref="0x7ccda728"/>
        <function-ref name="clr" scoped="" ref="0x7ccda808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ccd99e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ccd99e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ccd9bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7ccd9ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7ccd9d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7ccd9e60"/>
        <function-ref name="get" scoped="" ref="0x7ccd8010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ccd80f0"/>
        <function-ref name="set" scoped="" ref="0x7ccd81d0"/>
        <function-ref name="clr" scoped="" ref="0x7ccd82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7de235d0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7de235d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de237a8"/>
        <function-ref name="isInput" scoped="" ref="0x7de23888"/>
        <function-ref name="toggle" scoped="" ref="0x7de23968"/>
        <function-ref name="isOutput" scoped="" ref="0x7de23a48"/>
        <function-ref name="get" scoped="" ref="0x7de23b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de23c08"/>
        <function-ref name="set" scoped="" ref="0x7de23ce8"/>
        <function-ref name="clr" scoped="" ref="0x7de23dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7de21250" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7de21250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de21428"/>
        <function-ref name="isInput" scoped="" ref="0x7de21508"/>
        <function-ref name="toggle" scoped="" ref="0x7de215e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7de216c8"/>
        <function-ref name="get" scoped="" ref="0x7de217a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de21888"/>
        <function-ref name="set" scoped="" ref="0x7de21968"/>
        <function-ref name="clr" scoped="" ref="0x7de21a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7de242a0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7de242a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de24478"/>
        <function-ref name="isInput" scoped="" ref="0x7de24558"/>
        <function-ref name="toggle" scoped="" ref="0x7de24638"/>
        <function-ref name="isOutput" scoped="" ref="0x7de24718"/>
        <function-ref name="get" scoped="" ref="0x7de247f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de248d8"/>
        <function-ref name="set" scoped="" ref="0x7de249b8"/>
        <function-ref name="clr" scoped="" ref="0x7de24a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7de23f28" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7de23f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de22110"/>
        <function-ref name="isInput" scoped="" ref="0x7de221f0"/>
        <function-ref name="toggle" scoped="" ref="0x7de222d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7de223b0"/>
        <function-ref name="get" scoped="" ref="0x7de22490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de22570"/>
        <function-ref name="set" scoped="" ref="0x7de22650"/>
        <function-ref name="clr" scoped="" ref="0x7de22730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7de21ba8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7de21ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de21d80"/>
        <function-ref name="isInput" scoped="" ref="0x7de21e60"/>
        <function-ref name="toggle" scoped="" ref="0x7de20010"/>
        <function-ref name="isOutput" scoped="" ref="0x7de200f0"/>
        <function-ref name="get" scoped="" ref="0x7de201d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de202b0"/>
        <function-ref name="set" scoped="" ref="0x7de20390"/>
        <function-ref name="clr" scoped="" ref="0x7de20470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7de24bf8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7de24bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de24dd0"/>
        <function-ref name="isInput" scoped="" ref="0x7de24eb0"/>
        <function-ref name="toggle" scoped="" ref="0x7de23010"/>
        <function-ref name="isOutput" scoped="" ref="0x7de230f0"/>
        <function-ref name="get" scoped="" ref="0x7de231d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de232b0"/>
        <function-ref name="set" scoped="" ref="0x7de23390"/>
        <function-ref name="clr" scoped="" ref="0x7de23470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7de22890" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7de22890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de22a68"/>
        <function-ref name="isInput" scoped="" ref="0x7de22b48"/>
        <function-ref name="toggle" scoped="" ref="0x7de22c28"/>
        <function-ref name="isOutput" scoped="" ref="0x7de22d08"/>
        <function-ref name="get" scoped="" ref="0x7de22de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de22ec8"/>
        <function-ref name="set" scoped="" ref="0x7de21010"/>
        <function-ref name="clr" scoped="" ref="0x7de210f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7de205d0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7de205d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de207a8"/>
        <function-ref name="isInput" scoped="" ref="0x7de20888"/>
        <function-ref name="toggle" scoped="" ref="0x7de20968"/>
        <function-ref name="isOutput" scoped="" ref="0x7de20a48"/>
        <function-ref name="get" scoped="" ref="0x7de20b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de20c08"/>
        <function-ref name="set" scoped="" ref="0x7de20ce8"/>
        <function-ref name="clr" scoped="" ref="0x7de20dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cca57f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cca57f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cca59d0"/>
        <function-ref name="isInput" scoped="" ref="0x7cca5ab0"/>
        <function-ref name="toggle" scoped="" ref="0x7cca5b90"/>
        <function-ref name="isOutput" scoped="" ref="0x7cca5c70"/>
        <function-ref name="get" scoped="" ref="0x7cca5d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cca5e30"/>
        <function-ref name="set" scoped="" ref="0x7cca5f10"/>
        <function-ref name="clr" scoped="" ref="0x7cca4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cca3228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cca3228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cca3400"/>
        <function-ref name="isInput" scoped="" ref="0x7cca34e0"/>
        <function-ref name="toggle" scoped="" ref="0x7cca35c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7cca36a0"/>
        <function-ref name="get" scoped="" ref="0x7cca3780"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cca3860"/>
        <function-ref name="set" scoped="" ref="0x7cca3940"/>
        <function-ref name="clr" scoped="" ref="0x7cca3a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cca2c08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cca2c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cca2de0"/>
        <function-ref name="isInput" scoped="" ref="0x7cca2ec0"/>
        <function-ref name="toggle" scoped="" ref="0x7cca1010"/>
        <function-ref name="isOutput" scoped="" ref="0x7cca10f0"/>
        <function-ref name="get" scoped="" ref="0x7cca11d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cca12b0"/>
        <function-ref name="set" scoped="" ref="0x7cca1390"/>
        <function-ref name="clr" scoped="" ref="0x7cca1470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cca06c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cca06c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cca0898"/>
        <function-ref name="isInput" scoped="" ref="0x7cca0978"/>
        <function-ref name="toggle" scoped="" ref="0x7cca0a58"/>
        <function-ref name="isOutput" scoped="" ref="0x7cca0b38"/>
        <function-ref name="get" scoped="" ref="0x7cca0c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cca0cf8"/>
        <function-ref name="set" scoped="" ref="0x7cca0dd8"/>
        <function-ref name="clr" scoped="" ref="0x7cca0eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cc9e0b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cc9e0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cc9e288"/>
        <function-ref name="isInput" scoped="" ref="0x7cc9e368"/>
        <function-ref name="toggle" scoped="" ref="0x7cc9e448"/>
        <function-ref name="isOutput" scoped="" ref="0x7cc9e528"/>
        <function-ref name="get" scoped="" ref="0x7cc9e608"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cc9e6e8"/>
        <function-ref name="set" scoped="" ref="0x7cc9e7c8"/>
        <function-ref name="clr" scoped="" ref="0x7cc9e8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cc9da88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cc9da88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cc9dc60"/>
        <function-ref name="isInput" scoped="" ref="0x7cc9dd40"/>
        <function-ref name="toggle" scoped="" ref="0x7cc9de20"/>
        <function-ref name="isOutput" scoped="" ref="0x7cc9df00"/>
        <function-ref name="get" scoped="" ref="0x7cc9c010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cc9c0f0"/>
        <function-ref name="set" scoped="" ref="0x7cc9c1d0"/>
        <function-ref name="clr" scoped="" ref="0x7cc9c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cc9b538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cc9b538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cc9b710"/>
        <function-ref name="isInput" scoped="" ref="0x7cc9b7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7cc9b8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7cc9b9b0"/>
        <function-ref name="get" scoped="" ref="0x7cc9ba90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cc9bb70"/>
        <function-ref name="set" scoped="" ref="0x7cc9bc50"/>
        <function-ref name="clr" scoped="" ref="0x7cc9bd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cc98010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cc98010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cc981e8"/>
        <function-ref name="isInput" scoped="" ref="0x7cc982c8"/>
        <function-ref name="toggle" scoped="" ref="0x7cc983a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7cc98488"/>
        <function-ref name="get" scoped="" ref="0x7cc98568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cc98648"/>
        <function-ref name="set" scoped="" ref="0x7cc98728"/>
        <function-ref name="clr" scoped="" ref="0x7cc98808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7de11c88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7de11c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de11e60"/>
        <function-ref name="isInput" scoped="" ref="0x7de04010"/>
        <function-ref name="toggle" scoped="" ref="0x7de040f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7de041d0"/>
        <function-ref name="get" scoped="" ref="0x7de042b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de04390"/>
        <function-ref name="set" scoped="" ref="0x7de04470"/>
        <function-ref name="clr" scoped="" ref="0x7de04550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7de03988" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7de03988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de03b60"/>
        <function-ref name="isInput" scoped="" ref="0x7de03c40"/>
        <function-ref name="toggle" scoped="" ref="0x7de03d20"/>
        <function-ref name="isOutput" scoped="" ref="0x7de03e00"/>
        <function-ref name="get" scoped="" ref="0x7de03ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de02010"/>
        <function-ref name="set" scoped="" ref="0x7de020f0"/>
        <function-ref name="clr" scoped="" ref="0x7de021d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7de129c0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7de129c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de12b98"/>
        <function-ref name="isInput" scoped="" ref="0x7de12c78"/>
        <function-ref name="toggle" scoped="" ref="0x7de12d58"/>
        <function-ref name="isOutput" scoped="" ref="0x7de12e38"/>
        <function-ref name="get" scoped="" ref="0x7de12f18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de11010"/>
        <function-ref name="set" scoped="" ref="0x7de110f0"/>
        <function-ref name="clr" scoped="" ref="0x7de111d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7de046b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7de046b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de04888"/>
        <function-ref name="isInput" scoped="" ref="0x7de04968"/>
        <function-ref name="toggle" scoped="" ref="0x7de04a48"/>
        <function-ref name="isOutput" scoped="" ref="0x7de04b28"/>
        <function-ref name="get" scoped="" ref="0x7de04c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de04ce8"/>
        <function-ref name="set" scoped="" ref="0x7de04dc8"/>
        <function-ref name="clr" scoped="" ref="0x7de04ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7de02330" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7de02330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de02508"/>
        <function-ref name="isInput" scoped="" ref="0x7de025e8"/>
        <function-ref name="toggle" scoped="" ref="0x7de026c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7de027a8"/>
        <function-ref name="get" scoped="" ref="0x7de02888"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de02968"/>
        <function-ref name="set" scoped="" ref="0x7de02a48"/>
        <function-ref name="clr" scoped="" ref="0x7de02b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7de11330" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7de11330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de11508"/>
        <function-ref name="isInput" scoped="" ref="0x7de115e8"/>
        <function-ref name="toggle" scoped="" ref="0x7de116c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7de117a8"/>
        <function-ref name="get" scoped="" ref="0x7de11888"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de11968"/>
        <function-ref name="set" scoped="" ref="0x7de11a48"/>
        <function-ref name="clr" scoped="" ref="0x7de11b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7de03030" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7de03030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de03208"/>
        <function-ref name="isInput" scoped="" ref="0x7de032e8"/>
        <function-ref name="toggle" scoped="" ref="0x7de033c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7de034a8"/>
        <function-ref name="get" scoped="" ref="0x7de03588"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de03668"/>
        <function-ref name="set" scoped="" ref="0x7de03748"/>
        <function-ref name="clr" scoped="" ref="0x7de03828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7de02c88" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7de02c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de02e60"/>
        <function-ref name="isInput" scoped="" ref="0x7de01010"/>
        <function-ref name="toggle" scoped="" ref="0x7de010f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7de011d0"/>
        <function-ref name="get" scoped="" ref="0x7de012b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de01390"/>
        <function-ref name="set" scoped="" ref="0x7de01470"/>
        <function-ref name="clr" scoped="" ref="0x7de01550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cc68d08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cc68d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cc68ee0"/>
        <function-ref name="isInput" scoped="" ref="0x7cc65010"/>
        <function-ref name="toggle" scoped="" ref="0x7cc650f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7cc651d0"/>
        <function-ref name="get" scoped="" ref="0x7cc652b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cc65390"/>
        <function-ref name="set" scoped="" ref="0x7cc65470"/>
        <function-ref name="clr" scoped="" ref="0x7cc65550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cc64718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cc64718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cc648f0"/>
        <function-ref name="isInput" scoped="" ref="0x7cc649d0"/>
        <function-ref name="toggle" scoped="" ref="0x7cc64ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x7cc64b90"/>
        <function-ref name="get" scoped="" ref="0x7cc64c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cc64d50"/>
        <function-ref name="set" scoped="" ref="0x7cc64e30"/>
        <function-ref name="clr" scoped="" ref="0x7cc64f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cc620f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cc620f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cc622d0"/>
        <function-ref name="isInput" scoped="" ref="0x7cc623b0"/>
        <function-ref name="toggle" scoped="" ref="0x7cc62490"/>
        <function-ref name="isOutput" scoped="" ref="0x7cc62570"/>
        <function-ref name="get" scoped="" ref="0x7cc62650"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cc62730"/>
        <function-ref name="set" scoped="" ref="0x7cc62810"/>
        <function-ref name="clr" scoped="" ref="0x7cc628f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cc61ac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cc61ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cc61ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7cc61d80"/>
        <function-ref name="toggle" scoped="" ref="0x7cc61e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7cc60010"/>
        <function-ref name="get" scoped="" ref="0x7cc600f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cc601d0"/>
        <function-ref name="set" scoped="" ref="0x7cc602b0"/>
        <function-ref name="clr" scoped="" ref="0x7cc60390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cc5f570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cc5f570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cc5f748"/>
        <function-ref name="isInput" scoped="" ref="0x7cc5f828"/>
        <function-ref name="toggle" scoped="" ref="0x7cc5f908"/>
        <function-ref name="isOutput" scoped="" ref="0x7cc5f9e8"/>
        <function-ref name="get" scoped="" ref="0x7cc5fac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cc5fba8"/>
        <function-ref name="set" scoped="" ref="0x7cc5fc88"/>
        <function-ref name="clr" scoped="" ref="0x7cc5fd68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cc5d010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cc5d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cc5d1e8"/>
        <function-ref name="isInput" scoped="" ref="0x7cc5d2c8"/>
        <function-ref name="toggle" scoped="" ref="0x7cc5d3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7cc5d488"/>
        <function-ref name="get" scoped="" ref="0x7cc5d568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cc5d648"/>
        <function-ref name="set" scoped="" ref="0x7cc5d728"/>
        <function-ref name="clr" scoped="" ref="0x7cc5d808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cc5c9e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cc5c9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cc5cbc0"/>
        <function-ref name="isInput" scoped="" ref="0x7cc5cca0"/>
        <function-ref name="toggle" scoped="" ref="0x7cc5cd80"/>
        <function-ref name="isOutput" scoped="" ref="0x7cc5ce60"/>
        <function-ref name="get" scoped="" ref="0x7cc5b010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cc5b0f0"/>
        <function-ref name="set" scoped="" ref="0x7cc5b1d0"/>
        <function-ref name="clr" scoped="" ref="0x7cc5b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cc5a538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cc5a538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cc5a710"/>
        <function-ref name="isInput" scoped="" ref="0x7cc5a7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7cc5a8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7cc5a9b0"/>
        <function-ref name="get" scoped="" ref="0x7cc5aa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cc5ab70"/>
        <function-ref name="set" scoped="" ref="0x7cc5ac50"/>
        <function-ref name="clr" scoped="" ref="0x7cc5ad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7ddf2410" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7ddf2410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ddf25e8"/>
        <function-ref name="isInput" scoped="" ref="0x7ddf26c8"/>
        <function-ref name="toggle" scoped="" ref="0x7ddf27a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ddf2888"/>
        <function-ref name="get" scoped="" ref="0x7ddf2968"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ddf2a48"/>
        <function-ref name="set" scoped="" ref="0x7ddf2b28"/>
        <function-ref name="clr" scoped="" ref="0x7ddf2c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7ddf0170" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7ddf0170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ddf0348"/>
        <function-ref name="isInput" scoped="" ref="0x7ddf0428"/>
        <function-ref name="toggle" scoped="" ref="0x7ddf0508"/>
        <function-ref name="isOutput" scoped="" ref="0x7ddf05e8"/>
        <function-ref name="get" scoped="" ref="0x7ddf06c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ddf07a8"/>
        <function-ref name="set" scoped="" ref="0x7ddf0888"/>
        <function-ref name="clr" scoped="" ref="0x7ddf0968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7ddf30c0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7ddf30c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ddf3298"/>
        <function-ref name="isInput" scoped="" ref="0x7ddf3378"/>
        <function-ref name="toggle" scoped="" ref="0x7ddf3458"/>
        <function-ref name="isOutput" scoped="" ref="0x7ddf3538"/>
        <function-ref name="get" scoped="" ref="0x7ddf3618"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ddf36f8"/>
        <function-ref name="set" scoped="" ref="0x7ddf37d8"/>
        <function-ref name="clr" scoped="" ref="0x7ddf38b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7ddf2d68" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7ddf2d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ddf1010"/>
        <function-ref name="isInput" scoped="" ref="0x7ddf10f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ddf11d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ddf12b0"/>
        <function-ref name="get" scoped="" ref="0x7ddf1390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ddf1470"/>
        <function-ref name="set" scoped="" ref="0x7ddf1550"/>
        <function-ref name="clr" scoped="" ref="0x7ddf1630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7ddf0ac8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7ddf0ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ddf0ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7ddf0d80"/>
        <function-ref name="toggle" scoped="" ref="0x7ddf0e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7dde3010"/>
        <function-ref name="get" scoped="" ref="0x7dde30f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dde31d0"/>
        <function-ref name="set" scoped="" ref="0x7dde32b0"/>
        <function-ref name="clr" scoped="" ref="0x7dde3390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7ddf3a18" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7ddf3a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ddf3bf0"/>
        <function-ref name="isInput" scoped="" ref="0x7ddf3cd0"/>
        <function-ref name="toggle" scoped="" ref="0x7ddf3db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ddf3e90"/>
        <function-ref name="get" scoped="" ref="0x7ddf2010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ddf20f0"/>
        <function-ref name="set" scoped="" ref="0x7ddf21d0"/>
        <function-ref name="clr" scoped="" ref="0x7ddf22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7ddf1790" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7ddf1790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ddf1968"/>
        <function-ref name="isInput" scoped="" ref="0x7ddf1a48"/>
        <function-ref name="toggle" scoped="" ref="0x7ddf1b28"/>
        <function-ref name="isOutput" scoped="" ref="0x7ddf1c08"/>
        <function-ref name="get" scoped="" ref="0x7ddf1ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ddf1dc8"/>
        <function-ref name="set" scoped="" ref="0x7ddf1ea8"/>
        <function-ref name="clr" scoped="" ref="0x7ddf0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7dde34f0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7dde34f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dde36c8"/>
        <function-ref name="isInput" scoped="" ref="0x7dde37a8"/>
        <function-ref name="toggle" scoped="" ref="0x7dde3888"/>
        <function-ref name="isOutput" scoped="" ref="0x7dde3968"/>
        <function-ref name="get" scoped="" ref="0x7dde3a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dde3b28"/>
        <function-ref name="set" scoped="" ref="0x7dde3c08"/>
        <function-ref name="clr" scoped="" ref="0x7dde3ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cc282b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cc282b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cc28488"/>
        <function-ref name="isInput" scoped="" ref="0x7cc28568"/>
        <function-ref name="toggle" scoped="" ref="0x7cc28648"/>
        <function-ref name="isOutput" scoped="" ref="0x7cc28728"/>
        <function-ref name="get" scoped="" ref="0x7cc28808"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cc288e8"/>
        <function-ref name="set" scoped="" ref="0x7cc289c8"/>
        <function-ref name="clr" scoped="" ref="0x7cc28aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cc26c78" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cc26c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cc26e50"/>
        <function-ref name="isInput" scoped="" ref="0x7cc25010"/>
        <function-ref name="toggle" scoped="" ref="0x7cc250f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7cc251d0"/>
        <function-ref name="get" scoped="" ref="0x7cc252b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cc25390"/>
        <function-ref name="set" scoped="" ref="0x7cc25470"/>
        <function-ref name="clr" scoped="" ref="0x7cc25550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cc24718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cc24718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cc248f0"/>
        <function-ref name="isInput" scoped="" ref="0x7cc249d0"/>
        <function-ref name="toggle" scoped="" ref="0x7cc24ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x7cc24b90"/>
        <function-ref name="get" scoped="" ref="0x7cc24c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cc24d50"/>
        <function-ref name="set" scoped="" ref="0x7cc24e30"/>
        <function-ref name="clr" scoped="" ref="0x7cc24f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cc220f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cc220f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cc222d0"/>
        <function-ref name="isInput" scoped="" ref="0x7cc223b0"/>
        <function-ref name="toggle" scoped="" ref="0x7cc22490"/>
        <function-ref name="isOutput" scoped="" ref="0x7cc22570"/>
        <function-ref name="get" scoped="" ref="0x7cc22650"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cc22730"/>
        <function-ref name="set" scoped="" ref="0x7cc22810"/>
        <function-ref name="clr" scoped="" ref="0x7cc228f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cc21ac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cc21ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cc21ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7cc21d80"/>
        <function-ref name="toggle" scoped="" ref="0x7cc21e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7cc20010"/>
        <function-ref name="get" scoped="" ref="0x7cc200f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cc201d0"/>
        <function-ref name="set" scoped="" ref="0x7cc202b0"/>
        <function-ref name="clr" scoped="" ref="0x7cc20390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cc1f570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cc1f570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cc1f748"/>
        <function-ref name="isInput" scoped="" ref="0x7cc1f828"/>
        <function-ref name="toggle" scoped="" ref="0x7cc1f908"/>
        <function-ref name="isOutput" scoped="" ref="0x7cc1f9e8"/>
        <function-ref name="get" scoped="" ref="0x7cc1fac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cc1fba8"/>
        <function-ref name="set" scoped="" ref="0x7cc1fc88"/>
        <function-ref name="clr" scoped="" ref="0x7cc1fd68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cc1d010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cc1d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cc1d1e8"/>
        <function-ref name="isInput" scoped="" ref="0x7cc1d2c8"/>
        <function-ref name="toggle" scoped="" ref="0x7cc1d3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7cc1d488"/>
        <function-ref name="get" scoped="" ref="0x7cc1d568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cc1d648"/>
        <function-ref name="set" scoped="" ref="0x7cc1d728"/>
        <function-ref name="clr" scoped="" ref="0x7cc1d808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cc1c9e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cc1c9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cc1cbc0"/>
        <function-ref name="isInput" scoped="" ref="0x7cc1cca0"/>
        <function-ref name="toggle" scoped="" ref="0x7cc1cd80"/>
        <function-ref name="isOutput" scoped="" ref="0x7cc1ce60"/>
        <function-ref name="get" scoped="" ref="0x7cc1b010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cc1b0f0"/>
        <function-ref name="set" scoped="" ref="0x7cc1b1d0"/>
        <function-ref name="clr" scoped="" ref="0x7cc1b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7ddd49e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7ddd49e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ddd4bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7ddd4ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7ddd4d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7ddd4e60"/>
        <function-ref name="get" scoped="" ref="0x7ddd3010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ddd30f0"/>
        <function-ref name="set" scoped="" ref="0x7ddd31d0"/>
        <function-ref name="clr" scoped="" ref="0x7ddd32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7ddd2790" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7ddd2790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ddd2968"/>
        <function-ref name="isInput" scoped="" ref="0x7ddd2a48"/>
        <function-ref name="toggle" scoped="" ref="0x7ddd2b28"/>
        <function-ref name="isOutput" scoped="" ref="0x7ddd2c08"/>
        <function-ref name="get" scoped="" ref="0x7ddd2ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ddd2dc8"/>
        <function-ref name="set" scoped="" ref="0x7ddd2ea8"/>
        <function-ref name="clr" scoped="" ref="0x7ddd1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7dde06f8" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7dde06f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dde08d0"/>
        <function-ref name="isInput" scoped="" ref="0x7dde09b0"/>
        <function-ref name="toggle" scoped="" ref="0x7dde0a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7dde0b70"/>
        <function-ref name="get" scoped="" ref="0x7dde0c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dde0d30"/>
        <function-ref name="set" scoped="" ref="0x7dde0e10"/>
        <function-ref name="clr" scoped="" ref="0x7dde0ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7ddd3410" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7ddd3410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ddd35e8"/>
        <function-ref name="isInput" scoped="" ref="0x7ddd36c8"/>
        <function-ref name="toggle" scoped="" ref="0x7ddd37a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ddd3888"/>
        <function-ref name="get" scoped="" ref="0x7ddd3968"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ddd3a48"/>
        <function-ref name="set" scoped="" ref="0x7ddd3b28"/>
        <function-ref name="clr" scoped="" ref="0x7ddd3c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7ddd1170" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7ddd1170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ddd1348"/>
        <function-ref name="isInput" scoped="" ref="0x7ddd1428"/>
        <function-ref name="toggle" scoped="" ref="0x7ddd1508"/>
        <function-ref name="isOutput" scoped="" ref="0x7ddd15e8"/>
        <function-ref name="get" scoped="" ref="0x7ddd16c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ddd17a8"/>
        <function-ref name="set" scoped="" ref="0x7ddd1888"/>
        <function-ref name="clr" scoped="" ref="0x7ddd1968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7ddd4090" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7ddd4090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ddd4268"/>
        <function-ref name="isInput" scoped="" ref="0x7ddd4348"/>
        <function-ref name="toggle" scoped="" ref="0x7ddd4428"/>
        <function-ref name="isOutput" scoped="" ref="0x7ddd4508"/>
        <function-ref name="get" scoped="" ref="0x7ddd45e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ddd46c8"/>
        <function-ref name="set" scoped="" ref="0x7ddd47a8"/>
        <function-ref name="clr" scoped="" ref="0x7ddd4888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7ddd3d68" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7ddd3d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ddd2010"/>
        <function-ref name="isInput" scoped="" ref="0x7ddd20f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ddd21d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ddd22b0"/>
        <function-ref name="get" scoped="" ref="0x7ddd2390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ddd2470"/>
        <function-ref name="set" scoped="" ref="0x7ddd2550"/>
        <function-ref name="clr" scoped="" ref="0x7ddd2630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7ddd1ac8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7ddd1ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ddd1ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7ddd1d80"/>
        <function-ref name="toggle" scoped="" ref="0x7ddd1e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7ddd0010"/>
        <function-ref name="get" scoped="" ref="0x7ddd00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ddd01d0"/>
        <function-ref name="set" scoped="" ref="0x7ddd02b0"/>
        <function-ref name="clr" scoped="" ref="0x7ddd0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cbeb7f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cbeb7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cbeb9d0"/>
        <function-ref name="isInput" scoped="" ref="0x7cbebab0"/>
        <function-ref name="toggle" scoped="" ref="0x7cbebb90"/>
        <function-ref name="isOutput" scoped="" ref="0x7cbebc70"/>
        <function-ref name="get" scoped="" ref="0x7cbebd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cbebe30"/>
        <function-ref name="set" scoped="" ref="0x7cbebf10"/>
        <function-ref name="clr" scoped="" ref="0x7cbea010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cbe9228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cbe9228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cbe9400"/>
        <function-ref name="isInput" scoped="" ref="0x7cbe94e0"/>
        <function-ref name="toggle" scoped="" ref="0x7cbe95c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7cbe96a0"/>
        <function-ref name="get" scoped="" ref="0x7cbe9780"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cbe9860"/>
        <function-ref name="set" scoped="" ref="0x7cbe9940"/>
        <function-ref name="clr" scoped="" ref="0x7cbe9a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cbe8c08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cbe8c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cbe8de0"/>
        <function-ref name="isInput" scoped="" ref="0x7cbe8ec0"/>
        <function-ref name="toggle" scoped="" ref="0x7cbe7010"/>
        <function-ref name="isOutput" scoped="" ref="0x7cbe70f0"/>
        <function-ref name="get" scoped="" ref="0x7cbe71d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cbe72b0"/>
        <function-ref name="set" scoped="" ref="0x7cbe7390"/>
        <function-ref name="clr" scoped="" ref="0x7cbe7470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cbe66c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cbe66c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cbe6898"/>
        <function-ref name="isInput" scoped="" ref="0x7cbe6978"/>
        <function-ref name="toggle" scoped="" ref="0x7cbe6a58"/>
        <function-ref name="isOutput" scoped="" ref="0x7cbe6b38"/>
        <function-ref name="get" scoped="" ref="0x7cbe6c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cbe6cf8"/>
        <function-ref name="set" scoped="" ref="0x7cbe6dd8"/>
        <function-ref name="clr" scoped="" ref="0x7cbe6eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cbe40b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cbe40b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cbe4288"/>
        <function-ref name="isInput" scoped="" ref="0x7cbe4368"/>
        <function-ref name="toggle" scoped="" ref="0x7cbe4448"/>
        <function-ref name="isOutput" scoped="" ref="0x7cbe4528"/>
        <function-ref name="get" scoped="" ref="0x7cbe4608"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cbe46e8"/>
        <function-ref name="set" scoped="" ref="0x7cbe47c8"/>
        <function-ref name="clr" scoped="" ref="0x7cbe48a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cbe3a88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cbe3a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cbe3c60"/>
        <function-ref name="isInput" scoped="" ref="0x7cbe3d40"/>
        <function-ref name="toggle" scoped="" ref="0x7cbe3e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7cbe3f00"/>
        <function-ref name="get" scoped="" ref="0x7cbe2010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cbe20f0"/>
        <function-ref name="set" scoped="" ref="0x7cbe21d0"/>
        <function-ref name="clr" scoped="" ref="0x7cbe22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cbe1538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cbe1538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cbe1710"/>
        <function-ref name="isInput" scoped="" ref="0x7cbe17f0"/>
        <function-ref name="toggle" scoped="" ref="0x7cbe18d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7cbe19b0"/>
        <function-ref name="get" scoped="" ref="0x7cbe1a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cbe1b70"/>
        <function-ref name="set" scoped="" ref="0x7cbe1c50"/>
        <function-ref name="clr" scoped="" ref="0x7cbe1d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cbde010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cbde010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cbde1e8"/>
        <function-ref name="isInput" scoped="" ref="0x7cbde2c8"/>
        <function-ref name="toggle" scoped="" ref="0x7cbde3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7cbde488"/>
        <function-ref name="get" scoped="" ref="0x7cbde568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cbde648"/>
        <function-ref name="set" scoped="" ref="0x7cbde728"/>
        <function-ref name="clr" scoped="" ref="0x7cbde808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ddc0228" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ddc0228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ddc0400"/>
        <function-ref name="isInput" scoped="" ref="0x7ddc04e0"/>
        <function-ref name="toggle" scoped="" ref="0x7ddc05c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ddc06a0"/>
        <function-ref name="get" scoped="" ref="0x7ddc0780"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ddc0860"/>
        <function-ref name="set" scoped="" ref="0x7ddc0940"/>
        <function-ref name="clr" scoped="" ref="0x7ddc0a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd925e8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd925e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd927c0"/>
        <function-ref name="isInput" scoped="" ref="0x7dd928a0"/>
        <function-ref name="toggle" scoped="" ref="0x7dd92980"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd92a60"/>
        <function-ref name="get" scoped="" ref="0x7dd92b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd92c20"/>
        <function-ref name="set" scoped="" ref="0x7dd92d00"/>
        <function-ref name="clr" scoped="" ref="0x7dd92de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd90a90" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd90a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd90c68"/>
        <function-ref name="isInput" scoped="" ref="0x7dd90d48"/>
        <function-ref name="toggle" scoped="" ref="0x7dd90e28"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd90f08"/>
        <function-ref name="get" scoped="" ref="0x7dd84010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd840f0"/>
        <function-ref name="set" scoped="" ref="0x7dd841d0"/>
        <function-ref name="clr" scoped="" ref="0x7dd842b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd82e60" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd82e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd81050"/>
        <function-ref name="isInput" scoped="" ref="0x7dd81130"/>
        <function-ref name="toggle" scoped="" ref="0x7dd81210"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd812f0"/>
        <function-ref name="get" scoped="" ref="0x7dd813d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd814b0"/>
        <function-ref name="set" scoped="" ref="0x7dd81590"/>
        <function-ref name="clr" scoped="" ref="0x7dd81670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd74228" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd74228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd74400"/>
        <function-ref name="isInput" scoped="" ref="0x7dd744e0"/>
        <function-ref name="toggle" scoped="" ref="0x7dd745c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd746a0"/>
        <function-ref name="get" scoped="" ref="0x7dd74780"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd74860"/>
        <function-ref name="set" scoped="" ref="0x7dd74940"/>
        <function-ref name="clr" scoped="" ref="0x7dd74a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd725e8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd725e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd727c0"/>
        <function-ref name="isInput" scoped="" ref="0x7dd728a0"/>
        <function-ref name="toggle" scoped="" ref="0x7dd72980"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd72a60"/>
        <function-ref name="get" scoped="" ref="0x7dd72b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd72c20"/>
        <function-ref name="set" scoped="" ref="0x7dd72d00"/>
        <function-ref name="clr" scoped="" ref="0x7dd72de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd64b10" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd64b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd64ce8"/>
        <function-ref name="isInput" scoped="" ref="0x7dd64dc8"/>
        <function-ref name="toggle" scoped="" ref="0x7dd64ea8"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd63010"/>
        <function-ref name="get" scoped="" ref="0x7dd630f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd631d0"/>
        <function-ref name="set" scoped="" ref="0x7dd632b0"/>
        <function-ref name="clr" scoped="" ref="0x7dd63390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd61010" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd61010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd611e8"/>
        <function-ref name="isInput" scoped="" ref="0x7dd612c8"/>
        <function-ref name="toggle" scoped="" ref="0x7dd613a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd61488"/>
        <function-ref name="get" scoped="" ref="0x7dd61568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd61648"/>
        <function-ref name="set" scoped="" ref="0x7dd61728"/>
        <function-ref name="clr" scoped="" ref="0x7dd61808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd532d8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd532d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd534b0"/>
        <function-ref name="isInput" scoped="" ref="0x7dd53590"/>
        <function-ref name="toggle" scoped="" ref="0x7dd53670"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd53750"/>
        <function-ref name="get" scoped="" ref="0x7dd53830"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd53910"/>
        <function-ref name="set" scoped="" ref="0x7dd539f0"/>
        <function-ref name="clr" scoped="" ref="0x7dd53ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd51590" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd51590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd51768"/>
        <function-ref name="isInput" scoped="" ref="0x7dd51848"/>
        <function-ref name="toggle" scoped="" ref="0x7dd51928"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd51a08"/>
        <function-ref name="get" scoped="" ref="0x7dd51ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd51bc8"/>
        <function-ref name="set" scoped="" ref="0x7dd51ca8"/>
        <function-ref name="clr" scoped="" ref="0x7dd51d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd44880" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd44880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd44a58"/>
        <function-ref name="isInput" scoped="" ref="0x7dd44b38"/>
        <function-ref name="toggle" scoped="" ref="0x7dd44c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd44cf8"/>
        <function-ref name="get" scoped="" ref="0x7dd44dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd44eb8"/>
        <function-ref name="set" scoped="" ref="0x7dd42010"/>
        <function-ref name="clr" scoped="" ref="0x7dd420f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd41bc0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd41bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd41d98"/>
        <function-ref name="isInput" scoped="" ref="0x7dd41e78"/>
        <function-ref name="toggle" scoped="" ref="0x7dd40010"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd400f0"/>
        <function-ref name="get" scoped="" ref="0x7dd401d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd402b0"/>
        <function-ref name="set" scoped="" ref="0x7dd40390"/>
        <function-ref name="clr" scoped="" ref="0x7dd40470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd35f20" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd35f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd34110"/>
        <function-ref name="isInput" scoped="" ref="0x7dd341f0"/>
        <function-ref name="toggle" scoped="" ref="0x7dd342d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd343b0"/>
        <function-ref name="get" scoped="" ref="0x7dd34490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd34570"/>
        <function-ref name="set" scoped="" ref="0x7dd34650"/>
        <function-ref name="clr" scoped="" ref="0x7dd34730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dcd2d58" loc="27:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dcd2d58"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7e350308"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7e350308"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dcd1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7dcd1160" loc="28:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7dcd1160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7dcd1338"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7dcd1418"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7dcd14f8"/>
        <function-ref name="actualMicro" scoped="" ref="0x7dcd15d8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7dcd16b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7dca2ee8" loc="49:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7dca2ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dca10e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7dca2300" loc="46:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7dca2300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7dca24d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7dca2b78" loc="48:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7dca2b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dca2d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7dca2648" loc="47:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7dca2648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dca2820"/>
        <function-ref name="taskLoop" scoped="" ref="0x7dca2900"/>
        <function-ref name="runNextTask" scoped="" ref="0x7dca29e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7e3109b8" loc="37:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7e3109b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e310b90"/>
        <function-ref name="runTask" scoped="" ref="0x7e310c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7e330970" loc="36:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7e330970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e330b48"/>
        <function-ref name="taskLoop" scoped="" ref="0x7e330c28"/>
        <function-ref name="runNextTask" scoped="" ref="0x7e330d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7e162120" loc="45:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7e162120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e1622f8"/>
        <function-ref name="runTask" scoped="" ref="0x7e1623d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7e151540" loc="46:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7e151540"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7e151718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7e170960" loc="44:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7e170960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e170b38"/>
        <function-ref name="taskLoop" scoped="" ref="0x7e170c18"/>
        <function-ref name="runNextTask" scoped="" ref="0x7e170cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7e0e01a0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7e0e01a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7e0e0378"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7e302c20" loc="42:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7e302c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7e302df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7e0f0078" loc="43:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7e0f0078"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7e0f0250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7dca30c0" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="SerialApp.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7dca30c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7dc82a10"/>
        <function-ref name="fired" scoped="" ref="0x7dca3dc8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7dc823d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7dc821f0"/>
        <function-ref name="getdt" scoped="" ref="0x7dc82dd0"/>
        <function-ref name="gett0" scoped="" ref="0x7dc82bf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7dc82010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7dca36e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7dc826f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7dca3968"/>
        <function-ref name="stop" scoped="" ref="0x7dca3be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7dc81e58" loc="38:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7dc81e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7dc75830"/>
        <function-ref name="fired" scoped="" ref="0x7dc80b98"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7dc751f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7dc75010"/>
        <function-ref name="getdt" scoped="" ref="0x7dc75bf0"/>
        <function-ref name="gett0" scoped="" ref="0x7dc75a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7dc80d78"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7dc804b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7dc75510"/>
        <function-ref name="startOneShot" scoped="" ref="0x7dc80738"/>
        <function-ref name="stop" scoped="" ref="0x7dc809b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7dc656f8" loc="35:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7dc656f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7dc63068"/>
        <function-ref name="fired" scoped="" ref="0x7dc64470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7dc64a10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7dc64830"/>
        <function-ref name="getdt" scoped="" ref="0x7dc63428"/>
        <function-ref name="gett0" scoped="" ref="0x7dc63248"/>
        <function-ref name="isRunning" scoped="" ref="0x7dc64650"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7dc65d20"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7dc64d30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7dc64010"/>
        <function-ref name="stop" scoped="" ref="0x7dc64290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7dc54ea0" loc="36:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7dc54ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7dc604f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dc65060" loc="34:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dc65060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dc65238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7dc25870" loc="26:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7dc25870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7dc32010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7dc32410"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7dc32210"/>
        <function-ref name="overflow" scoped="" ref="0x7dc32610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dc53c20" loc="24:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dc53c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dc53df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7dc359d0" loc="25:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7dc359d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7dc44de0"/>
        <function-ref name="fired" scoped="" ref="0x7dc446a0"/>
        <function-ref name="startAt" scoped="" ref="0x7dc44aa0"/>
        <function-ref name="isRunning" scoped="" ref="0x7dc448a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7dc34010"/>
        <function-ref name="start" scoped="" ref="0x7dc44200"/>
        <function-ref name="stop" scoped="" ref="0x7dc444a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7dbf4388" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7dbf4388"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7dbf4560"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7dbf4640"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7dbf4720"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7dbf4800"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7dbf48e0"/>
        <function-ref name="setControl" scoped="" ref="0x7dbf49c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dc21d00" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dc21d00"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7e3500e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7e3500e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dc21ed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7dbf0848" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7dbf0848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7dc02b48"/>
        <function-ref name="fired" scoped="" ref="0x7dc02348"/>
        <function-ref name="get" scoped="" ref="0x7dbf0e90"/>
        <function-ref name="reset" scoped="" ref="0x7dc02548"/>
        <function-ref name="isOn" scoped="" ref="0x7dc02d48"/>
        <function-ref name="set" scoped="" ref="0x7dc020a8"/>
        <function-ref name="start" scoped="" ref="0x7dc02748"/>
        <function-ref name="stop" scoped="" ref="0x7dc02948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7dc10be0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7dc10be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7dc13330"/>
        <function-ref name="test" scoped="" ref="0x7dc14f18"/>
        <function-ref name="get" scoped="" ref="0x7dc14278"/>
        <function-ref name="setScale" scoped="" ref="0x7dc13530"/>
        <function-ref name="getScale" scoped="" ref="0x7dc137d0"/>
        <function-ref name="reset" scoped="" ref="0x7dc14918"/>
        <function-ref name="overflow" scoped="" ref="0x7dc14718"/>
        <function-ref name="isOn" scoped="" ref="0x7dc13130"/>
        <function-ref name="set" scoped="" ref="0x7dc14478"/>
        <function-ref name="start" scoped="" ref="0x7dc14b18"/>
        <function-ref name="stop" scoped="" ref="0x7dc14d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7db91c78" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliInit"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7db91c78"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7e3500e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7e3500e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7db91e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7db90078" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliInit"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7db90078"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7db80810"/>
        <function-ref name="test" scoped="" ref="0x7db80410"/>
        <function-ref name="get" scoped="" ref="0x7db906c0"/>
        <function-ref name="setScale" scoped="" ref="0x7db80a10"/>
        <function-ref name="getScale" scoped="" ref="0x7db80cb0"/>
        <function-ref name="reset" scoped="" ref="0x7db90d60"/>
        <function-ref name="overflow" scoped="" ref="0x7db90b60"/>
        <function-ref name="isOn" scoped="" ref="0x7db80610"/>
        <function-ref name="set" scoped="" ref="0x7db908c0"/>
        <function-ref name="start" scoped="" ref="0x7db80010"/>
        <function-ref name="stop" scoped="" ref="0x7db80210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7db74680" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7db74680"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7e351f28"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7e351f28"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7db739c8"/>
        <function-ref name="fired" scoped="" ref="0x7db73288"/>
        <function-ref name="startAt" scoped="" ref="0x7db73688"/>
        <function-ref name="isRunning" scoped="" ref="0x7db73488"/>
        <function-ref name="getAlarm" scoped="" ref="0x7db73bc8"/>
        <function-ref name="start" scoped="" ref="0x7db74dd0"/>
        <function-ref name="stop" scoped="" ref="0x7db73088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7db43c10" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7db43c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7db41f18"/>
        <function-ref name="fired" scoped="" ref="0x7db41718"/>
        <function-ref name="get" scoped="" ref="0x7db41278"/>
        <function-ref name="reset" scoped="" ref="0x7db41918"/>
        <function-ref name="isOn" scoped="" ref="0x7db40130"/>
        <function-ref name="set" scoped="" ref="0x7db41478"/>
        <function-ref name="start" scoped="" ref="0x7db41b18"/>
        <function-ref name="stop" scoped="" ref="0x7db41d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7db73e10" loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7db73e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7db43528"/>
        <function-ref name="test" scoped="" ref="0x7db43128"/>
        <function-ref name="get" scoped="" ref="0x7db44468"/>
        <function-ref name="setScale" scoped="" ref="0x7db43728"/>
        <function-ref name="getScale" scoped="" ref="0x7db439c8"/>
        <function-ref name="reset" scoped="" ref="0x7db44b08"/>
        <function-ref name="overflow" scoped="" ref="0x7db44908"/>
        <function-ref name="isOn" scoped="" ref="0x7db43328"/>
        <function-ref name="set" scoped="" ref="0x7db44668"/>
        <function-ref name="start" scoped="" ref="0x7db44d08"/>
        <function-ref name="stop" scoped="" ref="0x7db44f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7db34320" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7db34320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7db34a70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7db34e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7db34c70"/>
        <function-ref name="overflow" scoped="" ref="0x7db21088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7db212f0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7db212f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7db20a10"/>
        <function-ref name="test" scoped="" ref="0x7db20610"/>
        <function-ref name="get" scoped="" ref="0x7db21938"/>
        <function-ref name="setScale" scoped="" ref="0x7db20c10"/>
        <function-ref name="getScale" scoped="" ref="0x7db20eb0"/>
        <function-ref name="reset" scoped="" ref="0x7db20010"/>
        <function-ref name="overflow" scoped="" ref="0x7db21dd8"/>
        <function-ref name="isOn" scoped="" ref="0x7db20810"/>
        <function-ref name="set" scoped="" ref="0x7db21b38"/>
        <function-ref name="start" scoped="" ref="0x7db20210"/>
        <function-ref name="stop" scoped="" ref="0x7db20410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7db13608" loc="61:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
      <component-ref qname="AlarmCounterMilliP.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7db13608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7db12950"/>
        <function-ref name="fired" scoped="" ref="0x7db12210"/>
        <function-ref name="startAt" scoped="" ref="0x7db12610"/>
        <function-ref name="isRunning" scoped="" ref="0x7db12410"/>
        <function-ref name="getAlarm" scoped="" ref="0x7db12b50"/>
        <function-ref name="start" scoped="" ref="0x7db13d58"/>
        <function-ref name="stop" scoped="" ref="0x7db12010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7dac1ed8" loc="63:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
      <component-ref qname="AlarmCounterMilliP.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7dac1ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7dac0680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7dac0a80"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7dac0880"/>
        <function-ref name="overflow" scoped="" ref="0x7dac0c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7db12e48" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
      <component-ref qname="AlarmCounterMilliP.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7db12e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7dac15e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7dac19e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7dac17e0"/>
        <function-ref name="overflow" scoped="" ref="0x7dac1be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7dab6010" loc="64:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
      <component-ref qname="AlarmCounterMilliP.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x7dab6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7dab4350"/>
        <function-ref name="fired" scoped="" ref="0x7dab6c00"/>
        <function-ref name="startAt" scoped="" ref="0x7dab4010"/>
        <function-ref name="isRunning" scoped="" ref="0x7dab6e00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7dab4550"/>
        <function-ref name="start" scoped="" ref="0x7dab6760"/>
        <function-ref name="stop" scoped="" ref="0x7dab6a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7da77bf0" loc="63:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7da77bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7da77dc8"/>
        <function-ref name="runTask" scoped="" ref="0x7da77ea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7da814c8" loc="38:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7da814c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7da77818"/>
        <function-ref name="fired" scoped="" ref="0x7da770d8"/>
        <function-ref name="startAt" scoped="" ref="0x7da774d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7da772d8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7da77a18"/>
        <function-ref name="start" scoped="" ref="0x7da81c18"/>
        <function-ref name="stop" scoped="" ref="0x7da81eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7da83440" loc="37:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7da83440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7da82dd0"/>
        <function-ref name="fired" scoped="" ref="0x7da821f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7da82790"/>
        <function-ref name="isOneShot" scoped="" ref="0x7da825b0"/>
        <function-ref name="getdt" scoped="" ref="0x7da811f0"/>
        <function-ref name="gett0" scoped="" ref="0x7da81010"/>
        <function-ref name="isRunning" scoped="" ref="0x7da823d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7da83a68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7da82ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7da83ce8"/>
        <function-ref name="stop" scoped="" ref="0x7da82010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7da24240" loc="60:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7da24240"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7da24418"/>
        <function-ref name="runTask" scoped="" ref="0x7da244f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7da27380" loc="38:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7da27380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7da25c98"/>
        <function-ref name="fired" scoped="" ref="0x7da250b8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7da25658"/>
        <function-ref name="isOneShot" scoped="" ref="0x7da25478"/>
        <function-ref name="getdt" scoped="" ref="0x7da24068"/>
        <function-ref name="gett0" scoped="" ref="0x7da25e78"/>
        <function-ref name="isRunning" scoped="" ref="0x7da25298"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7da279a8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7da25978"/>
        <function-ref name="startOneShot" scoped="" ref="0x7da27c28"/>
        <function-ref name="stop" scoped="" ref="0x7da27ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7da73370" loc="37:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7da73370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7da31d08"/>
        <function-ref name="fired" scoped="" ref="0x7da310d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7da316a8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7da314b8"/>
        <function-ref name="getdt" scoped="" ref="0x7da27108"/>
        <function-ref name="gett0" scoped="" ref="0x7da31ef8"/>
        <function-ref name="isRunning" scoped="" ref="0x7da312c8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7da739a8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7da319d8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7da73c38"/>
        <function-ref name="stop" scoped="" ref="0x7da73ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7da21a88" loc="37:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7da21a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7da200f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7da203d0" loc="38:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7da203d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7da20b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7da20f20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7da20d20"/>
        <function-ref name="overflow" scoped="" ref="0x7da12138"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedController" ref="0x7da04398" loc="2:LedControllerC.nc">
      <component-ref qname="LedControllerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedController" scoped="" ref="0x7da04398"/></type-interface>
      <instance>
        <interfacedef-ref qname="LedController"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7da04570"/>
        <function-ref name="BlinkLed1" scoped="" ref="0x7da04650"/>
        <function-ref name="BlinkLed2" scoped="" ref="0x7da04730"/>
        <function-ref name="BlinkLed0" scoped="" ref="0x7da04810"/>
        <function-ref name="setNumber" scoped="" ref="0x7da048f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedTimer1" ref="0x7d9e6c78" loc="7:LedControllerM.nc">
      <component-ref qname="LedControllerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedTimer1" scoped="" ref="0x7d9e6c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d9e3650"/>
        <function-ref name="fired" scoped="" ref="0x7d9e49a8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d9e3010"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d9e4d68"/>
        <function-ref name="getdt" scoped="" ref="0x7d9e3a10"/>
        <function-ref name="gett0" scoped="" ref="0x7d9e3830"/>
        <function-ref name="isRunning" scoped="" ref="0x7d9e4b88"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d9e42c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d9e3330"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d9e4548"/>
        <function-ref name="stop" scoped="" ref="0x7d9e47c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MorseTimer" ref="0x7d9e0c78" loc="10:LedControllerM.nc">
      <component-ref qname="LedControllerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MorseTimer" scoped="" ref="0x7d9e0c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d9d6650"/>
        <function-ref name="fired" scoped="" ref="0x7d9d79a8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d9d6010"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d9d7d68"/>
        <function-ref name="getdt" scoped="" ref="0x7d9d6a10"/>
        <function-ref name="gett0" scoped="" ref="0x7d9d6830"/>
        <function-ref name="isRunning" scoped="" ref="0x7d9d7b88"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d9d72c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d9d6330"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d9d7548"/>
        <function-ref name="stop" scoped="" ref="0x7d9d77c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedController" ref="0x7da00640" loc="2:LedControllerM.nc">
      <component-ref qname="LedControllerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedController" scoped="" ref="0x7da00640"/></type-interface>
      <instance>
        <interfacedef-ref qname="LedController"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7da00818"/>
        <function-ref name="BlinkLed1" scoped="" ref="0x7da008f8"/>
        <function-ref name="BlinkLed2" scoped="" ref="0x7da009d8"/>
        <function-ref name="BlinkLed0" scoped="" ref="0x7da00ab8"/>
        <function-ref name="setNumber" scoped="" ref="0x7da00b98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompleteTimer" ref="0x7d9d6c78" loc="12:LedControllerM.nc">
      <component-ref qname="LedControllerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompleteTimer" scoped="" ref="0x7d9d6c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d9d3650"/>
        <function-ref name="fired" scoped="" ref="0x7d9d49a8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d9d3010"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d9d4d68"/>
        <function-ref name="getdt" scoped="" ref="0x7d9d3a10"/>
        <function-ref name="gett0" scoped="" ref="0x7d9d3830"/>
        <function-ref name="isRunning" scoped="" ref="0x7d9d4b88"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d9d42c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d9d3330"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d9d4548"/>
        <function-ref name="stop" scoped="" ref="0x7d9d47c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedTimer2" ref="0x7d9e3c78" loc="8:LedControllerM.nc">
      <component-ref qname="LedControllerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedTimer2" scoped="" ref="0x7d9e3c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d9e0650"/>
        <function-ref name="fired" scoped="" ref="0x7d9e29a8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d9e0010"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d9e2d68"/>
        <function-ref name="getdt" scoped="" ref="0x7d9e0a10"/>
        <function-ref name="gett0" scoped="" ref="0x7d9e0830"/>
        <function-ref name="isRunning" scoped="" ref="0x7d9e2b88"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d9e22c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d9e0330"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d9e2548"/>
        <function-ref name="stop" scoped="" ref="0x7d9e27c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7d9f5010" loc="5:LedControllerM.nc">
      <component-ref qname="LedControllerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7d9f5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7d9f51e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7d9f52c8"/>
        <function-ref name="led1On" scoped="" ref="0x7d9f53a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7d9f5488"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7d9f5568"/>
        <function-ref name="get" scoped="" ref="0x7d9f5648"/>
        <function-ref name="led1Off" scoped="" ref="0x7d9f5728"/>
        <function-ref name="led2Off" scoped="" ref="0x7d9f5aa8"/>
        <function-ref name="set" scoped="" ref="0x7d9f5808"/>
        <function-ref name="led0On" scoped="" ref="0x7d9f58e8"/>
        <function-ref name="led2On" scoped="" ref="0x7d9f59c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedTimer0" ref="0x7d9f5cb8" loc="6:LedControllerM.nc">
      <component-ref qname="LedControllerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedTimer0" scoped="" ref="0x7d9f5cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d9e6650"/>
        <function-ref name="fired" scoped="" ref="0x7d9f49d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d9e6010"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d9f4d98"/>
        <function-ref name="getdt" scoped="" ref="0x7d9e6a10"/>
        <function-ref name="gett0" scoped="" ref="0x7d9e6830"/>
        <function-ref name="isRunning" scoped="" ref="0x7d9f4bb8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d9f42f8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d9e6330"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d9f4578"/>
        <function-ref name="stop" scoped="" ref="0x7d9f47f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7da01bb8" loc="35:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7da01bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7da01d90"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7da01e70"/>
        <function-ref name="led1On" scoped="" ref="0x7d998010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7d9980f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7d9981d0"/>
        <function-ref name="get" scoped="" ref="0x7d9982b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7d998390"/>
        <function-ref name="led2Off" scoped="" ref="0x7d998710"/>
        <function-ref name="set" scoped="" ref="0x7d998470"/>
        <function-ref name="led0On" scoped="" ref="0x7d998550"/>
        <function-ref name="led2On" scoped="" ref="0x7d998630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7d993628" loc="39:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7d993628"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d993800"/>
        <function-ref name="isInput" scoped="" ref="0x7d9938e0"/>
        <function-ref name="toggle" scoped="" ref="0x7d9939c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d993aa0"/>
        <function-ref name="get" scoped="" ref="0x7d993b80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d993c60"/>
        <function-ref name="set" scoped="" ref="0x7d993d40"/>
        <function-ref name="clr" scoped="" ref="0x7d993e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d9945d8" loc="35:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d9945d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d9947b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7d992010" loc="40:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7d992010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9921e8"/>
        <function-ref name="isInput" scoped="" ref="0x7d9922c8"/>
        <function-ref name="toggle" scoped="" ref="0x7d9923a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7d992488"/>
        <function-ref name="get" scoped="" ref="0x7d992568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d992648"/>
        <function-ref name="set" scoped="" ref="0x7d992728"/>
        <function-ref name="clr" scoped="" ref="0x7d992808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7d9948f8" loc="36:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7d9948f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7d994ad0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7d994bb0"/>
        <function-ref name="led1On" scoped="" ref="0x7d994c90"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7d994d70"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7d994e50"/>
        <function-ref name="get" scoped="" ref="0x7d993010"/>
        <function-ref name="led1Off" scoped="" ref="0x7d9930f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7d993470"/>
        <function-ref name="set" scoped="" ref="0x7d9931d0"/>
        <function-ref name="led0On" scoped="" ref="0x7d9932b0"/>
        <function-ref name="led2On" scoped="" ref="0x7d993390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7d992980" loc="41:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7d992980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d992b58"/>
        <function-ref name="isInput" scoped="" ref="0x7d992c38"/>
        <function-ref name="toggle" scoped="" ref="0x7d992d18"/>
        <function-ref name="isOutput" scoped="" ref="0x7d992df8"/>
        <function-ref name="get" scoped="" ref="0x7d992ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d991010"/>
        <function-ref name="set" scoped="" ref="0x7d9910f0"/>
        <function-ref name="clr" scoped="" ref="0x7d9911d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7d973908" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7d973908"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d973ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7d973bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7d973ca0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d973d80"/>
        <function-ref name="get" scoped="" ref="0x7d973e60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d972010"/>
        <function-ref name="set" scoped="" ref="0x7d9720f0"/>
        <function-ref name="clr" scoped="" ref="0x7d9721d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7d972368" loc="36:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7d972368"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d972540"/>
        <function-ref name="isInput" scoped="" ref="0x7d972620"/>
        <function-ref name="toggle" scoped="" ref="0x7d972700"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9727e0"/>
        <function-ref name="get" scoped="" ref="0x7d9728c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9729a0"/>
        <function-ref name="set" scoped="" ref="0x7d972a80"/>
        <function-ref name="clr" scoped="" ref="0x7d972b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7d9716b8" loc="38:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d9716b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d971890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7d972cf8" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7d972cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d972ed0"/>
        <function-ref name="isInput" scoped="" ref="0x7d971010"/>
        <function-ref name="toggle" scoped="" ref="0x7d9710f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9711d0"/>
        <function-ref name="get" scoped="" ref="0x7d9712b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d971390"/>
        <function-ref name="set" scoped="" ref="0x7d971470"/>
        <function-ref name="clr" scoped="" ref="0x7d971550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7d975330" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="LedControllerC.LedTimer1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d975330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d967c28"/>
        <function-ref name="fired" scoped="" ref="0x7d967048"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d9675e8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d967408"/>
        <function-ref name="getdt" scoped="" ref="0x7d966010"/>
        <function-ref name="gett0" scoped="" ref="0x7d967e08"/>
        <function-ref name="isRunning" scoped="" ref="0x7d967228"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d975958"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d967908"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d975bd8"/>
        <function-ref name="stop" scoped="" ref="0x7d975e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7d966cb0" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="LedControllerC.LedTimer2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d966cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d963650"/>
        <function-ref name="fired" scoped="" ref="0x7d9659c8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d963010"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d965d88"/>
        <function-ref name="getdt" scoped="" ref="0x7d963a10"/>
        <function-ref name="gett0" scoped="" ref="0x7d963830"/>
        <function-ref name="isRunning" scoped="" ref="0x7d965ba8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d9652e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d963330"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d965568"/>
        <function-ref name="stop" scoped="" ref="0x7d9657e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7d9626d8" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="LedControllerC.LedTimer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d9626d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d958068"/>
        <function-ref name="fired" scoped="" ref="0x7d961470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d961a10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d961830"/>
        <function-ref name="getdt" scoped="" ref="0x7d958428"/>
        <function-ref name="gett0" scoped="" ref="0x7d958248"/>
        <function-ref name="isRunning" scoped="" ref="0x7d961650"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d962d00"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d961d30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d961010"/>
        <function-ref name="stop" scoped="" ref="0x7d961290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7d9575a8" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="LedControllerC.CompleteTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d9575a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d956ed0"/>
        <function-ref name="fired" scoped="" ref="0x7d9562f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d956890"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d9566b0"/>
        <function-ref name="getdt" scoped="" ref="0x7d9552b8"/>
        <function-ref name="gett0" scoped="" ref="0x7d9550d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7d9564d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d957bd0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d956bb0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d957e50"/>
        <function-ref name="stop" scoped="" ref="0x7d956110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7d9540f0" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="LedControllerC.MorseTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d9540f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d952a10"/>
        <function-ref name="fired" scoped="" ref="0x7d954df8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d9523d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d9521f0"/>
        <function-ref name="getdt" scoped="" ref="0x7d952dd0"/>
        <function-ref name="gett0" scoped="" ref="0x7d952bf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7d952010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d954718"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d9526f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d954998"/>
        <function-ref name="stop" scoped="" ref="0x7d954c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LCDSetter" ref="0x7d8b6f00" loc="23:LCDSetterC.nc">
      <component-ref qname="LCDSetterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LCDSetter" scoped="" ref="0x7d8b6f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCDSetter"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d9420f0"/>
        <function-ref name="setLCD" scoped="" ref="0x7d9421d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LCDSetter" ref="0x7d8b2010" loc="22:LCDSetterM.nc">
      <component-ref qname="LCDSetterM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LCDSetter" scoped="" ref="0x7d8b2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCDSetter"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d8b21e8"/>
        <function-ref name="setLCD" scoped="" ref="0x7d8b22c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Interaction" ref="0x7d8a3ea8" loc="28:LCDSetterM.nc">
      <component-ref qname="LCDSetterM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interaction" scoped="" ref="0x7d8a3ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Interaction"/>
      </instance>
      <interface-functions>
        <function-ref name="StartDoneConfiguration" scoped="" ref="0x7d8a80c0"/>
        <function-ref name="getSensorDataDone" scoped="" ref="0x7d8a81a0"/>
        <function-ref name="Urgency_Data" scoped="" ref="0x7d8a8280"/>
        <function-ref name="Process_CMD" scoped="" ref="0x7d8a8360"/>
        <function-ref name="SetSamplingTime" scoped="" ref="0x7d8a8440"/>
        <function-ref name="getSensorData" scoped="" ref="0x7d8a8520"/>
        <function-ref name="StartConfiguration" scoped="" ref="0x7d8a8600"/>
        <function-ref name="Send_LongData" scoped="" ref="0x7d8a86e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCSuartDBGstd" ref="0x7d899e90" loc="29:LCDSetterM.nc">
      <component-ref qname="LCDSetterM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCSuartDBGstd" scoped="" ref="0x7d899e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d8a1080"/>
        <function-ref name="stop" scoped="" ref="0x7d8a1160"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TryToSetTimer" ref="0x7d897d40" loc="45:LCDSetterM.nc">
      <component-ref qname="LCDSetterM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TryToSetTimer" scoped="" ref="0x7d897d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d897f18"/>
        <function-ref name="runTask" scoped="" ref="0x7d894010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TryToConfigure" ref="0x7d898ed0" loc="44:LCDSetterM.nc">
      <component-ref qname="LCDSetterM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TryToConfigure" scoped="" ref="0x7d898ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d8970c0"/>
        <function-ref name="runTask" scoped="" ref="0x7d8971a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCSuartDBG" ref="0x7d8964f8" loc="30:LCDSetterM.nc">
      <component-ref qname="LCDSetterM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCSuartDBG" scoped="" ref="0x7d8964f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SCSuartDBG"/>
      </instance>
      <interface-functions>
        <function-ref name="UARTSend" scoped="" ref="0x7d8966d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7d8b24e8" loc="26:LCDSetterM.nc">
      <component-ref qname="LCDSetterM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d8b24e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d8b1e08"/>
        <function-ref name="fired" scoped="" ref="0x7d8b1228"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d8b17c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d8b15e8"/>
        <function-ref name="getdt" scoped="" ref="0x7d8b01f0"/>
        <function-ref name="gett0" scoped="" ref="0x7d8b0010"/>
        <function-ref name="isRunning" scoped="" ref="0x7d8b1408"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d8b2b10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d8b1ae8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d8b2d90"/>
        <function-ref name="stop" scoped="" ref="0x7d8b1048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7d8b3e10" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="LCDSetterC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d8b3e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d875718"/>
        <function-ref name="fired" scoped="" ref="0x7d876b28"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d8750d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d876ee8"/>
        <function-ref name="getdt" scoped="" ref="0x7d875ad8"/>
        <function-ref name="gett0" scoped="" ref="0x7d8758f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7d876d08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d876448"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d8753f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d8766c8"/>
        <function-ref name="stop" scoped="" ref="0x7d876948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interaction" ref="0x7d865ba8" loc="23:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
      <component-ref qname="InteractionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interaction" scoped="" ref="0x7d865ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Interaction"/>
      </instance>
      <interface-functions>
        <function-ref name="StartDoneConfiguration" scoped="" ref="0x7d865d80"/>
        <function-ref name="getSensorDataDone" scoped="" ref="0x7d865e60"/>
        <function-ref name="Urgency_Data" scoped="" ref="0x7d867010"/>
        <function-ref name="Process_CMD" scoped="" ref="0x7d8670f0"/>
        <function-ref name="SetSamplingTime" scoped="" ref="0x7d8671d0"/>
        <function-ref name="getSensorData" scoped="" ref="0x7d8672b0"/>
        <function-ref name="StartConfiguration" scoped="" ref="0x7d867390"/>
        <function-ref name="Send_LongData" scoped="" ref="0x7d867470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SensorCheckTimer" ref="0x7d859af8" loc="28:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SensorCheckTimer" scoped="" ref="0x7d859af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d8564c8"/>
        <function-ref name="fired" scoped="" ref="0x7d8578c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d857e60"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d857c80"/>
        <function-ref name="getdt" scoped="" ref="0x7d856888"/>
        <function-ref name="gett0" scoped="" ref="0x7d8566a8"/>
        <function-ref name="isRunning" scoped="" ref="0x7d857aa0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d8571e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d8561a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d857460"/>
        <function-ref name="stop" scoped="" ref="0x7d8576e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBasicSensor" ref="0x7d7c9a10" loc="339:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBasicSensor" scoped="" ref="0x7d7c9a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d7c9be8"/>
        <function-ref name="runTask" scoped="" ref="0x7d7c9cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event_Urgency_Data" ref="0x7d815b98" loc="134:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Event_Urgency_Data" scoped="" ref="0x7d815b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d815d70"/>
        <function-ref name="runTask" scoped="" ref="0x7d815e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="C328_Reset_Timer" ref="0x7d856af8" loc="29:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="C328_Reset_Timer" scoped="" ref="0x7d856af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d8534c8"/>
        <function-ref name="fired" scoped="" ref="0x7d8558c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d855e60"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d855c80"/>
        <function-ref name="getdt" scoped="" ref="0x7d853888"/>
        <function-ref name="gett0" scoped="" ref="0x7d8536a8"/>
        <function-ref name="isRunning" scoped="" ref="0x7d855aa0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d8551e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d8531a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d855460"/>
        <function-ref name="stop" scoped="" ref="0x7d8556e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read_Humi" ref="0x7d848530" loc="32:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read_Humi" scoped="" ref="0x7d848530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d848b58"/>
        <function-ref name="readDone" scoped="" ref="0x7d848d38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProcessCMD" ref="0x7d7da290" loc="293:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProcessCMD" scoped="" ref="0x7d7da290"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d7da468"/>
        <function-ref name="runTask" scoped="" ref="0x7d7da548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read_Ultrared" ref="0x7d847888" loc="35:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read_Ultrared" scoped="" ref="0x7d847888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d847eb0"/>
        <function-ref name="readDone" scoped="" ref="0x7d8460b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interaction" ref="0x7d862408" loc="22:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interaction" scoped="" ref="0x7d862408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Interaction"/>
      </instance>
      <interface-functions>
        <function-ref name="StartDoneConfiguration" scoped="" ref="0x7d8625e0"/>
        <function-ref name="getSensorDataDone" scoped="" ref="0x7d8626c0"/>
        <function-ref name="Urgency_Data" scoped="" ref="0x7d8627a0"/>
        <function-ref name="Process_CMD" scoped="" ref="0x7d862880"/>
        <function-ref name="SetSamplingTime" scoped="" ref="0x7d862960"/>
        <function-ref name="getSensorData" scoped="" ref="0x7d862a40"/>
        <function-ref name="StartConfiguration" scoped="" ref="0x7d862b20"/>
        <function-ref name="Send_LongData" scoped="" ref="0x7d862c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read_Photo" ref="0x7d851cb8" loc="34:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read_Photo" scoped="" ref="0x7d851cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d8472f8"/>
        <function-ref name="readDone" scoped="" ref="0x7d8474d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Set_C328_Restart_Timer_START" ref="0x7d8300e0" loc="66:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Set_C328_Restart_Timer_START" scoped="" ref="0x7d8300e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d8302b8"/>
        <function-ref name="runTask" scoped="" ref="0x7d830398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CommunicationWithOPT" ref="0x7d8364d0" loc="37:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CommunicationWithOPT" scoped="" ref="0x7d8364d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CommunicationWithOPT"/>
      </instance>
      <interface-functions>
        <function-ref name="parsing_config" scoped="" ref="0x7d844010"/>
        <function-ref name="RequestLongMSG" scoped="" ref="0x7d836788"/>
        <function-ref name="SpecialControlMSG" scoped="" ref="0x7d836868"/>
        <function-ref name="parsing_control" scoped="" ref="0x7d836948"/>
        <function-ref name="parsing_longDT" scoped="" ref="0x7d836a28"/>
        <function-ref name="RequestSensorMSG" scoped="" ref="0x7d836b08"/>
        <function-ref name="SendConfigureMSG" scoped="" ref="0x7d836be8"/>
        <function-ref name="SendLongMSG" scoped="" ref="0x7d836cc8"/>
        <function-ref name="start" scoped="" ref="0x7d836da8"/>
        <function-ref name="SendControlMSG" scoped="" ref="0x7d836e88"/>
        <function-ref name="parsing_sensor" scoped="" ref="0x7d8366a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TaskStartDoneConfiguration" ref="0x7d833240" loc="56:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskStartDoneConfiguration" scoped="" ref="0x7d833240"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d833418"/>
        <function-ref name="runTask" scoped="" ref="0x7d8334f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TryToGetSensorData" ref="0x7d7f56e8" loc="211:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TryToGetSensorData" scoped="" ref="0x7d7f56e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d7f58c0"/>
        <function-ref name="runTask" scoped="" ref="0x7d7f59a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7d862d88" loc="26:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7d862d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7d861010"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7d8610f0"/>
        <function-ref name="led1On" scoped="" ref="0x7d8611d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7d8612b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7d861390"/>
        <function-ref name="get" scoped="" ref="0x7d861470"/>
        <function-ref name="led1Off" scoped="" ref="0x7d861550"/>
        <function-ref name="led2Off" scoped="" ref="0x7d8618d0"/>
        <function-ref name="set" scoped="" ref="0x7d861630"/>
        <function-ref name="led0On" scoped="" ref="0x7d861710"/>
        <function-ref name="led2On" scoped="" ref="0x7d8617f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TaskGetSensorDataDone" ref="0x7d832238" loc="57:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskGetSensorDataDone" scoped="" ref="0x7d832238"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d832490"/>
        <function-ref name="runTask" scoped="" ref="0x7d832570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfigTimeout" ref="0x7d861ae0" loc="27:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigTimeout" scoped="" ref="0x7d861ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d8594c8"/>
        <function-ref name="fired" scoped="" ref="0x7d8608c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d860e60"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d860c80"/>
        <function-ref name="getdt" scoped="" ref="0x7d859888"/>
        <function-ref name="gett0" scoped="" ref="0x7d8596a8"/>
        <function-ref name="isRunning" scoped="" ref="0x7d860aa0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d8601e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d8591a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d860460"/>
        <function-ref name="stop" scoped="" ref="0x7d8606e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read_Temp" ref="0x7d851100" loc="33:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read_Temp" scoped="" ref="0x7d851100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d851728"/>
        <function-ref name="readDone" scoped="" ref="0x7d851908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCSuartDBG" ref="0x7d844160" loc="38:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCSuartDBG" scoped="" ref="0x7d844160"/></type-interface>
      <instance>
        <interfacedef-ref qname="SCSuartDBG"/>
      </instance>
      <interface-functions>
        <function-ref name="UARTSend" scoped="" ref="0x7d844338"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7d7b3268" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="InteractionC.ConfigTimeout"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d7b3268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d7b1bf0"/>
        <function-ref name="fired" scoped="" ref="0x7d7b1010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d7b15b0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d7b13d0"/>
        <function-ref name="getdt" scoped="" ref="0x7d7b0010"/>
        <function-ref name="gett0" scoped="" ref="0x7d7b1dd0"/>
        <function-ref name="isRunning" scoped="" ref="0x7d7b11f0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d7b3890"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d7b18d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d7b3b10"/>
        <function-ref name="stop" scoped="" ref="0x7d7b3d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7d7b0cb8" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="InteractionC.SensorCheckTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d7b0cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d7a9650"/>
        <function-ref name="fired" scoped="" ref="0x7d7aa9d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d7a9010"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d7aad98"/>
        <function-ref name="getdt" scoped="" ref="0x7d7a9a10"/>
        <function-ref name="gett0" scoped="" ref="0x7d7a9830"/>
        <function-ref name="isRunning" scoped="" ref="0x7d7aabb8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d7aa2f8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d7a9330"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d7aa578"/>
        <function-ref name="stop" scoped="" ref="0x7d7aa7f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7d7a76e0" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="InteractionC.C328_Reset_TimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d7a76e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d7a5068"/>
        <function-ref name="fired" scoped="" ref="0x7d7a6470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d7a6a10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d7a6830"/>
        <function-ref name="getdt" scoped="" ref="0x7d7a5428"/>
        <function-ref name="gett0" scoped="" ref="0x7d7a5248"/>
        <function-ref name="isRunning" scoped="" ref="0x7d7a6650"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d7a7d08"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d7a6d30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d7a6010"/>
        <function-ref name="stop" scoped="" ref="0x7d7a6290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7d5e10c0" loc="47:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11C.nc">
      <component-ref qname="InteractionC.SensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x7d5e10c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d5e16e8"/>
        <function-ref name="readDone" scoped="" ref="0x7d5e18c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7d5e24f0" loc="46:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11C.nc">
      <component-ref qname="InteractionC.SensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x7d5e24f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d5e2b18"/>
        <function-ref name="readDone" scoped="" ref="0x7d5e2cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Hum" ref="0x7cb06970" loc="50:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="InteractionC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sht11Hum" scoped="" ref="0x7cb06970"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7cb06b48"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7cb06c28"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7cb06d08"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7cb06de8"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7cb06ec8"/>
        <function-ref name="reset" scoped="" ref="0x7cb05010"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7cb050f0"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7cb051d0"/>
        <function-ref name="resetDone" scoped="" ref="0x7cb052b0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7cb05390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7cb094b0" loc="45:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="InteractionC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x7cb094b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7cb09ad8"/>
        <function-ref name="readDone" scoped="" ref="0x7cb09cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempResource" ref="0x7cb07010" loc="47:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="InteractionC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempResource" scoped="" ref="0x7cb07010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7cb071e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7cb072c8"/>
        <function-ref name="request" scoped="" ref="0x7cb073a8"/>
        <function-ref name="granted" scoped="" ref="0x7cb07488"/>
        <function-ref name="isOwner" scoped="" ref="0x7cb07568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Temp" ref="0x7cb07dc0" loc="49:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="InteractionC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sht11Temp" scoped="" ref="0x7cb07dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7cb06010"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7cb060f0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7cb061d0"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7cb062b0"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7cb06390"/>
        <function-ref name="reset" scoped="" ref="0x7cb06470"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7cb06550"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7cb06630"/>
        <function-ref name="resetDone" scoped="" ref="0x7cb06710"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7cb067f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumResource" ref="0x7cb076e8" loc="48:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="InteractionC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HumResource" scoped="" ref="0x7cb076e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7cb078c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7cb079a0"/>
        <function-ref name="request" scoped="" ref="0x7cb07a80"/>
        <function-ref name="granted" scoped="" ref="0x7cb07b60"/>
        <function-ref name="isOwner" scoped="" ref="0x7cb07c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7cb0a8d8" loc="44:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="InteractionC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x7cb0a8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7cb0af00"/>
        <function-ref name="readDone" scoped="" ref="0x7cb09108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x7d7594f8" loc="45:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SensirionSht11" scoped="" ref="0x7d7594f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7d7596d0"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7d7597b0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7d759890"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7d759970"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7d759a50"/>
        <function-ref name="reset" scoped="" ref="0x7d759b30"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7d759c10"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7d759cf0"/>
        <function-ref name="resetDone" scoped="" ref="0x7d759dd0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7d759eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7d75ab88" loc="44:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7d75ab88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d75ad60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d75ae40"/>
        <function-ref name="request" scoped="" ref="0x7d75af20"/>
        <function-ref name="granted" scoped="" ref="0x7d759018"/>
        <function-ref name="isOwner" scoped="" ref="0x7d7590f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptDATA" ref="0x7d6f8010" loc="58:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptDATA" scoped="" ref="0x7d6f8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7d6f81e8"/>
        <function-ref name="disable" scoped="" ref="0x7d6f82c8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7d6f83a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7d6f8488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readSensor" ref="0x7d6f46a8" loc="102:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readSensor" scoped="" ref="0x7d6f46a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d6f4880"/>
        <function-ref name="runTask" scoped="" ref="0x7d6f4960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalStatusDone" ref="0x7d6f4270" loc="103:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalStatusDone" scoped="" ref="0x7d6f4270"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d6f4448"/>
        <function-ref name="runTask" scoped="" ref="0x7d6f4528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CLOCK" ref="0x7d6f95f0" loc="57:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CLOCK" scoped="" ref="0x7d6f95f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d6f97c8"/>
        <function-ref name="isInput" scoped="" ref="0x7d6f98a8"/>
        <function-ref name="toggle" scoped="" ref="0x7d6f9988"/>
        <function-ref name="isOutput" scoped="" ref="0x7d6f9a68"/>
        <function-ref name="get" scoped="" ref="0x7d6f9b48"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d6f9c28"/>
        <function-ref name="set" scoped="" ref="0x7d6f9d08"/>
        <function-ref name="clr" scoped="" ref="0x7d6f9de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x7d6fa068" loc="54:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SensirionSht11" scoped="" ref="0x7d6fa068"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7d6fa250"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7d6fa330"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7d6fa410"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7d6fa4f0"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7d6fa5d0"/>
        <function-ref name="reset" scoped="" ref="0x7d6fa6b0"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7d6fa790"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7d6fa870"/>
        <function-ref name="resetDone" scoped="" ref="0x7d6fa950"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7d6faa30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x7d6fabb0" loc="56:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x7d6fabb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d6fad88"/>
        <function-ref name="isInput" scoped="" ref="0x7d6fae68"/>
        <function-ref name="toggle" scoped="" ref="0x7d6f9010"/>
        <function-ref name="isOutput" scoped="" ref="0x7d6f90f0"/>
        <function-ref name="get" scoped="" ref="0x7d6f91d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d6f92b0"/>
        <function-ref name="set" scoped="" ref="0x7d6f9390"/>
        <function-ref name="clr" scoped="" ref="0x7d6f9470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7d6f6588" loc="62:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7d6f6588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7d6f6760"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7d6f6840"/>
        <function-ref name="led1On" scoped="" ref="0x7d6f6920"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7d6f6a00"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7d6f6ae0"/>
        <function-ref name="get" scoped="" ref="0x7d6f6bc0"/>
        <function-ref name="led1Off" scoped="" ref="0x7d6f6ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7d6f40f0"/>
        <function-ref name="set" scoped="" ref="0x7d6f6e60"/>
        <function-ref name="led2Off" scoped="" ref="0x7d6f6d80"/>
        <function-ref name="led0On" scoped="" ref="0x7d6f4010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7d6f8678" loc="60:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d6f8678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d6f6010"/>
        <function-ref name="fired" scoped="" ref="0x7d6f7398"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d6f7938"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d6f7758"/>
        <function-ref name="getdt" scoped="" ref="0x7d6f63d0"/>
        <function-ref name="gett0" scoped="" ref="0x7d6f61f0"/>
        <function-ref name="isRunning" scoped="" ref="0x7d6f7578"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d6f8ca0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d6f7c58"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d6f8f20"/>
        <function-ref name="stop" scoped="" ref="0x7d6f71b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptDATA" ref="0x7d6e9b40" loc="47:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptDATA" scoped="" ref="0x7d6e9b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7d6e9d18"/>
        <function-ref name="disable" scoped="" ref="0x7d6e9df8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7d6e9ed8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7d6e8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCK" ref="0x7d6e91a8" loc="46:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7d6e91a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d6e9380"/>
        <function-ref name="isInput" scoped="" ref="0x7d6e9460"/>
        <function-ref name="toggle" scoped="" ref="0x7d6e9540"/>
        <function-ref name="isOutput" scoped="" ref="0x7d6e9620"/>
        <function-ref name="get" scoped="" ref="0x7d6e9700"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d6e97e0"/>
        <function-ref name="set" scoped="" ref="0x7d6e98c0"/>
        <function-ref name="clr" scoped="" ref="0x7d6e99a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DATA" ref="0x7d6ea7f0" loc="45:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x7d6ea7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d6ea9c8"/>
        <function-ref name="isInput" scoped="" ref="0x7d6eaaa8"/>
        <function-ref name="toggle" scoped="" ref="0x7d6eab88"/>
        <function-ref name="isOutput" scoped="" ref="0x7d6eac68"/>
        <function-ref name="get" scoped="" ref="0x7d6ead48"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d6eae28"/>
        <function-ref name="set" scoped="" ref="0x7d6eaf08"/>
        <function-ref name="clr" scoped="" ref="0x7d6e9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7d6ea100" loc="44:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7d6ea100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d6ea2d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d6ea3b8"/>
        <function-ref name="request" scoped="" ref="0x7d6ea498"/>
        <function-ref name="granted" scoped="" ref="0x7d6ea578"/>
        <function-ref name="isOwner" scoped="" ref="0x7d6ea658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7d6d9088" loc="43:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7d6d9088"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7d6d9260"/>
        <function-ref name="stopDone" scoped="" ref="0x7d6d9340"/>
        <function-ref name="start" scoped="" ref="0x7d6d9420"/>
        <function-ref name="stop" scoped="" ref="0x7d6d9500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7d6d8d78" loc="49:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7d6d8d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d6d7010"/>
        <function-ref name="runTask" scoped="" ref="0x7d6d70f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7d6d8010" loc="46:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7d6d8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d6d81e8"/>
        <function-ref name="isInput" scoped="" ref="0x7d6d82c8"/>
        <function-ref name="toggle" scoped="" ref="0x7d6d83a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7d6d8488"/>
        <function-ref name="get" scoped="" ref="0x7d6d8568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d6d8648"/>
        <function-ref name="set" scoped="" ref="0x7d6d8728"/>
        <function-ref name="clr" scoped="" ref="0x7d6d8808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x7d6e1618" loc="45:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x7d6e1618"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d6e17f0"/>
        <function-ref name="isInput" scoped="" ref="0x7d6e18d0"/>
        <function-ref name="toggle" scoped="" ref="0x7d6e19b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d6e1a90"/>
        <function-ref name="get" scoped="" ref="0x7d6e1b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d6e1c50"/>
        <function-ref name="set" scoped="" ref="0x7d6e1d30"/>
        <function-ref name="clr" scoped="" ref="0x7d6e1e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7d6d9700" loc="44:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d6d9700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d6e1068"/>
        <function-ref name="fired" scoped="" ref="0x7d6e2470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d6e2a10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d6e2830"/>
        <function-ref name="getdt" scoped="" ref="0x7d6e1428"/>
        <function-ref name="gett0" scoped="" ref="0x7d6e1248"/>
        <function-ref name="isRunning" scoped="" ref="0x7d6e2650"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d6d9d28"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d6e2d30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d6e2010"/>
        <function-ref name="stop" scoped="" ref="0x7d6e2290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7d6d3bc8" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="HplSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d6d3bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d6d1508"/>
        <function-ref name="fired" scoped="" ref="0x7d6d28f8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d6d2e98"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d6d2cb8"/>
        <function-ref name="getdt" scoped="" ref="0x7d6d18c8"/>
        <function-ref name="gett0" scoped="" ref="0x7d6d16e8"/>
        <function-ref name="isRunning" scoped="" ref="0x7d6d2ad8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d6d2218"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d6d11e8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d6d2498"/>
        <function-ref name="stop" scoped="" ref="0x7d6d2718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x7d6c17c8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x7d6c17c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d6c19a0"/>
        <function-ref name="fired" scoped="" ref="0x7d6c1a80"/>
        <function-ref name="disable" scoped="" ref="0x7d6c1b60"/>
        <function-ref name="edge" scoped="" ref="0x7d6c1c40"/>
        <function-ref name="enable" scoped="" ref="0x7d6c1d20"/>
        <function-ref name="getValue" scoped="" ref="0x7d6c1e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7d6c6010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7d6c6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d6c61e8"/>
        <function-ref name="fired" scoped="" ref="0x7d6c62c8"/>
        <function-ref name="disable" scoped="" ref="0x7d6c63a8"/>
        <function-ref name="edge" scoped="" ref="0x7d6c6488"/>
        <function-ref name="enable" scoped="" ref="0x7d6c6568"/>
        <function-ref name="getValue" scoped="" ref="0x7d6c6648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x7d6c57c8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x7d6c57c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d6c59a0"/>
        <function-ref name="fired" scoped="" ref="0x7d6c5a80"/>
        <function-ref name="disable" scoped="" ref="0x7d6c5b60"/>
        <function-ref name="edge" scoped="" ref="0x7d6c5c40"/>
        <function-ref name="enable" scoped="" ref="0x7d6c5d20"/>
        <function-ref name="getValue" scoped="" ref="0x7d6c5e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x7d6c0010" loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x7d6c0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d6c01e8"/>
        <function-ref name="fired" scoped="" ref="0x7d6c02c8"/>
        <function-ref name="disable" scoped="" ref="0x7d6c03a8"/>
        <function-ref name="edge" scoped="" ref="0x7d6c0488"/>
        <function-ref name="enable" scoped="" ref="0x7d6c0568"/>
        <function-ref name="getValue" scoped="" ref="0x7d6c0648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7d6c67c8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7d6c67c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d6c69a0"/>
        <function-ref name="fired" scoped="" ref="0x7d6c6a80"/>
        <function-ref name="disable" scoped="" ref="0x7d6c6b60"/>
        <function-ref name="edge" scoped="" ref="0x7d6c6c40"/>
        <function-ref name="enable" scoped="" ref="0x7d6c6d20"/>
        <function-ref name="getValue" scoped="" ref="0x7d6c6e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x7d6c1010" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x7d6c1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d6c11e8"/>
        <function-ref name="fired" scoped="" ref="0x7d6c12c8"/>
        <function-ref name="disable" scoped="" ref="0x7d6c13a8"/>
        <function-ref name="edge" scoped="" ref="0x7d6c1488"/>
        <function-ref name="enable" scoped="" ref="0x7d6c1568"/>
        <function-ref name="getValue" scoped="" ref="0x7d6c1648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7d6c2778" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7d6c2778"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d6c2950"/>
        <function-ref name="fired" scoped="" ref="0x7d6c2a30"/>
        <function-ref name="disable" scoped="" ref="0x7d6c2b10"/>
        <function-ref name="edge" scoped="" ref="0x7d6c2bf0"/>
        <function-ref name="enable" scoped="" ref="0x7d6c2cd0"/>
        <function-ref name="getValue" scoped="" ref="0x7d6c2db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7d6c5010" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7d6c5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d6c51e8"/>
        <function-ref name="fired" scoped="" ref="0x7d6c52c8"/>
        <function-ref name="disable" scoped="" ref="0x7d6c53a8"/>
        <function-ref name="edge" scoped="" ref="0x7d6c5488"/>
        <function-ref name="enable" scoped="" ref="0x7d6c5568"/>
        <function-ref name="getValue" scoped="" ref="0x7d6c5648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x7d6b6ce8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x7d6b6ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7d6b6ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x7d6b4b80" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x7d6b4b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7d6b4d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x7d6b65f8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x7d6b65f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7d6b67d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x7d6b5088" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x7d6b5088"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7d6b5260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x7d6b4ef8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x7d6b4ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7d6b60e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x7d6b6970" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x7d6b6970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7d6b6b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x7d6b4808" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x7d6b4808"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7d6b49e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x7d6b6280" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x7d6b6280"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7d6b6458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7d6a2228" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7d6a2228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d6a2400"/>
        <function-ref name="fired" scoped="" ref="0x7d6a24e0"/>
        <function-ref name="disable" scoped="" ref="0x7d6a25c0"/>
        <function-ref name="edge" scoped="" ref="0x7d6a26a0"/>
        <function-ref name="enable" scoped="" ref="0x7d6a2780"/>
        <function-ref name="getValue" scoped="" ref="0x7d6a2860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7d6a29e0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7d6a29e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7d6a2bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7d692228" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7d692228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d692400"/>
        <function-ref name="fired" scoped="" ref="0x7d6924e0"/>
        <function-ref name="disable" scoped="" ref="0x7d6925c0"/>
        <function-ref name="edge" scoped="" ref="0x7d6926a0"/>
        <function-ref name="enable" scoped="" ref="0x7d692780"/>
        <function-ref name="getValue" scoped="" ref="0x7d692860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7d6929e0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7d6929e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7d692bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7d68b228" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7d68b228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d68b400"/>
        <function-ref name="fired" scoped="" ref="0x7d68b4e0"/>
        <function-ref name="disable" scoped="" ref="0x7d68b5c0"/>
        <function-ref name="edge" scoped="" ref="0x7d68b6a0"/>
        <function-ref name="enable" scoped="" ref="0x7d68b780"/>
        <function-ref name="getValue" scoped="" ref="0x7d68b860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7d68b9e0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7d68b9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7d68bbb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7d689228" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7d689228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d689400"/>
        <function-ref name="fired" scoped="" ref="0x7d6894e0"/>
        <function-ref name="disable" scoped="" ref="0x7d6895c0"/>
        <function-ref name="edge" scoped="" ref="0x7d6896a0"/>
        <function-ref name="enable" scoped="" ref="0x7d689780"/>
        <function-ref name="getValue" scoped="" ref="0x7d689860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7d6899e0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7d6899e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7d689bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7d6872d0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7d6872d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d6874a8"/>
        <function-ref name="fired" scoped="" ref="0x7d687588"/>
        <function-ref name="disable" scoped="" ref="0x7d687668"/>
        <function-ref name="edge" scoped="" ref="0x7d687748"/>
        <function-ref name="enable" scoped="" ref="0x7d687828"/>
        <function-ref name="getValue" scoped="" ref="0x7d687908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7d687a88" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7d687a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7d687c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7d6853b0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7d6853b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d685588"/>
        <function-ref name="fired" scoped="" ref="0x7d685668"/>
        <function-ref name="disable" scoped="" ref="0x7d685748"/>
        <function-ref name="edge" scoped="" ref="0x7d685828"/>
        <function-ref name="enable" scoped="" ref="0x7d685908"/>
        <function-ref name="getValue" scoped="" ref="0x7d6859e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7d685b68" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7d685b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7d685d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7d682538" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7d682538"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d682710"/>
        <function-ref name="fired" scoped="" ref="0x7d6827f0"/>
        <function-ref name="disable" scoped="" ref="0x7d6828d0"/>
        <function-ref name="edge" scoped="" ref="0x7d6829b0"/>
        <function-ref name="enable" scoped="" ref="0x7d682a90"/>
        <function-ref name="getValue" scoped="" ref="0x7d682b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7d682cf0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7d682cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7d682ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7d6805e0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7d6805e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d6807b8"/>
        <function-ref name="fired" scoped="" ref="0x7d680898"/>
        <function-ref name="disable" scoped="" ref="0x7d680978"/>
        <function-ref name="edge" scoped="" ref="0x7d680a58"/>
        <function-ref name="enable" scoped="" ref="0x7d680b38"/>
        <function-ref name="getValue" scoped="" ref="0x7d680c18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7d680d98" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7d680d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7d67c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7d676050" loc="9:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7d676050"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d676228"/>
        <function-ref name="fired" scoped="" ref="0x7d676308"/>
        <function-ref name="disable" scoped="" ref="0x7d6763e8"/>
        <function-ref name="edge" scoped="" ref="0x7d6764c8"/>
        <function-ref name="enable" scoped="" ref="0x7d6765a8"/>
        <function-ref name="getValue" scoped="" ref="0x7d676688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7d677a28" loc="8:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7d677a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7d677c00"/>
        <function-ref name="disable" scoped="" ref="0x7d677ce0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7d677dc0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7d677ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7d614c20" loc="82:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7d614c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7d614e08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7d614ee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7d613b88" loc="86:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7d613b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7d613d70"/>
        <function-ref name="configure" scoped="" ref="0x7d613e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceController" ref="0x7d613040" loc="83:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceController" scoped="" ref="0x7d613040"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceController"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d613218"/>
        <function-ref name="requested" scoped="" ref="0x7d6132f8"/>
        <function-ref name="granted" scoped="" ref="0x7d6133d8"/>
        <function-ref name="isOwner" scoped="" ref="0x7d6134b8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7d613598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7d6144e0" loc="81:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7d6144e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d6146c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d6147a8"/>
        <function-ref name="request" scoped="" ref="0x7d614888"/>
        <function-ref name="granted" scoped="" ref="0x7d614968"/>
        <function-ref name="isOwner" scoped="" ref="0x7d614a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7d6136d8" loc="84:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7d6136d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7d6138b0"/>
        <function-ref name="userId" scoped="" ref="0x7d613990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ca90358" loc="34:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ca90358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ca90530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7ca90690" loc="35:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7ca90690"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7ca90868"/>
        <function-ref name="isEmpty" scoped="" ref="0x7ca90948"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7ca90a28"/>
        <function-ref name="dequeue" scoped="" ref="0x7ca90b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7ca8c010" loc="54:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7ca8c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7ca8c1f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ca8c2d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7ca8b010" loc="59:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ca8b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ca8b1f8"/>
        <function-ref name="configure" scoped="" ref="0x7ca8b2d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7ca8b438" loc="60:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7ca8b438"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7ca8b610"/>
        <function-ref name="isEmpty" scoped="" ref="0x7ca8b6f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7ca8b7d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7ca8b8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceController" ref="0x7ca8c418" loc="55:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceController" scoped="" ref="0x7ca8c418"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceController"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ca8c5f0"/>
        <function-ref name="requested" scoped="" ref="0x7ca8c6d0"/>
        <function-ref name="granted" scoped="" ref="0x7ca8c7b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ca8c890"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ca8c970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ca8b9f0" loc="61:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7ca8b9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ca8bbc8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ca8bca8"/>
        <function-ref name="led1On" scoped="" ref="0x7ca8bd88"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ca8be68"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ca8a010"/>
        <function-ref name="get" scoped="" ref="0x7ca8a0f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7ca8a1d0"/>
        <function-ref name="led0On" scoped="" ref="0x7ca8a550"/>
        <function-ref name="set" scoped="" ref="0x7ca8a390"/>
        <function-ref name="led2On" scoped="" ref="0x7ca8a2b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7ca8a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ca8d7f0" loc="53:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7ca8d7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ca8d9d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ca8dab8"/>
        <function-ref name="request" scoped="" ref="0x7ca8db98"/>
        <function-ref name="granted" scoped="" ref="0x7ca8dc78"/>
        <function-ref name="isOwner" scoped="" ref="0x7ca8dd58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7ca8cab0" loc="56:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ca8cab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ca8cc88"/>
        <function-ref name="userId" scoped="" ref="0x7ca8cd68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7ca8a6d0" loc="73:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7ca8a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ca8a8a8"/>
        <function-ref name="runTask" scoped="" ref="0x7ca8a988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7d610980" loc="59:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7d610980"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7d610b58"/>
        <function-ref name="stopDone" scoped="" ref="0x7d610c38"/>
        <function-ref name="start" scoped="" ref="0x7d610d18"/>
        <function-ref name="stop" scoped="" ref="0x7d610df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7d60c010" loc="61:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7d60c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7d60c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceController" ref="0x7d60c328" loc="62:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceController" scoped="" ref="0x7d60c328"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceController"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d60c500"/>
        <function-ref name="requested" scoped="" ref="0x7d60c5e0"/>
        <function-ref name="granted" scoped="" ref="0x7d60c6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7d60c7a0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7d60c880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7d60c9c0" loc="63:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7d60c9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7d60cb98"/>
        <function-ref name="userId" scoped="" ref="0x7d60cc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7ca72898" loc="51:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7ca72898"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ca72a70"/>
        <function-ref name="stopDone" scoped="" ref="0x7ca72b50"/>
        <function-ref name="start" scoped="" ref="0x7ca72c30"/>
        <function-ref name="stop" scoped="" ref="0x7ca72d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7ca72e50" loc="53:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7ca72e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7ca71050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7ca71c60" loc="68:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7ca71c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ca71e38"/>
        <function-ref name="runTask" scoped="" ref="0x7ca71f18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceController" ref="0x7ca71190" loc="54:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceController" scoped="" ref="0x7ca71190"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceController"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ca71368"/>
        <function-ref name="requested" scoped="" ref="0x7ca71448"/>
        <function-ref name="granted" scoped="" ref="0x7ca71528"/>
        <function-ref name="isOwner" scoped="" ref="0x7ca71608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ca716e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7ca700b0" loc="63:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7ca700b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ca70288"/>
        <function-ref name="runTask" scoped="" ref="0x7ca70368"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7ca724a0" loc="50:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7ca724a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ca72678"/>
        <function-ref name="stop" scoped="" ref="0x7ca72758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7ca71828" loc="55:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ca71828"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ca71a00"/>
        <function-ref name="userId" scoped="" ref="0x7ca71ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7d5e85d8" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="HalSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d5e85d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d5e7ed0"/>
        <function-ref name="fired" scoped="" ref="0x7d5e72f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d5e7890"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d5e76b0"/>
        <function-ref name="getdt" scoped="" ref="0x7d5e62b8"/>
        <function-ref name="gett0" scoped="" ref="0x7d5e60d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7d5e74d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d5e8c00"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d5e7bb0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d5e8e80"/>
        <function-ref name="stop" scoped="" ref="0x7d5e7110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7d4deac8" loc="21:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoSensorC.nc">
      <component-ref qname="InteractionC.PhotoSensorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7d4deac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d5dc108"/>
        <function-ref name="readDone" scoped="" ref="0x7d5dc2e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7ca63aa0" loc="28:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoC.nc">
      <component-ref qname="InteractionC.PhotoSensorC.DemoChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7ca63aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ca62100"/>
        <function-ref name="readDone" scoped="" ref="0x7ca622e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7ca61258" loc="28:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc">
      <component-ref qname="InteractionC.PhotoSensorC.DemoChannel.ADC_ShiftM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7ca61258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ca61880"/>
        <function-ref name="readDone" scoped="" ref="0x7ca61a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="subRead" ref="0x7ca61e08" loc="29:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc">
      <component-ref qname="InteractionC.PhotoSensorC.DemoChannel.ADC_ShiftM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="subRead" scoped="" ref="0x7ca61e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ca60448"/>
        <function-ref name="readDone" scoped="" ref="0x7ca60628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7ca5e1c8" loc="27:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoProC.nc">
      <component-ref qname="InteractionC.PhotoSensorC.DemoChannel.PhotoProC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7ca5e1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ca5e7f0"/>
        <function-ref name="readDone" scoped="" ref="0x7ca5e9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7ca5b7f0" loc="25:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="InteractionC.PhotoSensorC.DemoChannel.PhotoProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ca5b7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ca5b9c8"/>
        <function-ref name="configure" scoped="" ref="0x7ca5baa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7ca5c750" loc="22:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="InteractionC.PhotoSensorC.DemoChannel.PhotoProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7ca5c750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ca5cd78"/>
        <function-ref name="readDone" scoped="" ref="0x7ca5b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7ca5b318" loc="24:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="InteractionC.PhotoSensorC.DemoChannel.PhotoProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7ca5b318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7ca5b4f0"/>
        <function-ref name="getChannel" scoped="" ref="0x7ca5b5d0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7ca5b6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7d5b5800" loc="18:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7d5b5800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d5b5e28"/>
        <function-ref name="readDone" scoped="" ref="0x7d5b4048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7d5ad390" loc="19:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7d5ad390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d5ad9d8"/>
        <function-ref name="readDone" scoped="" ref="0x7d5adbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7d5b11a8" loc="22:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d5b11a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7d5b1380"/>
        <function-ref name="getChannel" scoped="" ref="0x7d5b1460"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7d5b1540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7d5b1920" loc="23:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7d5b1920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d5b1af8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d5b1bd8"/>
        <function-ref name="request" scoped="" ref="0x7d5b1cb8"/>
        <function-ref name="granted" scoped="" ref="0x7d5b1d98"/>
        <function-ref name="isOwner" scoped="" ref="0x7d5b1e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7d5a4100" loc="49:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7d5a4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7d5a42d8"/>
        <function-ref name="configure" scoped="" ref="0x7d5a43b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x7d5999c0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7d5999c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7d599b98"/>
        <function-ref name="dataReady" scoped="" ref="0x7d599c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x7d5a0568" loc="46:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7d5a0568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7d5a0740"/>
        <function-ref name="cancel" scoped="" ref="0x7d5a0820"/>
        <function-ref name="dataReady" scoped="" ref="0x7d5a0900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7d5a86e8" loc="45:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7d5a86e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d5a88c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d5a89a0"/>
        <function-ref name="request" scoped="" ref="0x7d5a8a80"/>
        <function-ref name="granted" scoped="" ref="0x7d5a8b60"/>
        <function-ref name="isOwner" scoped="" ref="0x7d5a8c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d596d30" loc="65:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d596d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d596f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x7d592040" loc="68:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7d592040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7d592218"/>
        <function-ref name="dataReady" scoped="" ref="0x7d5922f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x7d591b18" loc="67:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7d591b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7d591cf0"/>
        <function-ref name="cancel" scoped="" ref="0x7d591dd0"/>
        <function-ref name="dataReady" scoped="" ref="0x7d591eb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x7d585468" loc="71:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7d585468"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7d585640"/>
        <function-ref name="getAdmux" scoped="" ref="0x7d585720"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7d585800"/>
        <function-ref name="isEnabled" scoped="" ref="0x7d5858e0"/>
        <function-ref name="enableAdc" scoped="" ref="0x7d5859c0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7d585aa0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7d585b80"/>
        <function-ref name="isComplete" scoped="" ref="0x7d585c60"/>
        <function-ref name="cancel" scoped="" ref="0x7d585d40"/>
        <function-ref name="disableAdc" scoped="" ref="0x7d585e20"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7d585f00"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7d58d010"/>
        <function-ref name="startConversion" scoped="" ref="0x7d58d0f0"/>
        <function-ref name="isStarted" scoped="" ref="0x7d58d250"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7d58d330"/>
        <function-ref name="setContinuous" scoped="" ref="0x7d58d410"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7d58d4f0"/>
        <function-ref name="getValue" scoped="" ref="0x7d58d5d0"/>
        <function-ref name="dataReady" scoped="" ref="0x7d58d6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7d591710" loc="66:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7d591710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d5918e8"/>
        <function-ref name="stop" scoped="" ref="0x7d5919c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7d58d800" loc="72:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7d58d800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7d58d9d8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7d58dab8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7d58db98"/>
        <function-ref name="actualMicro" scoped="" ref="0x7d58dc78"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7d58dd58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x7d566468" loc="36:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7d566468"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7d566640"/>
        <function-ref name="getAdmux" scoped="" ref="0x7d566720"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7d566800"/>
        <function-ref name="isEnabled" scoped="" ref="0x7d5668e0"/>
        <function-ref name="enableAdc" scoped="" ref="0x7d5669c0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7d566aa0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7d566b80"/>
        <function-ref name="isComplete" scoped="" ref="0x7d566c60"/>
        <function-ref name="cancel" scoped="" ref="0x7d566d40"/>
        <function-ref name="disableAdc" scoped="" ref="0x7d566e20"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7d566f00"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7d565010"/>
        <function-ref name="startConversion" scoped="" ref="0x7d5650f0"/>
        <function-ref name="isStarted" scoped="" ref="0x7d565250"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7d565330"/>
        <function-ref name="setContinuous" scoped="" ref="0x7d565410"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7d5654f0"/>
        <function-ref name="getValue" scoped="" ref="0x7d5655d0"/>
        <function-ref name="dataReady" scoped="" ref="0x7d5656b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x7d561c70" loc="36:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7d561c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7d561e48"/>
        <function-ref name="getAdmux" scoped="" ref="0x7d561f28"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7d560018"/>
        <function-ref name="isEnabled" scoped="" ref="0x7d5600f8"/>
        <function-ref name="enableAdc" scoped="" ref="0x7d5601d8"/>
        <function-ref name="setAdmux" scoped="" ref="0x7d5602b8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7d560398"/>
        <function-ref name="isComplete" scoped="" ref="0x7d560478"/>
        <function-ref name="cancel" scoped="" ref="0x7d560558"/>
        <function-ref name="disableAdc" scoped="" ref="0x7d560638"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7d560718"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7d5607f8"/>
        <function-ref name="startConversion" scoped="" ref="0x7d5608d8"/>
        <function-ref name="isStarted" scoped="" ref="0x7d560a38"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7d560b18"/>
        <function-ref name="setContinuous" scoped="" ref="0x7d560bf8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7d560cd8"/>
        <function-ref name="getValue" scoped="" ref="0x7d560db8"/>
        <function-ref name="dataReady" scoped="" ref="0x7d560e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7d55d040" loc="37:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7d55d040"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7d55d218"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7d540808" loc="82:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7d540808"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7d5409f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7d540ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7d5247c0" loc="86:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7d5247c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7d5249a8"/>
        <function-ref name="configure" scoped="" ref="0x7d524a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceController" ref="0x7d540c10" loc="83:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceController" scoped="" ref="0x7d540c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceController"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d540de8"/>
        <function-ref name="requested" scoped="" ref="0x7d540ec8"/>
        <function-ref name="granted" scoped="" ref="0x7d524010"/>
        <function-ref name="isOwner" scoped="" ref="0x7d5240f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7d5241d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7d5400c8" loc="81:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7d5400c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d5402b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d540390"/>
        <function-ref name="request" scoped="" ref="0x7d540470"/>
        <function-ref name="granted" scoped="" ref="0x7d540550"/>
        <function-ref name="isOwner" scoped="" ref="0x7d540630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7d524310" loc="84:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7d524310"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7d5244e8"/>
        <function-ref name="userId" scoped="" ref="0x7d5245c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ca51758" loc="34:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ca51758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ca51930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7ca51a90" loc="35:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7ca51a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7ca51c68"/>
        <function-ref name="isEmpty" scoped="" ref="0x7ca51d48"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7ca51e28"/>
        <function-ref name="dequeue" scoped="" ref="0x7ca51f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7ca4d3a8" loc="54:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7ca4d3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7ca4d590"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ca4d670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7ca4c338" loc="59:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ca4c338"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ca4c520"/>
        <function-ref name="configure" scoped="" ref="0x7ca4c600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7ca4c760" loc="60:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7ca4c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7ca4c938"/>
        <function-ref name="isEmpty" scoped="" ref="0x7ca4ca18"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7ca4caf8"/>
        <function-ref name="dequeue" scoped="" ref="0x7ca4cbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceController" ref="0x7ca4d7b0" loc="55:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceController" scoped="" ref="0x7ca4d7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceController"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ca4d988"/>
        <function-ref name="requested" scoped="" ref="0x7ca4da68"/>
        <function-ref name="granted" scoped="" ref="0x7ca4db48"/>
        <function-ref name="isOwner" scoped="" ref="0x7ca4dc28"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ca4dd08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ca4cd18" loc="61:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7ca4cd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ca4cef0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ca4a010"/>
        <function-ref name="led1On" scoped="" ref="0x7ca4a0f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ca4a1d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ca4a2b0"/>
        <function-ref name="get" scoped="" ref="0x7ca4a390"/>
        <function-ref name="led1Off" scoped="" ref="0x7ca4a470"/>
        <function-ref name="led0On" scoped="" ref="0x7ca4a7f0"/>
        <function-ref name="set" scoped="" ref="0x7ca4a630"/>
        <function-ref name="led2On" scoped="" ref="0x7ca4a550"/>
        <function-ref name="led2Off" scoped="" ref="0x7ca4a710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ca50bf0" loc="53:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7ca50bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ca50dd8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ca50eb8"/>
        <function-ref name="request" scoped="" ref="0x7ca4d010"/>
        <function-ref name="granted" scoped="" ref="0x7ca4d0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ca4d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7ca4de48" loc="56:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ca4de48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ca4c050"/>
        <function-ref name="userId" scoped="" ref="0x7ca4c130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7ca4a970" loc="73:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7ca4a970"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ca4ab48"/>
        <function-ref name="runTask" scoped="" ref="0x7ca4ac28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7d51e230" loc="62:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7d51e230"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7d51e408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceController" ref="0x7d51e548" loc="63:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceController" scoped="" ref="0x7d51e548"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceController"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d51e720"/>
        <function-ref name="requested" scoped="" ref="0x7d51e800"/>
        <function-ref name="granted" scoped="" ref="0x7d51e8e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7d51e9c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7d51eaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7d520da8" loc="60:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7d520da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d51e010"/>
        <function-ref name="stop" scoped="" ref="0x7d51e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7d51ebe0" loc="64:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7d51ebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7d51edb8"/>
        <function-ref name="userId" scoped="" ref="0x7d51ee98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7ca32d60" loc="52:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7ca32d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7ca31010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceController" ref="0x7ca31150" loc="53:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceController" scoped="" ref="0x7ca31150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceController"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ca31328"/>
        <function-ref name="requested" scoped="" ref="0x7ca31408"/>
        <function-ref name="granted" scoped="" ref="0x7ca314e8"/>
        <function-ref name="isOwner" scoped="" ref="0x7ca315c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ca316a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7ca32968" loc="50:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7ca32968"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ca32b40"/>
        <function-ref name="stop" scoped="" ref="0x7ca32c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7ca317e8" loc="54:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ca317e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ca319c0"/>
        <function-ref name="userId" scoped="" ref="0x7ca31aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7d50c700" loc="48:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7d50c700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d50cd28"/>
        <function-ref name="readDone" scoped="" ref="0x7d50cf08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7d50a530" loc="49:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7d50a530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d50ab78"/>
        <function-ref name="readDone" scoped="" ref="0x7d50ad78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7d509838" loc="53:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d509838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7d509a10"/>
        <function-ref name="getChannel" scoped="" ref="0x7d509af0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7d509bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x7d5090c0" loc="52:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7d5090c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7d509298"/>
        <function-ref name="cancel" scoped="" ref="0x7d509378"/>
        <function-ref name="dataReady" scoped="" ref="0x7d509458"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x7d501d10" loc="103:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x7d501d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d501ee8"/>
        <function-ref name="runTask" scoped="" ref="0x7d500010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7d4f4670" loc="24:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7d4f4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d4f4ca8"/>
        <function-ref name="readDone" scoped="" ref="0x7d4f4e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7d4e6318" loc="26:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7d4e6318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d4e6950"/>
        <function-ref name="readDone" scoped="" ref="0x7d4e6b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7d4e6ec0" loc="27:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7d4e6ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d4e50c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d4e51a0"/>
        <function-ref name="request" scoped="" ref="0x7d4e5280"/>
        <function-ref name="granted" scoped="" ref="0x7d4e5360"/>
        <function-ref name="isOwner" scoped="" ref="0x7d4e5440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7d4dd690" loc="31:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoDeviceP.nc">
      <component-ref qname="PhotoDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7d4dd690"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7d4dd868"/>
        <function-ref name="configure" scoped="" ref="0x7d4dd948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x7d4dda98" loc="32:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoDeviceP.nc">
      <component-ref qname="PhotoDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d4dda98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7d4ddc70"/>
        <function-ref name="getChannel" scoped="" ref="0x7d4ddd50"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7d4dde30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7d4dcd80" loc="30:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoP.nc">
      <component-ref qname="PhotoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7d4dcd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7d4d8010"/>
        <function-ref name="configure" scoped="" ref="0x7d4d80f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoPin" ref="0x7d4d8798" loc="34:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoP.nc">
      <component-ref qname="PhotoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoPin" scoped="" ref="0x7d4d8798"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d4d8970"/>
        <function-ref name="isInput" scoped="" ref="0x7d4d8a50"/>
        <function-ref name="toggle" scoped="" ref="0x7d4d8b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7d4d8c10"/>
        <function-ref name="get" scoped="" ref="0x7d4d8cf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d4d8dd0"/>
        <function-ref name="set" scoped="" ref="0x7d4d8eb0"/>
        <function-ref name="clr" scoped="" ref="0x7d4d7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x7d4d8240" loc="31:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoP.nc">
      <component-ref qname="PhotoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d4d8240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7d4d8418"/>
        <function-ref name="getChannel" scoped="" ref="0x7d4d84f8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7d4d85d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7d4d3410" loc="36:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoP.nc">
      <component-ref qname="PhotoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7d4d3410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7d4d35e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7d4d36c8"/>
        <function-ref name="led1On" scoped="" ref="0x7d4d37a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7d4d3888"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7d4d3968"/>
        <function-ref name="get" scoped="" ref="0x7d4d3a48"/>
        <function-ref name="led1Off" scoped="" ref="0x7d4d3b28"/>
        <function-ref name="led2Off" scoped="" ref="0x7d4d3ea8"/>
        <function-ref name="set" scoped="" ref="0x7d4d3c08"/>
        <function-ref name="led0On" scoped="" ref="0x7d4d3ce8"/>
        <function-ref name="led2On" scoped="" ref="0x7d4d3dc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoAdc" ref="0x7d4d30f0" loc="35:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoP.nc">
      <component-ref qname="PhotoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoAdc" scoped="" ref="0x7d4d30f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7d4d32c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x7d4c7e78" loc="40:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x7d4c7e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7d4c6070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW3" ref="0x7d4ca428" loc="32:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW3" scoped="" ref="0x7d4ca428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d4ca600"/>
        <function-ref name="isInput" scoped="" ref="0x7d4ca6e0"/>
        <function-ref name="toggle" scoped="" ref="0x7d4ca7c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d4ca8a0"/>
        <function-ref name="get" scoped="" ref="0x7d4ca980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d4caa60"/>
        <function-ref name="set" scoped="" ref="0x7d4cab40"/>
        <function-ref name="clr" scoped="" ref="0x7d4cac20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW6" ref="0x7d4c8188" loc="35:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW6" scoped="" ref="0x7d4c8188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d4c8360"/>
        <function-ref name="isInput" scoped="" ref="0x7d4c8440"/>
        <function-ref name="toggle" scoped="" ref="0x7d4c8520"/>
        <function-ref name="isOutput" scoped="" ref="0x7d4c8600"/>
        <function-ref name="get" scoped="" ref="0x7d4c86e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d4c87c0"/>
        <function-ref name="set" scoped="" ref="0x7d4c88a0"/>
        <function-ref name="clr" scoped="" ref="0x7d4c8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x7d4c6888" loc="43:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x7d4c6888"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7d4c6ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x7d4c5010" loc="45:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x7d4c5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7d4c51e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW1" ref="0x7d4cb088" loc="30:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW1" scoped="" ref="0x7d4cb088"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d4cb260"/>
        <function-ref name="isInput" scoped="" ref="0x7d4cb340"/>
        <function-ref name="toggle" scoped="" ref="0x7d4cb420"/>
        <function-ref name="isOutput" scoped="" ref="0x7d4cb500"/>
        <function-ref name="get" scoped="" ref="0x7d4cb5e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d4cb6c0"/>
        <function-ref name="set" scoped="" ref="0x7d4cb7a0"/>
        <function-ref name="clr" scoped="" ref="0x7d4cb880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW4" ref="0x7d4cad98" loc="33:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW4" scoped="" ref="0x7d4cad98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d4c9010"/>
        <function-ref name="isInput" scoped="" ref="0x7d4c90f0"/>
        <function-ref name="toggle" scoped="" ref="0x7d4c91d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d4c92b0"/>
        <function-ref name="get" scoped="" ref="0x7d4c9390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d4c9470"/>
        <function-ref name="set" scoped="" ref="0x7d4c9550"/>
        <function-ref name="clr" scoped="" ref="0x7d4c9630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7d4c7508" loc="37:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7d4c7508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d4c76e0"/>
        <function-ref name="isInput" scoped="" ref="0x7d4c77c0"/>
        <function-ref name="toggle" scoped="" ref="0x7d4c78a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d4c7980"/>
        <function-ref name="get" scoped="" ref="0x7d4c7a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d4c7b40"/>
        <function-ref name="set" scoped="" ref="0x7d4c7c20"/>
        <function-ref name="clr" scoped="" ref="0x7d4c7d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x7d4c61e8" loc="41:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x7d4c61e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7d4c63c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW7" ref="0x7d4c8af8" loc="36:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW7" scoped="" ref="0x7d4c8af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d4c8cd0"/>
        <function-ref name="isInput" scoped="" ref="0x7d4c8db0"/>
        <function-ref name="toggle" scoped="" ref="0x7d4c8e90"/>
        <function-ref name="isOutput" scoped="" ref="0x7d4c7010"/>
        <function-ref name="get" scoped="" ref="0x7d4c70f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d4c71d0"/>
        <function-ref name="set" scoped="" ref="0x7d4c72b0"/>
        <function-ref name="clr" scoped="" ref="0x7d4c7390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x7d4c5360" loc="46:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x7d4c5360"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7d4c5538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW2" ref="0x7d4cb9f8" loc="31:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW2" scoped="" ref="0x7d4cb9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d4cbbd0"/>
        <function-ref name="isInput" scoped="" ref="0x7d4cbcb0"/>
        <function-ref name="toggle" scoped="" ref="0x7d4cbd90"/>
        <function-ref name="isOutput" scoped="" ref="0x7d4cbe70"/>
        <function-ref name="get" scoped="" ref="0x7d4ca010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d4ca0f0"/>
        <function-ref name="set" scoped="" ref="0x7d4ca1d0"/>
        <function-ref name="clr" scoped="" ref="0x7d4ca2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW5" ref="0x7d4c97a8" loc="34:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW5" scoped="" ref="0x7d4c97a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d4c9980"/>
        <function-ref name="isInput" scoped="" ref="0x7d4c9a60"/>
        <function-ref name="toggle" scoped="" ref="0x7d4c9b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7d4c9c20"/>
        <function-ref name="get" scoped="" ref="0x7d4c9d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d4c9de0"/>
        <function-ref name="set" scoped="" ref="0x7d4c9ec0"/>
        <function-ref name="clr" scoped="" ref="0x7d4c8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x7d4c6538" loc="42:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x7d4c6538"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7d4c6710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x7d4c6c58" loc="44:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x7d4c6c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7d4c6e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x7d4c56b0" loc="47:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x7d4c56b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7d4c5888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW0" ref="0x7d4cc6e8" loc="29:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW0" scoped="" ref="0x7d4cc6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d4cc8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7d4cc9a0"/>
        <function-ref name="toggle" scoped="" ref="0x7d4cca80"/>
        <function-ref name="isOutput" scoped="" ref="0x7d4ccb60"/>
        <function-ref name="get" scoped="" ref="0x7d4ccc40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d4ccd20"/>
        <function-ref name="set" scoped="" ref="0x7d4cce00"/>
        <function-ref name="clr" scoped="" ref="0x7d4ccee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x7d4c3908" loc="29:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusP.nc">
      <component-ref qname="ZigbexBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x7d4c3908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7d4c3ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x7d4c0360" loc="32:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusP.nc">
      <component-ref qname="ZigbexBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x7d4c0360"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7d4c0538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x7d4c0a00" loc="34:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusP.nc">
      <component-ref qname="ZigbexBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x7d4c0a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7d4c0bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x7d4c3c58" loc="30:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusP.nc">
      <component-ref qname="ZigbexBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x7d4c3c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7d4c3e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x7d4c0d50" loc="35:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusP.nc">
      <component-ref qname="ZigbexBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x7d4c0d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7d4c0f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x7d4c0010" loc="31:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusP.nc">
      <component-ref qname="ZigbexBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x7d4c0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7d4c01e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x7d4c06b0" loc="33:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusP.nc">
      <component-ref qname="ZigbexBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x7d4c06b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7d4c0888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x7d4bf0b0" loc="36:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusP.nc">
      <component-ref qname="ZigbexBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x7d4bf0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7d4bf288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7d4b6990" loc="21:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredSensorC.nc">
      <component-ref qname="InteractionC.UltraredSensorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7d4b6990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d4b5010"/>
        <function-ref name="readDone" scoped="" ref="0x7d4b51f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7ca241c8" loc="28:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredC.nc">
      <component-ref qname="InteractionC.UltraredSensorC.DemoChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7ca241c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ca247f0"/>
        <function-ref name="readDone" scoped="" ref="0x7ca249d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7ca23948" loc="28:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc">
      <component-ref qname="InteractionC.UltraredSensorC.DemoChannel.ADC_ShiftM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7ca23948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ca22010"/>
        <function-ref name="readDone" scoped="" ref="0x7ca221f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="subRead" ref="0x7ca22598" loc="29:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc">
      <component-ref qname="InteractionC.UltraredSensorC.DemoChannel.ADC_ShiftM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="subRead" scoped="" ref="0x7ca22598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ca22bc0"/>
        <function-ref name="readDone" scoped="" ref="0x7ca22da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7ca21928" loc="30:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredProC.nc">
      <component-ref qname="InteractionC.UltraredSensorC.DemoChannel.UltraredProC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7ca21928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ca20010"/>
        <function-ref name="readDone" scoped="" ref="0x7ca201f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7ca1c010" loc="25:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="InteractionC.UltraredSensorC.DemoChannel.UltraredProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ca1c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ca1c1e8"/>
        <function-ref name="configure" scoped="" ref="0x7ca1c2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7ca1d010" loc="22:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="InteractionC.UltraredSensorC.DemoChannel.UltraredProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7ca1d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ca1d638"/>
        <function-ref name="readDone" scoped="" ref="0x7ca1d818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7ca1db20" loc="24:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="InteractionC.UltraredSensorC.DemoChannel.UltraredProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7ca1db20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7ca1dcf8"/>
        <function-ref name="getChannel" scoped="" ref="0x7ca1ddd8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7ca1deb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7d4a0060" loc="31:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredDeviceP.nc">
      <component-ref qname="UltraredDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7d4a0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7d4a0238"/>
        <function-ref name="configure" scoped="" ref="0x7d4a0318"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x7d4a0468" loc="32:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredDeviceP.nc">
      <component-ref qname="UltraredDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d4a0468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7d4a0640"/>
        <function-ref name="getChannel" scoped="" ref="0x7d4a0720"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7d4a0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7d49c758" loc="30:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredP.nc">
      <component-ref qname="UltraredP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7d49c758"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7d49c930"/>
        <function-ref name="configure" scoped="" ref="0x7d49ca10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UltraredAdc" ref="0x7d49ba58" loc="35:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredP.nc">
      <component-ref qname="UltraredP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UltraredAdc" scoped="" ref="0x7d49ba58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7d49bc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UltraredPin" ref="0x7d49b0e0" loc="34:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredP.nc">
      <component-ref qname="UltraredP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UltraredPin" scoped="" ref="0x7d49b0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d49b2b8"/>
        <function-ref name="isInput" scoped="" ref="0x7d49b398"/>
        <function-ref name="toggle" scoped="" ref="0x7d49b478"/>
        <function-ref name="isOutput" scoped="" ref="0x7d49b558"/>
        <function-ref name="get" scoped="" ref="0x7d49b638"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d49b718"/>
        <function-ref name="set" scoped="" ref="0x7d49b7f8"/>
        <function-ref name="clr" scoped="" ref="0x7d49b8d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x7d49cb60" loc="31:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredP.nc">
      <component-ref qname="UltraredP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d49cb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7d49cd38"/>
        <function-ref name="getChannel" scoped="" ref="0x7d49ce18"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7d49cef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CommunicationWithOPT" ref="0x7d49db58" loc="23:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTC.nc">
      <component-ref qname="CommunicationWithOPTC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CommunicationWithOPT" scoped="" ref="0x7d49db58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CommunicationWithOPT"/>
      </instance>
      <interface-functions>
        <function-ref name="parsing_config" scoped="" ref="0x7d494630"/>
        <function-ref name="RequestLongMSG" scoped="" ref="0x7d49de10"/>
        <function-ref name="SpecialControlMSG" scoped="" ref="0x7d49def0"/>
        <function-ref name="parsing_control" scoped="" ref="0x7d494010"/>
        <function-ref name="parsing_longDT" scoped="" ref="0x7d4940f0"/>
        <function-ref name="RequestSensorMSG" scoped="" ref="0x7d4941d0"/>
        <function-ref name="SendConfigureMSG" scoped="" ref="0x7d4942b0"/>
        <function-ref name="SendLongMSG" scoped="" ref="0x7d494390"/>
        <function-ref name="start" scoped="" ref="0x7d494470"/>
        <function-ref name="SendControlMSG" scoped="" ref="0x7d494550"/>
        <function-ref name="parsing_sensor" scoped="" ref="0x7d49dd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HPLUART" ref="0x7d4889c8" loc="25:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTM.nc">
      <component-ref qname="CommunicationWithOPTM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HPLUART" scoped="" ref="0x7d4889c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7d488ba0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7d488c80"/>
        <function-ref name="rxDone" scoped="" ref="0x7d488d60"/>
        <function-ref name="txDone" scoped="" ref="0x7d488e40"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7d488f20"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7d48d018"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7d48d0f8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7d48d1d8"/>
        <function-ref name="tx" scoped="" ref="0x7d48d2b8"/>
        <function-ref name="rx" scoped="" ref="0x7d48d398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x7d48f2a8" loc="23:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTM.nc">
      <component-ref qname="CommunicationWithOPTM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x7d48f2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d48f480"/>
        <function-ref name="stop" scoped="" ref="0x7d48f560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CommunicationWithOPT" ref="0x7d4905e8" loc="21:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTM.nc">
      <component-ref qname="CommunicationWithOPTM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CommunicationWithOPT" scoped="" ref="0x7d4905e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CommunicationWithOPT"/>
      </instance>
      <interface-functions>
        <function-ref name="parsing_config" scoped="" ref="0x7d48f0f0"/>
        <function-ref name="RequestLongMSG" scoped="" ref="0x7d4908a0"/>
        <function-ref name="SpecialControlMSG" scoped="" ref="0x7d490980"/>
        <function-ref name="parsing_control" scoped="" ref="0x7d490a60"/>
        <function-ref name="parsing_longDT" scoped="" ref="0x7d490b40"/>
        <function-ref name="RequestSensorMSG" scoped="" ref="0x7d490c20"/>
        <function-ref name="SendConfigureMSG" scoped="" ref="0x7d490d00"/>
        <function-ref name="SendLongMSG" scoped="" ref="0x7d490de0"/>
        <function-ref name="start" scoped="" ref="0x7d490ec0"/>
        <function-ref name="SendControlMSG" scoped="" ref="0x7d48f010"/>
        <function-ref name="parsing_sensor" scoped="" ref="0x7d4907c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x7d48f6e8" loc="24:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTM.nc">
      <component-ref qname="CommunicationWithOPTM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x7d48f6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d48f8c0"/>
        <function-ref name="stop" scoped="" ref="0x7d48f9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCSuartDBG" ref="0x7d48d4e8" loc="26:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTM.nc">
      <component-ref qname="CommunicationWithOPTM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCSuartDBG" scoped="" ref="0x7d48d4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SCSuartDBG"/>
      </instance>
      <interface-functions>
        <function-ref name="UARTSend" scoped="" ref="0x7d48d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7d453b90" loc="40:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7d453b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7d453d68"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7d453e48"/>
        <function-ref name="rxDone" scoped="" ref="0x7d453f28"/>
        <function-ref name="txDone" scoped="" ref="0x7d452018"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7d4520f8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7d4521d8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7d4522b8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7d452398"/>
        <function-ref name="tx" scoped="" ref="0x7d452478"/>
        <function-ref name="rx" scoped="" ref="0x7d452558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7d450010" loc="44:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7d450010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7d4501e8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7d4502c8"/>
        <function-ref name="rxDone" scoped="" ref="0x7d4503a8"/>
        <function-ref name="txDone" scoped="" ref="0x7d450488"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7d450568"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7d450648"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7d450728"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7d450808"/>
        <function-ref name="tx" scoped="" ref="0x7d4508e8"/>
        <function-ref name="rx" scoped="" ref="0x7d4509c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7d453758" loc="39:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7d453758"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d453930"/>
        <function-ref name="stop" scoped="" ref="0x7d453a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7d4526d8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7d4526d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d4528b0"/>
        <function-ref name="stop" scoped="" ref="0x7d452990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7d452b10" loc="43:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7d452b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d452ce8"/>
        <function-ref name="stop" scoped="" ref="0x7d452dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7d453320" loc="38:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7d453320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d4534f8"/>
        <function-ref name="stop" scoped="" ref="0x7d4535d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x7d44edc8" loc="71:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x7d44edc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d44b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7d44ba60" loc="74:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7d44ba60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7d44bc38"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7d44bd18"/>
        <function-ref name="rxDone" scoped="" ref="0x7d44bdf8"/>
        <function-ref name="txDone" scoped="" ref="0x7d44bed8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7d44a010"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7d44a0f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7d44a1d0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7d44a2b0"/>
        <function-ref name="tx" scoped="" ref="0x7d44a390"/>
        <function-ref name="rx" scoped="" ref="0x7d44a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x7d44a608" loc="76:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x7d44a608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d44a7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7d449290" loc="79:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7d449290"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7d449468"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7d449548"/>
        <function-ref name="rxDone" scoped="" ref="0x7d449628"/>
        <function-ref name="txDone" scoped="" ref="0x7d449708"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7d4497e8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7d4498c8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7d4499a8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7d449a88"/>
        <function-ref name="tx" scoped="" ref="0x7d449b68"/>
        <function-ref name="rx" scoped="" ref="0x7d449c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7d44b608" loc="73:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7d44b608"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d44b7e0"/>
        <function-ref name="stop" scoped="" ref="0x7d44b8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7d44a980" loc="77:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7d44a980"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d44ab58"/>
        <function-ref name="stop" scoped="" ref="0x7d44ac38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7d44add8" loc="78:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7d44add8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d449010"/>
        <function-ref name="stop" scoped="" ref="0x7d4490f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7d449db8" loc="81:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7d449db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7d448010"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7d4480f0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7d4481d0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7d4482b0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7d448390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7d448500" loc="82:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7d448500"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7d4486d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7d44b1b0" loc="72:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7d44b1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d44b388"/>
        <function-ref name="stop" scoped="" ref="0x7d44b468"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7d3e7010" loc="3:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/NoSCSuartDBGC.nc">
      <component-ref qname="NoSCSuartDBGC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7d3e7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d3e71e8"/>
        <function-ref name="stop" scoped="" ref="0x7d3e72c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCSuartDBG" ref="0x7d3e7438" loc="4:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/NoSCSuartDBGC.nc">
      <component-ref qname="NoSCSuartDBGC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCSuartDBG" scoped="" ref="0x7d3e7438"/></type-interface>
      <instance>
        <interfacedef-ref qname="SCSuartDBG"/>
      </instance>
      <interface-functions>
        <function-ref name="UARTSend" scoped="" ref="0x7d3e7610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCSuartDBGRecv" ref="0x7d3cebd8" loc="31:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGC.nc">
      <component-ref qname="SCSuartDBGC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCSuartDBGRecv" scoped="" ref="0x7d3cebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SCSuartDBGRecv"/>
      </instance>
      <interface-functions>
        <function-ref name="UARTRecv" scoped="" ref="0x7d3cedb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCSuartDBG" ref="0x7d3e17e0" loc="30:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGC.nc">
      <component-ref qname="SCSuartDBGC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCSuartDBG" scoped="" ref="0x7d3e17e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SCSuartDBG"/>
      </instance>
      <interface-functions>
        <function-ref name="UARTSend" scoped="" ref="0x7d3e19b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7d3cef20" loc="32:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGC.nc">
      <component-ref qname="SCSuartDBGC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7d3cef20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d3d0110"/>
        <function-ref name="stop" scoped="" ref="0x7d3d01f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x7d3ca010" loc="36:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGM.nc">
      <component-ref qname="SCSuartDBGM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x7d3ca010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d3ca1e8"/>
        <function-ref name="stop" scoped="" ref="0x7d3ca2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HPLUART" ref="0x7d3ca440" loc="37:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGM.nc">
      <component-ref qname="SCSuartDBGM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HPLUART" scoped="" ref="0x7d3ca440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7d3ca618"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7d3ca6f8"/>
        <function-ref name="rxDone" scoped="" ref="0x7d3ca7d8"/>
        <function-ref name="txDone" scoped="" ref="0x7d3ca8b8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7d3ca998"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7d3caa78"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7d3cab58"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7d3cac38"/>
        <function-ref name="tx" scoped="" ref="0x7d3cad18"/>
        <function-ref name="rx" scoped="" ref="0x7d3cadf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x7d3cbba0" loc="35:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGM.nc">
      <component-ref qname="SCSuartDBGM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x7d3cbba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d3cbd78"/>
        <function-ref name="stop" scoped="" ref="0x7d3cbe58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCSuartDBGRecv" ref="0x7d3cb408" loc="32:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGM.nc">
      <component-ref qname="SCSuartDBGM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCSuartDBGRecv" scoped="" ref="0x7d3cb408"/></type-interface>
      <instance>
        <interfacedef-ref qname="SCSuartDBGRecv"/>
      </instance>
      <interface-functions>
        <function-ref name="UARTRecv" scoped="" ref="0x7d3cb5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCSuartDBG" ref="0x7d3cb0e0" loc="31:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGM.nc">
      <component-ref qname="SCSuartDBGM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCSuartDBG" scoped="" ref="0x7d3cb0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SCSuartDBG"/>
      </instance>
      <interface-functions>
        <function-ref name="UARTSend" scoped="" ref="0x7d3cb2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7d3cb730" loc="33:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGM.nc">
      <component-ref qname="SCSuartDBGM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7d3cb730"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d3cb908"/>
        <function-ref name="stop" scoped="" ref="0x7d3cb9e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TempSensor" ref="0x7d3ad010" loc="21:TempSensorC.nc">
      <component-ref qname="TempSensorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempSensor" scoped="" ref="0x7d3ad010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TempSensor"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7d3ad1e8"/>
        <function-ref name="start" scoped="" ref="0x7d3ad2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedController" ref="0x7d3a7c50" loc="32:TempSensorM.nc">
      <component-ref qname="TempSensorM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedController" scoped="" ref="0x7d3a7c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="LedController"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d3a7e28"/>
        <function-ref name="BlinkLed1" scoped="" ref="0x7d3a7f08"/>
        <function-ref name="BlinkLed2" scoped="" ref="0x7d3a6010"/>
        <function-ref name="BlinkLed0" scoped="" ref="0x7d3a60f0"/>
        <function-ref name="setNumber" scoped="" ref="0x7d3a61d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read_UR" ref="0x7d3a7160" loc="31:TempSensorM.nc">
      <component-ref qname="TempSensorM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read_UR" scoped="" ref="0x7d3a7160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d3a7788"/>
        <function-ref name="readDone" scoped="" ref="0x7d3a7968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TempSensor" ref="0x7d3a9430" loc="26:TempSensorM.nc">
      <component-ref qname="TempSensorM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempSensor" scoped="" ref="0x7d3a9430"/></type-interface>
      <instance>
        <interfacedef-ref qname="TempSensor"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7d3a9608"/>
        <function-ref name="start" scoped="" ref="0x7d3a96e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read_Humidity" ref="0x7d3a9940" loc="29:TempSensorM.nc">
      <component-ref qname="TempSensorM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read_Humidity" scoped="" ref="0x7d3a9940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d3a8010"/>
        <function-ref name="readDone" scoped="" ref="0x7d3a81f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read_Temp" ref="0x7d3a85a0" loc="30:TempSensorM.nc">
      <component-ref qname="TempSensorM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read_Temp" scoped="" ref="0x7d3a85a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d3a8bc8"/>
        <function-ref name="readDone" scoped="" ref="0x7d3a8da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7d3aba58" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="TempSensorC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d3aba58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d38a368"/>
        <function-ref name="fired" scoped="" ref="0x7d3aa778"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d3aad18"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d3aab38"/>
        <function-ref name="getdt" scoped="" ref="0x7d38a728"/>
        <function-ref name="gett0" scoped="" ref="0x7d38a548"/>
        <function-ref name="isRunning" scoped="" ref="0x7d3aa958"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d3aa098"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d38a048"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d3aa318"/>
        <function-ref name="stop" scoped="" ref="0x7d3aa598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7d388010" loc="47:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11C.nc">
      <component-ref qname="TempSensorC.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x7d388010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d388638"/>
        <function-ref name="readDone" scoped="" ref="0x7d388818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7d389400" loc="46:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11C.nc">
      <component-ref qname="TempSensorC.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x7d389400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d389a28"/>
        <function-ref name="readDone" scoped="" ref="0x7d389c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Hum" ref="0x7c9fda20" loc="50:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="TempSensorC.Sensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sht11Hum" scoped="" ref="0x7c9fda20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7c9fdbf8"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7c9fdcd8"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7c9fddb8"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7c9fde98"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7c9fc010"/>
        <function-ref name="reset" scoped="" ref="0x7c9fc0f0"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7c9fc1d0"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7c9fc2b0"/>
        <function-ref name="resetDone" scoped="" ref="0x7c9fc390"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7c9fc470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7ca115f0" loc="45:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="TempSensorC.Sensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x7ca115f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ca11c18"/>
        <function-ref name="readDone" scoped="" ref="0x7ca11df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempResource" ref="0x7c9fe128" loc="47:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="TempSensorC.Sensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempResource" scoped="" ref="0x7c9fe128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7c9fe300"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7c9fe3e0"/>
        <function-ref name="request" scoped="" ref="0x7c9fe4c0"/>
        <function-ref name="granted" scoped="" ref="0x7c9fe5a0"/>
        <function-ref name="isOwner" scoped="" ref="0x7c9fe680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Temp" ref="0x7c9feed8" loc="49:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="TempSensorC.Sensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sht11Temp" scoped="" ref="0x7c9feed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7c9fd0c0"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7c9fd1a0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7c9fd280"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7c9fd360"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7c9fd440"/>
        <function-ref name="reset" scoped="" ref="0x7c9fd520"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7c9fd600"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7c9fd6e0"/>
        <function-ref name="resetDone" scoped="" ref="0x7c9fd7c0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7c9fd8a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumResource" ref="0x7c9fe800" loc="48:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="TempSensorC.Sensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HumResource" scoped="" ref="0x7c9fe800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7c9fe9d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7c9feab8"/>
        <function-ref name="request" scoped="" ref="0x7c9feb98"/>
        <function-ref name="granted" scoped="" ref="0x7c9fec78"/>
        <function-ref name="isOwner" scoped="" ref="0x7c9fed58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7ca12a20" loc="44:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="TempSensorC.Sensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x7ca12a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ca11068"/>
        <function-ref name="readDone" scoped="" ref="0x7ca11248"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7d386838" loc="21:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredSensorC.nc">
      <component-ref qname="TempSensorC.URSensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7d386838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d386e60"/>
        <function-ref name="readDone" scoped="" ref="0x7d385068"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7c9efc38" loc="28:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredC.nc">
      <component-ref qname="TempSensorC.URSensor.DemoChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7c9efc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7c9ee278"/>
        <function-ref name="readDone" scoped="" ref="0x7c9ee458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7c9ed3b8" loc="28:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc">
      <component-ref qname="TempSensorC.URSensor.DemoChannel.ADC_ShiftM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7c9ed3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7c9ed9e0"/>
        <function-ref name="readDone" scoped="" ref="0x7c9edbc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="subRead" ref="0x7c9ec010" loc="29:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc">
      <component-ref qname="TempSensorC.URSensor.DemoChannel.ADC_ShiftM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="subRead" scoped="" ref="0x7c9ec010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7c9ec638"/>
        <function-ref name="readDone" scoped="" ref="0x7c9ec818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7c9eb3b8" loc="30:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredProC.nc">
      <component-ref qname="TempSensorC.URSensor.DemoChannel.UltraredProC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7c9eb3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7c9eb9e0"/>
        <function-ref name="readDone" scoped="" ref="0x7c9ebbc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7c9e79d0" loc="25:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TempSensorC.URSensor.DemoChannel.UltraredProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7c9e79d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7c9e7ba8"/>
        <function-ref name="configure" scoped="" ref="0x7c9e7c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7c9e8978" loc="22:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TempSensorC.URSensor.DemoChannel.UltraredProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7c9e8978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7c9e7010"/>
        <function-ref name="readDone" scoped="" ref="0x7c9e71f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7c9e74f8" loc="24:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TempSensorC.URSensor.DemoChannel.UltraredProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7c9e74f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7c9e76d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7c9e77b0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7c9e7890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BaseStation" ref="0x7d382c30" loc="68:BaseStationC.nc">
      <component-ref qname="BaseStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BaseStation" scoped="" ref="0x7d382c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BaseStation"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d382e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAMPacket" ref="0x7d2f8b70" loc="60:BaseStationM.nc">
      <component-ref qname="BaseStationM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAMPacket" scoped="" ref="0x7d2f8b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7d2f8d48"/>
        <function-ref name="address" scoped="" ref="0x7d2f8e28"/>
        <function-ref name="destination" scoped="" ref="0x7d2f8f08"/>
        <function-ref name="setSource" scoped="" ref="0x7d2fe010"/>
        <function-ref name="setDestination" scoped="" ref="0x7d2fe0f0"/>
        <function-ref name="type" scoped="" ref="0x7d2fe1d0"/>
        <function-ref name="setType" scoped="" ref="0x7d2fe2b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7d2fe390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7d368a78" loc="55:BaseStationM.nc">
      <component-ref qname="BaseStationM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x7d368a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7d368c50"/>
        <function-ref name="stopDone" scoped="" ref="0x7d368d30"/>
        <function-ref name="start" scoped="" ref="0x7d368e10"/>
        <function-ref name="stop" scoped="" ref="0x7d368ef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x7d2ff7e0" loc="59:BaseStationM.nc">
      <component-ref qname="BaseStationM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7d2ff7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d2ff9b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d2ffa98"/>
        <function-ref name="getPayload" scoped="" ref="0x7d2ffb78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d2ffc58"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d2ffd38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7d326010" loc="58:BaseStationM.nc">
      <component-ref qname="BaseStationM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7d326010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7d36e688"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7d3261e8"/>
        <function-ref name="receive" scoped="" ref="0x7d3262c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d3263a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="radioSendTask" ref="0x7d2f6308" loc="78:BaseStationM.nc">
      <component-ref qname="BaseStationM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="radioSendTask" scoped="" ref="0x7d2f6308"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d2f64e0"/>
        <function-ref name="runTask" scoped="" ref="0x7d2f65c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7d2fe4d8" loc="62:BaseStationM.nc">
      <component-ref qname="BaseStationM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7d2fe4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7d2fe6b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7d2fe790"/>
        <function-ref name="led1On" scoped="" ref="0x7d2fe870"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7d2fe950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7d2fea30"/>
        <function-ref name="get" scoped="" ref="0x7d2feb10"/>
        <function-ref name="led1Off" scoped="" ref="0x7d2febf0"/>
        <function-ref name="led2Off" scoped="" ref="0x7d2fd010"/>
        <function-ref name="set" scoped="" ref="0x7d2fecd0"/>
        <function-ref name="led0On" scoped="" ref="0x7d2fedb0"/>
        <function-ref name="led2On" scoped="" ref="0x7d2fee90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BaseStation" ref="0x7d3686e0" loc="52:BaseStationM.nc">
      <component-ref qname="BaseStationM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BaseStation" scoped="" ref="0x7d3686e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BaseStation"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d3688b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7d328770" loc="57:BaseStationM.nc">
      <component-ref qname="BaseStationM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7d328770"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7d36e688"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d328948"/>
        <function-ref name="getPayload" scoped="" ref="0x7d328a28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d328b08"/>
        <function-ref name="cancel" scoped="" ref="0x7d328be8"/>
        <function-ref name="sendDone" scoped="" ref="0x7d328cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7d36fe38" loc="49:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7d36fe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7d2d7050"/>
        <function-ref name="stopDone" scoped="" ref="0x7d2d7130"/>
        <function-ref name="start" scoped="" ref="0x7d2d7210"/>
        <function-ref name="stop" scoped="" ref="0x7d2d72f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7d2d76c8" loc="51:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7d2d76c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d2d78a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d2d7980"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d2d7a60"/>
        <function-ref name="cancel" scoped="" ref="0x7d2d7b40"/>
        <function-ref name="sendDone" scoped="" ref="0x7d2d7c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7d2d67a8" loc="53:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7d2d67a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7d2d6980"/>
        <function-ref name="receive" scoped="" ref="0x7d2d6a60"/>
        <function-ref name="getPayload" scoped="" ref="0x7d2d6b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d2d6c88" loc="55:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d2d6c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d2d6e60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d2d4010"/>
        <function-ref name="getPayload" scoped="" ref="0x7d2d40f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d2d41d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d2d42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7d2d6010" loc="52:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7d2d6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7d2d61e8"/>
        <function-ref name="receive" scoped="" ref="0x7d2d62c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d2d63a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7d2d1010" loc="57:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7d2d1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7d2d11e8"/>
        <function-ref name="noAck" scoped="" ref="0x7d2d12c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7d2d13a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d2d4400" loc="56:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d2d4400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7d2d45d8"/>
        <function-ref name="address" scoped="" ref="0x7d2d46b8"/>
        <function-ref name="destination" scoped="" ref="0x7d2d4798"/>
        <function-ref name="setSource" scoped="" ref="0x7d2d4878"/>
        <function-ref name="setDestination" scoped="" ref="0x7d2d4958"/>
        <function-ref name="type" scoped="" ref="0x7d2d4a38"/>
        <function-ref name="setType" scoped="" ref="0x7d2d4b18"/>
        <function-ref name="isForMe" scoped="" ref="0x7d2d4bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7d2be970" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7d2be970"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7d2beb48"/>
        <function-ref name="stopDone" scoped="" ref="0x7d2bec28"/>
        <function-ref name="start" scoped="" ref="0x7d2bed08"/>
        <function-ref name="stop" scoped="" ref="0x7d2bede8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7d2bd1e8" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7d2bd1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7d36e688"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d2bd3c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d2bd4a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d2bd580"/>
        <function-ref name="cancel" scoped="" ref="0x7d2bd660"/>
        <function-ref name="sendDone" scoped="" ref="0x7d2bd740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7d2bc2c0" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7d2bc2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7d36e688"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7d2bc498"/>
        <function-ref name="receive" scoped="" ref="0x7d2bc578"/>
        <function-ref name="getPayload" scoped="" ref="0x7d2bc658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d2ba158" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d2ba158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d2ba330"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d2ba410"/>
        <function-ref name="getPayload" scoped="" ref="0x7d2ba4f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d2ba5d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d2ba6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7d2b5c50" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7d2b5c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7d2b5e28"/>
        <function-ref name="getRssi" scoped="" ref="0x7d2b5f08"/>
        <function-ref name="getPower" scoped="" ref="0x7d2b8010"/>
        <function-ref name="getLqi" scoped="" ref="0x7d2b80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7d2bdb18" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7d2bdb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7d36e688"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7d2bdcf0"/>
        <function-ref name="receive" scoped="" ref="0x7d2bddd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d2bdeb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7d2b8248" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7d2b8248"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7d2b8420"/>
        <function-ref name="noAck" scoped="" ref="0x7d2b8500"/>
        <function-ref name="wasAcked" scoped="" ref="0x7d2b85e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d2bc7a8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d2bc7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7d2bc980"/>
        <function-ref name="address" scoped="" ref="0x7d2bca60"/>
        <function-ref name="destination" scoped="" ref="0x7d2bcb40"/>
        <function-ref name="setSource" scoped="" ref="0x7d2bcc20"/>
        <function-ref name="setDestination" scoped="" ref="0x7d2bcd00"/>
        <function-ref name="type" scoped="" ref="0x7d2bcde0"/>
        <function-ref name="setType" scoped="" ref="0x7d2bcec0"/>
        <function-ref name="isForMe" scoped="" ref="0x7d2ba010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7d29a6c8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7d29a6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d29a8a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d29a980"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d29aa60"/>
        <function-ref name="cancel" scoped="" ref="0x7d29ab40"/>
        <function-ref name="sendDone" scoped="" ref="0x7d29ac20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7d29ad98" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7d29ad98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7d29e010"/>
        <function-ref name="receive" scoped="" ref="0x7d29e0f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d29e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7d2b28f8" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7d2b28f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7d36e688"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d2b2ad0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d2b2bb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d2b2c90"/>
        <function-ref name="cancel" scoped="" ref="0x7d2b2d70"/>
        <function-ref name="sendDone" scoped="" ref="0x7d2b2e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7d2b09f0" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7d2b09f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7d36e688"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7d2b0bc8"/>
        <function-ref name="receive" scoped="" ref="0x7d2b0ca8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d2b0d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d2a1828" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d2a1828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d2a1a00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d2a1ae0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d2a1bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d2a1ca0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d2a1d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7d2b0258" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7d2b0258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7d36e688"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7d2b0430"/>
        <function-ref name="receive" scoped="" ref="0x7d2b0510"/>
        <function-ref name="getPayload" scoped="" ref="0x7d2b05f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d2b0ed8" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d2b0ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7d2a10c0"/>
        <function-ref name="address" scoped="" ref="0x7d2a11a0"/>
        <function-ref name="destination" scoped="" ref="0x7d2a1280"/>
        <function-ref name="setSource" scoped="" ref="0x7d2a1360"/>
        <function-ref name="setDestination" scoped="" ref="0x7d2a1440"/>
        <function-ref name="type" scoped="" ref="0x7d2a1520"/>
        <function-ref name="setType" scoped="" ref="0x7d2a1600"/>
        <function-ref name="isForMe" scoped="" ref="0x7d2a16e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7d252010" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7d252010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7d2521e8"/>
        <function-ref name="stopDone" scoped="" ref="0x7d2522c8"/>
        <function-ref name="start" scoped="" ref="0x7d2523a8"/>
        <function-ref name="stop" scoped="" ref="0x7d252488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7d2525f0" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d2525f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d2527c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d2528a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d252988"/>
        <function-ref name="cancel" scoped="" ref="0x7d252a68"/>
        <function-ref name="sendDone" scoped="" ref="0x7d252b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7d252cb0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7d252cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7d252e88"/>
        <function-ref name="receive" scoped="" ref="0x7d251010"/>
        <function-ref name="getPayload" scoped="" ref="0x7d2510f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7d251260" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d251260"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7d251438"/>
        <function-ref name="address" scoped="" ref="0x7d251518"/>
        <function-ref name="destination" scoped="" ref="0x7d2515f8"/>
        <function-ref name="setSource" scoped="" ref="0x7d2516d8"/>
        <function-ref name="setDestination" scoped="" ref="0x7d2517b8"/>
        <function-ref name="type" scoped="" ref="0x7d251898"/>
        <function-ref name="setType" scoped="" ref="0x7d251978"/>
        <function-ref name="isForMe" scoped="" ref="0x7d251a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7d241cd8" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7d241cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7d241eb0"/>
        <function-ref name="stopDone" scoped="" ref="0x7d23e010"/>
        <function-ref name="start" scoped="" ref="0x7d23e0f0"/>
        <function-ref name="stop" scoped="" ref="0x7d23e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7d232e68" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x7d232e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d237050"/>
        <function-ref name="cancel" scoped="" ref="0x7d237130"/>
        <function-ref name="modify" scoped="" ref="0x7d237210"/>
        <function-ref name="sendDone" scoped="" ref="0x7d2372f0"/>
        <function-ref name="resendCCA" scoped="" ref="0x7d2373d0"/>
        <function-ref name="resend" scoped="" ref="0x7d2374b0"/>
        <function-ref name="sendCCA" scoped="" ref="0x7d237590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7d23e338" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d23e338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d23e510"/>
        <function-ref name="getPayload" scoped="" ref="0x7d23e5f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d23e6d0"/>
        <function-ref name="cancel" scoped="" ref="0x7d23e7b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7d23e890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7d21e690" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7d21e690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7d21e868"/>
        <function-ref name="rand32" scoped="" ref="0x7d21e948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d241990" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d241990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d241b68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7d23b610" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7d23b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d23b7e8"/>
        <function-ref name="stop" scoped="" ref="0x7d23b8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7d238c28" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7d238c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7d238e00"/>
        <function-ref name="rfOff" scoped="" ref="0x7d238ee0"/>
        <function-ref name="rxOn" scoped="" ref="0x7d23b010"/>
        <function-ref name="startVReg" scoped="" ref="0x7d23b0f0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7d23b1d0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7d23b2b0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7d23b390"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7d23b470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7d2204f8" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7d2204f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7d2206d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7d2207b0"/>
        <function-ref name="led1On" scoped="" ref="0x7d220890"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7d220970"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7d220a50"/>
        <function-ref name="get" scoped="" ref="0x7d220b30"/>
        <function-ref name="led1Off" scoped="" ref="0x7d220c10"/>
        <function-ref name="led2Off" scoped="" ref="0x7d21f010"/>
        <function-ref name="set" scoped="" ref="0x7d220cf0"/>
        <function-ref name="led0On" scoped="" ref="0x7d220dd0"/>
        <function-ref name="led2On" scoped="" ref="0x7d220eb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7d23ea00" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7d23ea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d23ebd8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d23ecb8"/>
        <function-ref name="request" scoped="" ref="0x7d23ed98"/>
        <function-ref name="granted" scoped="" ref="0x7d23ee78"/>
        <function-ref name="isOwner" scoped="" ref="0x7d23d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CsmaBackoff" ref="0x7d222ed8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaBackoff" scoped="" ref="0x7d222ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="congestion" scoped="" ref="0x7d2310c0"/>
        <function-ref name="initial" scoped="" ref="0x7d2311a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7d21eab8" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d21eab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7d21ec90"/>
        <function-ref name="address" scoped="" ref="0x7d21ed70"/>
        <function-ref name="destination" scoped="" ref="0x7d21ee50"/>
        <function-ref name="setSource" scoped="" ref="0x7d220010"/>
        <function-ref name="setDestination" scoped="" ref="0x7d2200f0"/>
        <function-ref name="type" scoped="" ref="0x7d2201d0"/>
        <function-ref name="setType" scoped="" ref="0x7d2202b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7d220390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7d21c6b8" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x7d21c6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d21c890"/>
        <function-ref name="runTask" scoped="" ref="0x7d21c970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7d21de60" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x7d21de60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d21c0e0"/>
        <function-ref name="runTask" scoped="" ref="0x7d21c1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7d21d730" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x7d21d730"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d21d908"/>
        <function-ref name="runTask" scoped="" ref="0x7d21d9e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7d1dddd8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7d1dddd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x7d1e1010"/>
        <function-ref name="setChannel" scoped="" ref="0x7d1e10f0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7d1e11d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7d1e12b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7d1e1390"/>
        <function-ref name="sync" scoped="" ref="0x7d1e1470"/>
        <function-ref name="getChannel" scoped="" ref="0x7d1e1550"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7d1e1630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d1f1578" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d1f1578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d1f1750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7d1e17a0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7d1e17a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7d1e1978"/>
        <function-ref name="rfOff" scoped="" ref="0x7d1e1a58"/>
        <function-ref name="rxOn" scoped="" ref="0x7d1e1b38"/>
        <function-ref name="startVReg" scoped="" ref="0x7d1e1c18"/>
        <function-ref name="stopVReg" scoped="" ref="0x7d1e1cf8"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7d1e1dd8"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7d1e1eb8"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7d1e0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7d1f18c0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7d1f18c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d1f1a98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d1f1b78"/>
        <function-ref name="request" scoped="" ref="0x7d1f1c58"/>
        <function-ref name="granted" scoped="" ref="0x7d1f1d38"/>
        <function-ref name="isOwner" scoped="" ref="0x7d1f1e18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7d1e0180" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d1e0180"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7d1e0358"/>
        <function-ref name="address" scoped="" ref="0x7d1e0438"/>
        <function-ref name="destination" scoped="" ref="0x7d1e0518"/>
        <function-ref name="setSource" scoped="" ref="0x7d1e05f8"/>
        <function-ref name="setDestination" scoped="" ref="0x7d1e06d8"/>
        <function-ref name="type" scoped="" ref="0x7d1e07b8"/>
        <function-ref name="setType" scoped="" ref="0x7d1e0898"/>
        <function-ref name="isForMe" scoped="" ref="0x7d1e0978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7d1d8728" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7d1d8728"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x7d1d8900"/>
        <function-ref name="setChannel" scoped="" ref="0x7d1d89e0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7d1d8ac0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7d1d8ba0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7d1d8c80"/>
        <function-ref name="sync" scoped="" ref="0x7d1d8d60"/>
        <function-ref name="getChannel" scoped="" ref="0x7d1d8e40"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7d1d8f20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7d1d7b70" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x7d1d7b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220b60"/>
            <typename><typedef-ref name="T32khz" ref="0x7e220ce0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d1d6ee8"/>
        <function-ref name="fired" scoped="" ref="0x7d1d67a8"/>
        <function-ref name="startAt" scoped="" ref="0x7d1d6ba8"/>
        <function-ref name="isRunning" scoped="" ref="0x7d1d69a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7d1d40f8"/>
        <function-ref name="start" scoped="" ref="0x7d1d6308"/>
        <function-ref name="stop" scoped="" ref="0x7d1d65a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7d1c1030" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7d1c1030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d1c1208"/>
        <function-ref name="write" scoped="" ref="0x7d1c12e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7d1d4c78" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7d1d4c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d1d4e50"/>
        <function-ref name="isInput" scoped="" ref="0x7d1d3010"/>
        <function-ref name="toggle" scoped="" ref="0x7d1d30f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d1d31d0"/>
        <function-ref name="get" scoped="" ref="0x7d1d32b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d1d3390"/>
        <function-ref name="set" scoped="" ref="0x7d1d3470"/>
        <function-ref name="clr" scoped="" ref="0x7d1d3550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7d1bb6e0" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7d1bb6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d1bb938"/>
        <function-ref name="write" scoped="" ref="0x7d1bba18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7d1d42e8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7d1d42e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d1d44c0"/>
        <function-ref name="isInput" scoped="" ref="0x7d1d45a0"/>
        <function-ref name="toggle" scoped="" ref="0x7d1d4680"/>
        <function-ref name="isOutput" scoped="" ref="0x7d1d4760"/>
        <function-ref name="get" scoped="" ref="0x7d1d4840"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d1d4920"/>
        <function-ref name="set" scoped="" ref="0x7d1d4a00"/>
        <function-ref name="clr" scoped="" ref="0x7d1d4ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7d1d36e8" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x7d1d36e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d1d38c0"/>
        <function-ref name="isInput" scoped="" ref="0x7d1d39a0"/>
        <function-ref name="toggle" scoped="" ref="0x7d1d3a80"/>
        <function-ref name="isOutput" scoped="" ref="0x7d1d3b60"/>
        <function-ref name="get" scoped="" ref="0x7d1d3c40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d1d3d20"/>
        <function-ref name="set" scoped="" ref="0x7d1d3e00"/>
        <function-ref name="clr" scoped="" ref="0x7d1d3ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d1d9ce8" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d1d9ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d1d9ec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7d1c1488" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7d1c1488"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d1c1660"/>
        <function-ref name="write" scoped="" ref="0x7d1c1740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7d1d26a8" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7d1d26a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d1d2880"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d1d2960"/>
        <function-ref name="request" scoped="" ref="0x7d1d2a40"/>
        <function-ref name="granted" scoped="" ref="0x7d1d2b20"/>
        <function-ref name="isOwner" scoped="" ref="0x7d1d2c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7d1ba580" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7d1ba580"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7d1ba758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7d1ba8f0" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7d1ba8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7d1baac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7d1b9610" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x7d1b9610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d1b97e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d1b98c8"/>
        <function-ref name="request" scoped="" ref="0x7d1b99a8"/>
        <function-ref name="granted" scoped="" ref="0x7d1b9a88"/>
        <function-ref name="isOwner" scoped="" ref="0x7d1b9b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7d1d70a8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7d1d70a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7d1d7280"/>
        <function-ref name="rfOff" scoped="" ref="0x7d1d7360"/>
        <function-ref name="rxOn" scoped="" ref="0x7d1d7440"/>
        <function-ref name="startVReg" scoped="" ref="0x7d1d7520"/>
        <function-ref name="stopVReg" scoped="" ref="0x7d1d7600"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7d1d76e0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7d1d77c0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7d1d78a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7d1bb290" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7d1bb290"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d1bb468"/>
        <function-ref name="write" scoped="" ref="0x7d1bb548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7d1bbbb0" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7d1bbbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d1bbd88"/>
        <function-ref name="write" scoped="" ref="0x7d1bbe68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7d1d8060" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7d1d8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d1d8238"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d1d8318"/>
        <function-ref name="request" scoped="" ref="0x7d1d83f8"/>
        <function-ref name="granted" scoped="" ref="0x7d1d84d8"/>
        <function-ref name="isOwner" scoped="" ref="0x7d1d85b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7d1bf0b0" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7d1bf0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d1bf288"/>
        <function-ref name="write" scoped="" ref="0x7d1bf368"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7d1b8e80" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7d1b8e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7d1ba070"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7d1d2090" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x7d1d2090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7d1d2268"/>
        <function-ref name="disable" scoped="" ref="0x7d1d2348"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7d1d2428"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7d1d2508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7d1bac38" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d1bac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7d1bae10"/>
        <function-ref name="address" scoped="" ref="0x7d1baef0"/>
        <function-ref name="destination" scoped="" ref="0x7d1b9010"/>
        <function-ref name="setSource" scoped="" ref="0x7d1b90f0"/>
        <function-ref name="setDestination" scoped="" ref="0x7d1b91d0"/>
        <function-ref name="type" scoped="" ref="0x7d1b92b0"/>
        <function-ref name="setType" scoped="" ref="0x7d1b9390"/>
        <function-ref name="isForMe" scoped="" ref="0x7d1b9470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7d1b9cd0" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7d1b9cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7d1b9ea8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7d1b7010"/>
        <function-ref name="led1On" scoped="" ref="0x7d1b70f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7d1b71d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7d1b72b0"/>
        <function-ref name="get" scoped="" ref="0x7d1b7390"/>
        <function-ref name="led1Off" scoped="" ref="0x7d1b7470"/>
        <function-ref name="led2Off" scoped="" ref="0x7d1b77f0"/>
        <function-ref name="set" scoped="" ref="0x7d1b7550"/>
        <function-ref name="led0On" scoped="" ref="0x7d1b7630"/>
        <function-ref name="led2On" scoped="" ref="0x7d1b7710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7d1ba208" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7d1ba208"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7d1ba3e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone_task" ref="0x7d1b5260" loc="86:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone_task" scoped="" ref="0x7d1b5260"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d1b5438"/>
        <function-ref name="runTask" scoped="" ref="0x7d1b5518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d176b10" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d176b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d176ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7d175010" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x7d175010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220b60"/>
            <typename><typedef-ref name="T32khz" ref="0x7e220ce0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d174350"/>
        <function-ref name="fired" scoped="" ref="0x7d175c00"/>
        <function-ref name="startAt" scoped="" ref="0x7d174010"/>
        <function-ref name="isRunning" scoped="" ref="0x7d175e00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7d174550"/>
        <function-ref name="start" scoped="" ref="0x7d175760"/>
        <function-ref name="stop" scoped="" ref="0x7d175a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7d172358" loc="67:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7d172358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220b60"/>
            <typename><typedef-ref name="T32khz" ref="0x7e220ce0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d171750"/>
        <function-ref name="fired" scoped="" ref="0x7d171010"/>
        <function-ref name="startAt" scoped="" ref="0x7d171410"/>
        <function-ref name="isRunning" scoped="" ref="0x7d171210"/>
        <function-ref name="getAlarm" scoped="" ref="0x7d171950"/>
        <function-ref name="start" scoped="" ref="0x7d172aa8"/>
        <function-ref name="stop" scoped="" ref="0x7d172d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d171b08" loc="68:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d171b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d171ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7c9d7d30" loc="28:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7c9d7d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220b60"/>
            <typename><typedef-ref name="T32khz" ref="0x7e220ce0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7c9d4088"/>
        <function-ref name="fired" scoped="" ref="0x7c9d5938"/>
        <function-ref name="startAt" scoped="" ref="0x7c9d5d38"/>
        <function-ref name="isRunning" scoped="" ref="0x7c9d5b38"/>
        <function-ref name="getAlarm" scoped="" ref="0x7c9d4288"/>
        <function-ref name="start" scoped="" ref="0x7c9d5498"/>
        <function-ref name="stop" scoped="" ref="0x7c9d5738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7c9d3818" loc="30:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7c9d3818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220b60"/>
            <typename><typedef-ref name="TOne" ref="0x7e181ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7c9d1bf0"/>
        <function-ref name="fired" scoped="" ref="0x7c9d14b0"/>
        <function-ref name="startAt" scoped="" ref="0x7c9d18b0"/>
        <function-ref name="isRunning" scoped="" ref="0x7c9d16b0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7c9d1df0"/>
        <function-ref name="start" scoped="" ref="0x7c9d1010"/>
        <function-ref name="stop" scoped="" ref="0x7c9d12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7d13ab98" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7d13ab98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7d13ad70"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7d13ae50"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7d13f010"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7d13f0f0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7d13f1d0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7d13f2b0"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7d13f390"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7d13f470"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7d13f550"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7d13f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7d134b48" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7d134b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7d138410"/>
        <function-ref name="test" scoped="" ref="0x7d138010"/>
        <function-ref name="get" scoped="" ref="0x7d139200"/>
        <function-ref name="captured" scoped="" ref="0x7d1396a0"/>
        <function-ref name="reset" scoped="" ref="0x7d139940"/>
        <function-ref name="isOn" scoped="" ref="0x7d138210"/>
        <function-ref name="set" scoped="" ref="0x7d139400"/>
        <function-ref name="start" scoped="" ref="0x7d139b40"/>
        <function-ref name="stop" scoped="" ref="0x7d139d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7d1389b8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7d1389b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d132cb0"/>
        <function-ref name="fired" scoped="" ref="0x7d1324b0"/>
        <function-ref name="get" scoped="" ref="0x7d132010"/>
        <function-ref name="reset" scoped="" ref="0x7d1326b0"/>
        <function-ref name="isOn" scoped="" ref="0x7d132eb0"/>
        <function-ref name="set" scoped="" ref="0x7d132210"/>
        <function-ref name="start" scoped="" ref="0x7d1328b0"/>
        <function-ref name="stop" scoped="" ref="0x7d132ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7d150368" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d150368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7d142a68"/>
        <function-ref name="test" scoped="" ref="0x7d142668"/>
        <function-ref name="get" scoped="" ref="0x7d1509b0"/>
        <function-ref name="setScale" scoped="" ref="0x7d142c68"/>
        <function-ref name="getScale" scoped="" ref="0x7d142f08"/>
        <function-ref name="reset" scoped="" ref="0x7d142068"/>
        <function-ref name="overflow" scoped="" ref="0x7d150e50"/>
        <function-ref name="isOn" scoped="" ref="0x7d142868"/>
        <function-ref name="set" scoped="" ref="0x7d150bb0"/>
        <function-ref name="start" scoped="" ref="0x7d142268"/>
        <function-ref name="stop" scoped="" ref="0x7d142468"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7d11e370" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7d11e370"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7d11e548"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7d11e628"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7d11e708"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7d11e7e8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7d11e8c8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7d11e9a8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7d11ea88"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7d11eb68"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7d11ec48"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7d11ed28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x7d114220" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x7d114220"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7d1143f8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7d1144d8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7d1145b8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7d114698"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7d114778"/>
        <function-ref name="setControl" scoped="" ref="0x7d114858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7d11bb30" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7d11bb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d11aea0"/>
        <function-ref name="fired" scoped="" ref="0x7d11a6a0"/>
        <function-ref name="get" scoped="" ref="0x7d11a200"/>
        <function-ref name="reset" scoped="" ref="0x7d11a8a0"/>
        <function-ref name="isOn" scoped="" ref="0x7d1190b8"/>
        <function-ref name="set" scoped="" ref="0x7d11a400"/>
        <function-ref name="start" scoped="" ref="0x7d11aaa0"/>
        <function-ref name="stop" scoped="" ref="0x7d11aca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7d11d010" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7d11d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7d11b810"/>
        <function-ref name="test" scoped="" ref="0x7d11b410"/>
        <function-ref name="get" scoped="" ref="0x7d11d658"/>
        <function-ref name="captured" scoped="" ref="0x7d11daf8"/>
        <function-ref name="reset" scoped="" ref="0x7d11dd98"/>
        <function-ref name="isOn" scoped="" ref="0x7d11b610"/>
        <function-ref name="set" scoped="" ref="0x7d11d858"/>
        <function-ref name="start" scoped="" ref="0x7d11b010"/>
        <function-ref name="stop" scoped="" ref="0x7d11b210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7d119338" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7d119338"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d117648"/>
        <function-ref name="fired" scoped="" ref="0x7d119e20"/>
        <function-ref name="get" scoped="" ref="0x7d119980"/>
        <function-ref name="reset" scoped="" ref="0x7d117048"/>
        <function-ref name="isOn" scoped="" ref="0x7d117848"/>
        <function-ref name="set" scoped="" ref="0x7d119b80"/>
        <function-ref name="start" scoped="" ref="0x7d117248"/>
        <function-ref name="stop" scoped="" ref="0x7d117448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7d117ac8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7d117ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d116dc8"/>
        <function-ref name="fired" scoped="" ref="0x7d1165c8"/>
        <function-ref name="get" scoped="" ref="0x7d116128"/>
        <function-ref name="reset" scoped="" ref="0x7d1167c8"/>
        <function-ref name="isOn" scoped="" ref="0x7d114010"/>
        <function-ref name="set" scoped="" ref="0x7d116328"/>
        <function-ref name="start" scoped="" ref="0x7d1169c8"/>
        <function-ref name="stop" scoped="" ref="0x7d116bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7d1215d8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d1215d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7d11fcd8"/>
        <function-ref name="test" scoped="" ref="0x7d11f8d8"/>
        <function-ref name="get" scoped="" ref="0x7d121c20"/>
        <function-ref name="setScale" scoped="" ref="0x7d11fed8"/>
        <function-ref name="getScale" scoped="" ref="0x7d11e190"/>
        <function-ref name="reset" scoped="" ref="0x7d11f2d8"/>
        <function-ref name="overflow" scoped="" ref="0x7d11f0d8"/>
        <function-ref name="isOn" scoped="" ref="0x7d11fad8"/>
        <function-ref name="set" scoped="" ref="0x7d121e20"/>
        <function-ref name="start" scoped="" ref="0x7d11f4d8"/>
        <function-ref name="stop" scoped="" ref="0x7d11f6d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d09af28" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d09af28"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7e3500e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7e3500e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d099110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7d099320" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d099320"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7d098a48"/>
        <function-ref name="test" scoped="" ref="0x7d098648"/>
        <function-ref name="get" scoped="" ref="0x7d099968"/>
        <function-ref name="setScale" scoped="" ref="0x7d098c48"/>
        <function-ref name="getScale" scoped="" ref="0x7d098ee8"/>
        <function-ref name="reset" scoped="" ref="0x7d098048"/>
        <function-ref name="overflow" scoped="" ref="0x7d099e08"/>
        <function-ref name="isOn" scoped="" ref="0x7d098848"/>
        <function-ref name="set" scoped="" ref="0x7d099b68"/>
        <function-ref name="start" scoped="" ref="0x7d098248"/>
        <function-ref name="stop" scoped="" ref="0x7d098448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7c9c8d28" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7c9c8d28"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7e351f28"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7e351f28"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220b60"/>
            <typename><typedef-ref name="TOne" ref="0x7e181ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7c9c5088"/>
        <function-ref name="fired" scoped="" ref="0x7c9c6938"/>
        <function-ref name="startAt" scoped="" ref="0x7c9c6d38"/>
        <function-ref name="isRunning" scoped="" ref="0x7c9c6b38"/>
        <function-ref name="getAlarm" scoped="" ref="0x7c9c5288"/>
        <function-ref name="start" scoped="" ref="0x7c9c6498"/>
        <function-ref name="stop" scoped="" ref="0x7c9c6738"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7c9c2320" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7c9c2320"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7c9c1648"/>
        <function-ref name="fired" scoped="" ref="0x7c9c2e08"/>
        <function-ref name="get" scoped="" ref="0x7c9c2968"/>
        <function-ref name="reset" scoped="" ref="0x7c9c1048"/>
        <function-ref name="isOn" scoped="" ref="0x7c9c1848"/>
        <function-ref name="set" scoped="" ref="0x7c9c2b68"/>
        <function-ref name="start" scoped="" ref="0x7c9c1248"/>
        <function-ref name="stop" scoped="" ref="0x7c9c1448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7c9c54d0" loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7c9c54d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7c9c4c10"/>
        <function-ref name="test" scoped="" ref="0x7c9c4810"/>
        <function-ref name="get" scoped="" ref="0x7c9c5b18"/>
        <function-ref name="setScale" scoped="" ref="0x7c9c4e10"/>
        <function-ref name="getScale" scoped="" ref="0x7c9c20d8"/>
        <function-ref name="reset" scoped="" ref="0x7c9c4210"/>
        <function-ref name="overflow" scoped="" ref="0x7c9c4010"/>
        <function-ref name="isOn" scoped="" ref="0x7c9c4a10"/>
        <function-ref name="set" scoped="" ref="0x7c9c5d18"/>
        <function-ref name="start" scoped="" ref="0x7c9c4410"/>
        <function-ref name="stop" scoped="" ref="0x7c9c4610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7d07ddb0" loc="24:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7d07ddb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220b60"/>
            <typename><typedef-ref name="T32khz" ref="0x7e220ce0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7d07c518"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7d07c918"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7d07c718"/>
        <function-ref name="overflow" scoped="" ref="0x7d07cb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7d077150" loc="24:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7d077150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220b60"/>
            <typename><typedef-ref name="TOne" ref="0x7e181ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7d0778a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7d077ca0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7d077aa0"/>
        <function-ref name="overflow" scoped="" ref="0x7d077ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7d075e88" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7d075e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220b60"/>
            <typename><typedef-ref name="TOne" ref="0x7e181ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7d074600"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7d074a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7d074800"/>
        <function-ref name="overflow" scoped="" ref="0x7d074c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7d074e68" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d074e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7d071610"/>
        <function-ref name="test" scoped="" ref="0x7d071210"/>
        <function-ref name="get" scoped="" ref="0x7d0734d8"/>
        <function-ref name="setScale" scoped="" ref="0x7d071810"/>
        <function-ref name="getScale" scoped="" ref="0x7d071ab0"/>
        <function-ref name="reset" scoped="" ref="0x7d073b78"/>
        <function-ref name="overflow" scoped="" ref="0x7d073978"/>
        <function-ref name="isOn" scoped="" ref="0x7d071410"/>
        <function-ref name="set" scoped="" ref="0x7d0736d8"/>
        <function-ref name="start" scoped="" ref="0x7d073d78"/>
        <function-ref name="stop" scoped="" ref="0x7d071010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7d055620" loc="52:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7d055620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220b60"/>
            <typename><typedef-ref name="T32khz" ref="0x7e220ce0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7d055d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7d054210"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7d054010"/>
        <function-ref name="overflow" scoped="" ref="0x7d054410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7d0645c0" loc="51:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7d0645c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220b60"/>
            <typename><typedef-ref name="T32khz" ref="0x7e220ce0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7d064d10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7d055128"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7d064f10"/>
        <function-ref name="overflow" scoped="" ref="0x7d055328"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7c9cf0a0" loc="50:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7c9cf0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220b60"/>
            <typename><typedef-ref name="T32khz" ref="0x7e220ce0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7c9ce3e8"/>
        <function-ref name="fired" scoped="" ref="0x7c9cfc90"/>
        <function-ref name="startAt" scoped="" ref="0x7c9ce0a8"/>
        <function-ref name="isRunning" scoped="" ref="0x7c9cfe90"/>
        <function-ref name="getAlarm" scoped="" ref="0x7c9ce5e8"/>
        <function-ref name="start" scoped="" ref="0x7c9cf7f0"/>
        <function-ref name="stop" scoped="" ref="0x7c9cfa90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7c9cc940" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x7c9cc940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220b60"/>
            <typename><typedef-ref name="TOne" ref="0x7e181ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7c9cbc88"/>
        <function-ref name="fired" scoped="" ref="0x7c9cb548"/>
        <function-ref name="startAt" scoped="" ref="0x7c9cb948"/>
        <function-ref name="isRunning" scoped="" ref="0x7c9cb748"/>
        <function-ref name="getAlarm" scoped="" ref="0x7c9cbe88"/>
        <function-ref name="start" scoped="" ref="0x7c9cb0a8"/>
        <function-ref name="stop" scoped="" ref="0x7c9cb348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7c9ce8c0" loc="57:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7c9ce8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220b60"/>
            <typename><typedef-ref name="T32khz" ref="0x7e220ce0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7c9cc048"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7c9cc448"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7c9cc248"/>
        <function-ref name="overflow" scoped="" ref="0x7c9cc648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d01a280" loc="18:/opt/tinyos-2.x/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d01a280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d01a458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7d015268" loc="68:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x7d015268"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d015440"/>
        <function-ref name="isInput" scoped="" ref="0x7d015520"/>
        <function-ref name="toggle" scoped="" ref="0x7d015600"/>
        <function-ref name="isOutput" scoped="" ref="0x7d0156e0"/>
        <function-ref name="get" scoped="" ref="0x7d0157c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d0158a0"/>
        <function-ref name="set" scoped="" ref="0x7d015980"/>
        <function-ref name="clr" scoped="" ref="0x7d015a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7d015bd8" loc="69:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x7d015bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d015db0"/>
        <function-ref name="isInput" scoped="" ref="0x7d015e90"/>
        <function-ref name="toggle" scoped="" ref="0x7d014010"/>
        <function-ref name="isOutput" scoped="" ref="0x7d0140f0"/>
        <function-ref name="get" scoped="" ref="0x7d0141d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d0142b0"/>
        <function-ref name="set" scoped="" ref="0x7d014390"/>
        <function-ref name="clr" scoped="" ref="0x7d014470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7d0145e8" loc="70:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7d0145e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d0147c0"/>
        <function-ref name="isInput" scoped="" ref="0x7d0148a0"/>
        <function-ref name="toggle" scoped="" ref="0x7d014980"/>
        <function-ref name="isOutput" scoped="" ref="0x7d014a60"/>
        <function-ref name="get" scoped="" ref="0x7d014b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d014c20"/>
        <function-ref name="set" scoped="" ref="0x7d014d00"/>
        <function-ref name="clr" scoped="" ref="0x7d014de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7d016818" loc="67:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7d016818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d0169f0"/>
        <function-ref name="isInput" scoped="" ref="0x7d016ad0"/>
        <function-ref name="toggle" scoped="" ref="0x7d016bb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d016c90"/>
        <function-ref name="get" scoped="" ref="0x7d016d70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d016e50"/>
        <function-ref name="set" scoped="" ref="0x7d015010"/>
        <function-ref name="clr" scoped="" ref="0x7d0150f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7d013980" loc="72:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x7d013980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d013b58"/>
        <function-ref name="isInput" scoped="" ref="0x7d013c38"/>
        <function-ref name="toggle" scoped="" ref="0x7d013d18"/>
        <function-ref name="isOutput" scoped="" ref="0x7d013df8"/>
        <function-ref name="get" scoped="" ref="0x7d013ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d012010"/>
        <function-ref name="set" scoped="" ref="0x7d0120f0"/>
        <function-ref name="clr" scoped="" ref="0x7d0121d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7d178e90" loc="66:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7d178e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d016080"/>
        <function-ref name="isInput" scoped="" ref="0x7d016160"/>
        <function-ref name="toggle" scoped="" ref="0x7d016240"/>
        <function-ref name="isOutput" scoped="" ref="0x7d016320"/>
        <function-ref name="get" scoped="" ref="0x7d016400"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d0164e0"/>
        <function-ref name="set" scoped="" ref="0x7d0165c0"/>
        <function-ref name="clr" scoped="" ref="0x7d0166a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7d013010" loc="71:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x7d013010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d0131e8"/>
        <function-ref name="isInput" scoped="" ref="0x7d0132c8"/>
        <function-ref name="toggle" scoped="" ref="0x7d0133a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7d013488"/>
        <function-ref name="get" scoped="" ref="0x7d013568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d013648"/>
        <function-ref name="set" scoped="" ref="0x7d013728"/>
        <function-ref name="clr" scoped="" ref="0x7d013808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7cffded0" loc="39:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x7cffded0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7cfff0c0"/>
        <function-ref name="disable" scoped="" ref="0x7cfff1a0"/>
        <function-ref name="captured" scoped="" ref="0x7cfff280"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7cfff360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7cfff500" loc="40:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x7cfff500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7cfff6d8"/>
        <function-ref name="disable" scoped="" ref="0x7cfff7b8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7cfff898"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7cfff978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7cfffb18" loc="41:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7cfffb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7cfffcf0"/>
        <function-ref name="disable" scoped="" ref="0x7cfffdd0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7cfffeb0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7cffe010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7cffb690" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7cffb690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7cffb868"/>
        <function-ref name="disable" scoped="" ref="0x7cffb948"/>
        <function-ref name="captured" scoped="" ref="0x7cffba28"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7cffbb08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x7cffbd18" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x7cffbd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7cff04d8"/>
        <function-ref name="test" scoped="" ref="0x7cff00d8"/>
        <function-ref name="get" scoped="" ref="0x7cffa370"/>
        <function-ref name="captured" scoped="" ref="0x7cffa810"/>
        <function-ref name="reset" scoped="" ref="0x7cffaab0"/>
        <function-ref name="isOn" scoped="" ref="0x7cff02d8"/>
        <function-ref name="set" scoped="" ref="0x7cffa570"/>
        <function-ref name="start" scoped="" ref="0x7cffacb0"/>
        <function-ref name="stop" scoped="" ref="0x7cffaeb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7cfe5cb0" loc="9:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7cfe5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7cfe5e88"/>
        <function-ref name="fired" scoped="" ref="0x7cfe4010"/>
        <function-ref name="disable" scoped="" ref="0x7cfe40f0"/>
        <function-ref name="edge" scoped="" ref="0x7cfe41d0"/>
        <function-ref name="enable" scoped="" ref="0x7cfe42b0"/>
        <function-ref name="getValue" scoped="" ref="0x7cfe4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7cfe56b8" loc="8:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7cfe56b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7cfe5890"/>
        <function-ref name="disable" scoped="" ref="0x7cfe5970"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7cfe5a50"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7cfe5b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATimer" ref="0x7cfde300" loc="71:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATimer" scoped="" ref="0x7cfde300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7cfddc28"/>
        <function-ref name="fired" scoped="" ref="0x7cfdd048"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7cfdd5e8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7cfdd408"/>
        <function-ref name="getdt" scoped="" ref="0x7cfdb010"/>
        <function-ref name="gett0" scoped="" ref="0x7cfdde08"/>
        <function-ref name="isRunning" scoped="" ref="0x7cfdd228"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7cfde928"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7cfdd908"/>
        <function-ref name="startOneShot" scoped="" ref="0x7cfdeba8"/>
        <function-ref name="stop" scoped="" ref="0x7cfdee28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7cfd7d70" loc="113:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7cfd7d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7cfd6010"/>
        <function-ref name="runTask" scoped="" ref="0x7cfd60f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x7cfdf870" loc="70:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x7cfdf870"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cfdfa48"/>
        <function-ref name="isInput" scoped="" ref="0x7cfdfb28"/>
        <function-ref name="toggle" scoped="" ref="0x7cfdfc08"/>
        <function-ref name="isOutput" scoped="" ref="0x7cfdfce8"/>
        <function-ref name="get" scoped="" ref="0x7cfdfdc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cfdfea8"/>
        <function-ref name="set" scoped="" ref="0x7cfde010"/>
        <function-ref name="clr" scoped="" ref="0x7cfde0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7cfdf240" loc="67:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7cfdf240"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7cfdf418"/>
        <function-ref name="disable" scoped="" ref="0x7cfdf4f8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7cfdf5d8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7cfdf6b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x7cfdbd70" loc="87:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x7cfdbd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7cfda010"/>
        <function-ref name="runTask" scoped="" ref="0x7cfda0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7cfe0a78" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="HplCC2420InterruptsC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7cfe0a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7cfc5388"/>
        <function-ref name="fired" scoped="" ref="0x7cfd0798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7cfd0d38"/>
        <function-ref name="isOneShot" scoped="" ref="0x7cfd0b58"/>
        <function-ref name="getdt" scoped="" ref="0x7cfc5748"/>
        <function-ref name="gett0" scoped="" ref="0x7cfc5568"/>
        <function-ref name="isRunning" scoped="" ref="0x7cfd0978"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7cfd00b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7cfc5068"/>
        <function-ref name="startOneShot" scoped="" ref="0x7cfd0338"/>
        <function-ref name="stop" scoped="" ref="0x7cfd05b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7ce7f9a8" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7ce7f9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ce7fb80"/>
        <function-ref name="write" scoped="" ref="0x7ce7fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7ce80260" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7ce80260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ce80438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7ce7d270" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7ce7d270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ce7d448"/>
        <function-ref name="write" scoped="" ref="0x7ce7d528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7ce7c368" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ce7c368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ce7c540"/>
        <function-ref name="write" scoped="" ref="0x7ce7c620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7ce7f0b8" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7ce7f0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ce7f290"/>
        <function-ref name="write" scoped="" ref="0x7ce7f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7ce81190" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7ce81190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ce81368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7ce80910" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7ce80910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ce80ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7ce7fde0" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7ce7fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ce7d010"/>
        <function-ref name="write" scoped="" ref="0x7ce7d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7ce805b8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7ce805b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ce80790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7ce7df18" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7ce7df18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ce7c108"/>
        <function-ref name="write" scoped="" ref="0x7ce7c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7ce814e8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7ce814e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ce816c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7ce7c7a0" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7ce7c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ce7c978"/>
        <function-ref name="writeDone" scoped="" ref="0x7ce7ca58"/>
        <function-ref name="write" scoped="" ref="0x7ce7cb38"/>
        <function-ref name="beginRead" scoped="" ref="0x7ce7cc18"/>
        <function-ref name="readDone" scoped="" ref="0x7ce7ccf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7ce7f4f0" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7ce7f4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ce7f748"/>
        <function-ref name="write" scoped="" ref="0x7ce7f828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7ce80c68" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7ce80c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ce80e40"/>
        <function-ref name="write" scoped="" ref="0x7ce80f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7ce81840" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7ce81840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ce81a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ce826e8" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7ce826e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ce828c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ce829a0"/>
        <function-ref name="request" scoped="" ref="0x7ce82a80"/>
        <function-ref name="granted" scoped="" ref="0x7ce82b60"/>
        <function-ref name="isOwner" scoped="" ref="0x7ce82c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7ce7dae0" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7ce7dae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ce7dcb8"/>
        <function-ref name="write" scoped="" ref="0x7ce7dd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7ce7d6a8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7ce7d6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ce7d880"/>
        <function-ref name="write" scoped="" ref="0x7ce7d960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7ce82dc0" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7ce82dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ce81010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7ce81ef0" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7ce81ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ce800e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7ce81b98" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7ce81b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ce81d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7ce7ce78" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7ce7ce78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ce7b070"/>
        <function-ref name="writeDone" scoped="" ref="0x7ce7b150"/>
        <function-ref name="write" scoped="" ref="0x7ce7b230"/>
        <function-ref name="beginRead" scoped="" ref="0x7ce7b310"/>
        <function-ref name="readDone" scoped="" ref="0x7ce7b3f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7cfa5c50" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x7cfa5c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7cfa5e28"/>
        <function-ref name="writeDone" scoped="" ref="0x7cfa5f08"/>
        <function-ref name="write" scoped="" ref="0x7cfa4010"/>
        <function-ref name="beginRead" scoped="" ref="0x7cfa40f0"/>
        <function-ref name="readDone" scoped="" ref="0x7cfa41d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7cfa4600" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x7cfa4600"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7cfa47d8"/>
        <function-ref name="write" scoped="" ref="0x7cfa48b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7cfa4ce0" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x7cfa4ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7cfa4eb8"/>
        <function-ref name="write" scoped="" ref="0x7cfa3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7cfa52d0" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7cfa52d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7cfa54a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7cfa5588"/>
        <function-ref name="request" scoped="" ref="0x7cfa5668"/>
        <function-ref name="granted" scoped="" ref="0x7cfa5748"/>
        <function-ref name="isOwner" scoped="" ref="0x7cfa5828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7cfa3438" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x7cfa3438"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7cfa3610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7cf93c08" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7cf93c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7cf93de0"/>
        <function-ref name="sendDone" scoped="" ref="0x7cf93ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7cf9d158" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x7cf9d158"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7cf9d330"/>
        <function-ref name="writeDone" scoped="" ref="0x7cf9d410"/>
        <function-ref name="write" scoped="" ref="0x7cf9d4f0"/>
        <function-ref name="beginRead" scoped="" ref="0x7cf9d5d0"/>
        <function-ref name="readDone" scoped="" ref="0x7cf9d6b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7cf97438" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7cf97438"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7cf97610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7cf9cc40" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7cf9cc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7cf9ce18"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7cf9cef8"/>
        <function-ref name="request" scoped="" ref="0x7cf9b010"/>
        <function-ref name="granted" scoped="" ref="0x7cf9b0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7cf9b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7cf9dae0" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x7cf9dae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7cf9dcb8"/>
        <function-ref name="write" scoped="" ref="0x7cf9dd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7cf9c1e8" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x7cf9c1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7cf9c3c0"/>
        <function-ref name="write" scoped="" ref="0x7cf9c4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7cf98040" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7cf98040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7cf98218"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7cf982f8"/>
        <function-ref name="led1On" scoped="" ref="0x7cf983d8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7cf984b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7cf98598"/>
        <function-ref name="get" scoped="" ref="0x7cf98678"/>
        <function-ref name="led1Off" scoped="" ref="0x7cf98758"/>
        <function-ref name="led2Off" scoped="" ref="0x7cf98ad8"/>
        <function-ref name="set" scoped="" ref="0x7cf98838"/>
        <function-ref name="led0On" scoped="" ref="0x7cf98918"/>
        <function-ref name="led2On" scoped="" ref="0x7cf989f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7cf9e7b0" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7cf9e7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7cf9e988"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7cf9ea68"/>
        <function-ref name="request" scoped="" ref="0x7cf9eb48"/>
        <function-ref name="granted" scoped="" ref="0x7cf9ec28"/>
        <function-ref name="isOwner" scoped="" ref="0x7cf9ed08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7cf9c8c8" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x7cf9c8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7cf9caa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7cf5ba80" loc="43:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiP.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7cf5ba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7cf5bc58"/>
        <function-ref name="sendDone" scoped="" ref="0x7cf5bd38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7cf5b748" loc="42:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiP.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7cf5b748"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7cf5b920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7cf5cd28" loc="39:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiP.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7cf5cd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7cf5cf00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7cf5b090" loc="40:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiP.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7cf5b090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7cf5b268"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7cf5b348"/>
        <function-ref name="request" scoped="" ref="0x7cf5b428"/>
        <function-ref name="granted" scoped="" ref="0x7cf5b508"/>
        <function-ref name="isOwner" scoped="" ref="0x7cf5b5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7cf554c0" loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7cf554c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7cf55698"/>
        <function-ref name="sendDone" scoped="" ref="0x7cf55778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7cf55178" loc="67:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7cf55178"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7cf55350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7cf59dd0" loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7cf59dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7cf55010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7cf55b78" loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7cf55b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7cf55d50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7cf55e30"/>
        <function-ref name="request" scoped="" ref="0x7cf55f10"/>
        <function-ref name="granted" scoped="" ref="0x7cf54010"/>
        <function-ref name="isOwner" scoped="" ref="0x7cf540f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7cf509d8" loc="79:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7cf509d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7cf50bb0"/>
        <function-ref name="sendDone" scoped="" ref="0x7cf50c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x7cf42500" loc="84:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x7cf42500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7cf426d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7cf427b8"/>
        <function-ref name="request" scoped="" ref="0x7cf42898"/>
        <function-ref name="granted" scoped="" ref="0x7cf42978"/>
        <function-ref name="isOwner" scoped="" ref="0x7cf42a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7cf506b0" loc="78:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7cf506b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7cf50888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7cf50390" loc="77:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7cf50390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7cf50568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7cf35998" loc="83:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7cf35998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7cf35b70"/>
        <function-ref name="sleep" scoped="" ref="0x7cf42010"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7cf35d30"/>
        <function-ref name="dataReady" scoped="" ref="0x7cf420f0"/>
        <function-ref name="initMaster" scoped="" ref="0x7cf35ef0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7cf43010"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7cf430f0"/>
        <function-ref name="read" scoped="" ref="0x7cf431d0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7cf432b0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7cf43390"/>
        <function-ref name="setClock" scoped="" ref="0x7cf43470"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7cf43550"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7cf43630"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7cf43790"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7cf43870"/>
        <function-ref name="write" scoped="" ref="0x7cf43950"/>
        <function-ref name="enableSpi" scoped="" ref="0x7cf43a30"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7cf43b10"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7cf43bf0"/>
        <function-ref name="getClock" scoped="" ref="0x7cf43cd0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7cf43db0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7cf35c50"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7cf35e10"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7cf43e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7cf45100" loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7cf45100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7cf452d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7cf453b8"/>
        <function-ref name="request" scoped="" ref="0x7cf45498"/>
        <function-ref name="granted" scoped="" ref="0x7cf45578"/>
        <function-ref name="isOwner" scoped="" ref="0x7cf45658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7cf33010" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7cf33010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7cf331e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7cf42ba8" loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7cf42ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7cf42d80"/>
        <function-ref name="userId" scoped="" ref="0x7cf42e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7cf030f0" loc="59:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7cf030f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7cf032c8"/>
        <function-ref name="sleep" scoped="" ref="0x7cf02710"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7cf03488"/>
        <function-ref name="dataReady" scoped="" ref="0x7cf027f0"/>
        <function-ref name="initMaster" scoped="" ref="0x7cf03648"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7cf03728"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7cf03808"/>
        <function-ref name="read" scoped="" ref="0x7cf038e8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7cf039c8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7cf03aa8"/>
        <function-ref name="setClock" scoped="" ref="0x7cf03b88"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7cf03c68"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7cf03d48"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7cf03ea8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7cf02010"/>
        <function-ref name="write" scoped="" ref="0x7cf020f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7cf021d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7cf022b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7cf02390"/>
        <function-ref name="getClock" scoped="" ref="0x7cf02470"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7cf02550"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7cf033a8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7cf03568"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7cf02630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7cef9808" loc="64:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7cef9808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cef99e0"/>
        <function-ref name="isInput" scoped="" ref="0x7cef9ac0"/>
        <function-ref name="toggle" scoped="" ref="0x7cef9ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7cef9c80"/>
        <function-ref name="get" scoped="" ref="0x7cef9d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cef9e40"/>
        <function-ref name="set" scoped="" ref="0x7cef9f20"/>
        <function-ref name="clr" scoped="" ref="0x7cef8018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7cefa508" loc="62:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7cefa508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cefa6e0"/>
        <function-ref name="isInput" scoped="" ref="0x7cefa7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7cefa8a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7cefa980"/>
        <function-ref name="get" scoped="" ref="0x7cefaa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cefab40"/>
        <function-ref name="set" scoped="" ref="0x7cefac20"/>
        <function-ref name="clr" scoped="" ref="0x7cefad00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7cefcb20" loc="61:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7cefcb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cefccf8"/>
        <function-ref name="isInput" scoped="" ref="0x7cefcdd8"/>
        <function-ref name="toggle" scoped="" ref="0x7cefceb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7cefa010"/>
        <function-ref name="get" scoped="" ref="0x7cefa0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cefa1d0"/>
        <function-ref name="set" scoped="" ref="0x7cefa2b0"/>
        <function-ref name="clr" scoped="" ref="0x7cefa390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7cefc6c0" loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7cefc6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7cefc898"/>
        <function-ref name="stop" scoped="" ref="0x7cefc978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7cef8190" loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7cef8190"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7cef8368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7cefedb8" loc="57:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7cefedb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7cefd010"/>
        <function-ref name="sleep" scoped="" ref="0x7cefc470"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7cefd1d0"/>
        <function-ref name="dataReady" scoped="" ref="0x7cefc550"/>
        <function-ref name="initMaster" scoped="" ref="0x7cefd390"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7cefd470"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7cefd550"/>
        <function-ref name="read" scoped="" ref="0x7cefd630"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7cefd710"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7cefd7f0"/>
        <function-ref name="setClock" scoped="" ref="0x7cefd8d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7cefd9b0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7cefda90"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7cefdbf0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7cefdcd0"/>
        <function-ref name="write" scoped="" ref="0x7cefddb0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7cefde90"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7cefc010"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7cefc0f0"/>
        <function-ref name="getClock" scoped="" ref="0x7cefc1d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7cefc2b0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7cefd0f0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7cefd2b0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7cefc390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7cefae78" loc="63:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7cefae78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cef9070"/>
        <function-ref name="isInput" scoped="" ref="0x7cef9150"/>
        <function-ref name="toggle" scoped="" ref="0x7cef9230"/>
        <function-ref name="isOutput" scoped="" ref="0x7cef9310"/>
        <function-ref name="get" scoped="" ref="0x7cef93f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cef94d0"/>
        <function-ref name="set" scoped="" ref="0x7cef95b0"/>
        <function-ref name="clr" scoped="" ref="0x7cef9690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7cec0750" loc="76:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7cec0750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7cec0938"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7cec0a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7ce93030" loc="79:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ce93030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ce93218"/>
        <function-ref name="configure" scoped="" ref="0x7ce932f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7cec0010" loc="75:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7cec0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7cec01f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7cec02d8"/>
        <function-ref name="request" scoped="" ref="0x7cec03b8"/>
        <function-ref name="granted" scoped="" ref="0x7cec0498"/>
        <function-ref name="isOwner" scoped="" ref="0x7cec0578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7cec0b58" loc="77:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7cec0b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7cec0d30"/>
        <function-ref name="userId" scoped="" ref="0x7cec0e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7c981548" loc="34:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7c981548"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7c981720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7c981880" loc="35:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7c981880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7c981a58"/>
        <function-ref name="isEmpty" scoped="" ref="0x7c981b38"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7c981c18"/>
        <function-ref name="dequeue" scoped="" ref="0x7c981cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7c96e068" loc="54:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7c96e068"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7c96e250"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7c96e330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7c96e930" loc="58:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7c96e930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7c96eb18"/>
        <function-ref name="configure" scoped="" ref="0x7c96ebf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7c96ed58" loc="59:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7c96ed58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7c96d010"/>
        <function-ref name="isEmpty" scoped="" ref="0x7c96d0f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7c96d1d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7c96d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7c980908" loc="53:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7c980908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7c980af0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7c980bd0"/>
        <function-ref name="request" scoped="" ref="0x7c980cb0"/>
        <function-ref name="granted" scoped="" ref="0x7c980d90"/>
        <function-ref name="isOwner" scoped="" ref="0x7c980e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7c96e470" loc="55:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7c96e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7c96e648"/>
        <function-ref name="userId" scoped="" ref="0x7c96e728"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7c96d430" loc="71:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7c96d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7c96d608"/>
        <function-ref name="runTask" scoped="" ref="0x7c96d6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7ce740b0" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7ce740b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ce74288"/>
        <function-ref name="write" scoped="" ref="0x7ce74368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7ce77880" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7ce77880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ce77a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7ce74920" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7ce74920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ce74af8"/>
        <function-ref name="write" scoped="" ref="0x7ce74bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7ce73ae0" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ce73ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ce73cb8"/>
        <function-ref name="write" scoped="" ref="0x7ce73d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7ce767a0" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7ce767a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ce76978"/>
        <function-ref name="write" scoped="" ref="0x7ce76a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7ce78788" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7ce78788"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ce78960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7ce76010" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7ce76010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ce761e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7ce744e8" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7ce744e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ce746c0"/>
        <function-ref name="write" scoped="" ref="0x7ce747a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7ce77bd8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7ce77bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ce77db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7ce736a8" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7ce736a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ce73880"/>
        <function-ref name="write" scoped="" ref="0x7ce73960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7ce78ae0" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7ce78ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ce78cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7ce73f18" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7ce73f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ce72108"/>
        <function-ref name="writeDone" scoped="" ref="0x7ce721e8"/>
        <function-ref name="write" scoped="" ref="0x7ce722c8"/>
        <function-ref name="beginRead" scoped="" ref="0x7ce723a8"/>
        <function-ref name="readDone" scoped="" ref="0x7ce72488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7ce76bd8" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7ce76bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ce76e30"/>
        <function-ref name="write" scoped="" ref="0x7ce76f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7ce76368" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7ce76368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ce76540"/>
        <function-ref name="write" scoped="" ref="0x7ce76620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7ce78e38" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7ce78e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ce77050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ce79d28" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7ce79d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ce79f00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ce78010"/>
        <function-ref name="request" scoped="" ref="0x7ce780f0"/>
        <function-ref name="granted" scoped="" ref="0x7ce781d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ce782b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7ce73270" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7ce73270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ce73448"/>
        <function-ref name="write" scoped="" ref="0x7ce73528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7ce74d58" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7ce74d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ce73010"/>
        <function-ref name="write" scoped="" ref="0x7ce730f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7ce78430" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7ce78430"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ce78608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7ce77528" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7ce77528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ce77700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7ce771d0" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7ce771d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ce773a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7ce72608" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7ce72608"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ce727e0"/>
        <function-ref name="writeDone" scoped="" ref="0x7ce728c0"/>
        <function-ref name="write" scoped="" ref="0x7ce729a0"/>
        <function-ref name="beginRead" scoped="" ref="0x7ce72a80"/>
        <function-ref name="readDone" scoped="" ref="0x7ce72b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7ce60488" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x7ce60488"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ce60660"/>
        <function-ref name="cancel" scoped="" ref="0x7ce60740"/>
        <function-ref name="modify" scoped="" ref="0x7ce60820"/>
        <function-ref name="sendDone" scoped="" ref="0x7ce60900"/>
        <function-ref name="resendCCA" scoped="" ref="0x7ce609e0"/>
        <function-ref name="resend" scoped="" ref="0x7ce60ac0"/>
        <function-ref name="sendCCA" scoped="" ref="0x7ce60ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ce64cf0" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ce64cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ce64ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7ce60060" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7ce60060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ce60238"/>
        <function-ref name="stop" scoped="" ref="0x7ce60318"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaBackoff" ref="0x7ce60d10" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaBackoff" scoped="" ref="0x7ce60d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="congestion" scoped="" ref="0x7ce60ee8"/>
        <function-ref name="initial" scoped="" ref="0x7ce5f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioTimeStamping" ref="0x7ce5bbf8" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioTimeStamping" scoped="" ref="0x7ce5bbf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimeStamping"/>
      </instance>
      <interface-functions>
        <function-ref name="transmittedSFD" scoped="" ref="0x7ce5bdd0"/>
        <function-ref name="receivedSFD" scoped="" ref="0x7ce5beb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7ce479b0" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7ce479b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ce47b88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7ce54810" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x7ce54810"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7ce549e8"/>
        <function-ref name="disable" scoped="" ref="0x7ce54ac8"/>
        <function-ref name="captured" scoped="" ref="0x7ce54ba8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7ce54c88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7ce550b8" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x7ce550b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220b60"/>
            <typename><typedef-ref name="T32khz" ref="0x7e220ce0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ce54418"/>
        <function-ref name="fired" scoped="" ref="0x7ce55ca8"/>
        <function-ref name="startAt" scoped="" ref="0x7ce540d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7ce55ea8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ce54618"/>
        <function-ref name="start" scoped="" ref="0x7ce55808"/>
        <function-ref name="stop" scoped="" ref="0x7ce55aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7ce50980" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ce50980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ce50bd8"/>
        <function-ref name="write" scoped="" ref="0x7ce50cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ce57d58" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7ce57d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ce56010"/>
        <function-ref name="cancel" scoped="" ref="0x7ce560f0"/>
        <function-ref name="modify" scoped="" ref="0x7ce561d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ce562b0"/>
        <function-ref name="resendCCA" scoped="" ref="0x7ce56390"/>
        <function-ref name="resend" scoped="" ref="0x7ce56470"/>
        <function-ref name="sendCCA" scoped="" ref="0x7ce56550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7ce50e50" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7ce50e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ce47050"/>
        <function-ref name="write" scoped="" ref="0x7ce47130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7ce47d28" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7ce47d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ce47f00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7ce537c8" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7ce537c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ce539a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ce53a80"/>
        <function-ref name="toggle" scoped="" ref="0x7ce53b60"/>
        <function-ref name="isOutput" scoped="" ref="0x7ce53c40"/>
        <function-ref name="get" scoped="" ref="0x7ce53d20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ce53e00"/>
        <function-ref name="set" scoped="" ref="0x7ce53ee0"/>
        <function-ref name="clr" scoped="" ref="0x7ce51010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7ce42d78" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7ce42d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ce44010"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7ce440f0"/>
        <function-ref name="sfd" scoped="" ref="0x7ce441d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ce575c0" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ce575c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ce57798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7ce51b40" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7ce51b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ce51d18"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ce51df8"/>
        <function-ref name="request" scoped="" ref="0x7ce51ed8"/>
        <function-ref name="granted" scoped="" ref="0x7ce50010"/>
        <function-ref name="isOwner" scoped="" ref="0x7ce500f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7ce54e20" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7ce54e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ce53010"/>
        <function-ref name="isInput" scoped="" ref="0x7ce530f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ce531d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ce532b0"/>
        <function-ref name="get" scoped="" ref="0x7ce53390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ce53470"/>
        <function-ref name="set" scoped="" ref="0x7ce53550"/>
        <function-ref name="clr" scoped="" ref="0x7ce53630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7ce472c8" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7ce472c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ce474a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7ce511a8" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x7ce511a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ce51380"/>
        <function-ref name="isInput" scoped="" ref="0x7ce51460"/>
        <function-ref name="toggle" scoped="" ref="0x7ce51540"/>
        <function-ref name="isOutput" scoped="" ref="0x7ce51620"/>
        <function-ref name="get" scoped="" ref="0x7ce51700"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ce517e0"/>
        <function-ref name="set" scoped="" ref="0x7ce518c0"/>
        <function-ref name="clr" scoped="" ref="0x7ce519a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ce44338" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7ce44338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ce44510"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ce445f0"/>
        <function-ref name="led1On" scoped="" ref="0x7ce446d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ce447b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ce44890"/>
        <function-ref name="get" scoped="" ref="0x7ce44970"/>
        <function-ref name="led1Off" scoped="" ref="0x7ce44a50"/>
        <function-ref name="led2Off" scoped="" ref="0x7ce44dd0"/>
        <function-ref name="set" scoped="" ref="0x7ce44b30"/>
        <function-ref name="led0On" scoped="" ref="0x7ce44c10"/>
        <function-ref name="led2On" scoped="" ref="0x7ce44cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7ce57908" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7ce57908"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ce57ae0"/>
        <function-ref name="stop" scoped="" ref="0x7ce57bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaBackoff" ref="0x7ce566c0" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaBackoff" scoped="" ref="0x7ce566c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="congestion" scoped="" ref="0x7ce56898"/>
        <function-ref name="initial" scoped="" ref="0x7ce56978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeStamp" ref="0x7ce56b20" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStamp" scoped="" ref="0x7ce56b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimeStamping"/>
      </instance>
      <interface-functions>
        <function-ref name="transmittedSFD" scoped="" ref="0x7ce56cf8"/>
        <function-ref name="receivedSFD" scoped="" ref="0x7ce56dd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7ce50288" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7ce50288"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ce50460"/>
        <function-ref name="writeDone" scoped="" ref="0x7ce50540"/>
        <function-ref name="write" scoped="" ref="0x7ce50620"/>
        <function-ref name="beginRead" scoped="" ref="0x7ce50700"/>
        <function-ref name="readDone" scoped="" ref="0x7ce507e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7ce47638" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7ce47638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ce47810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7cdf90b0" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7cdf90b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7cdf9288"/>
        <function-ref name="write" scoped="" ref="0x7cdf9368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7cdfb880" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7cdfb880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7cdfba58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7cdf9920" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7cdf9920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7cdf9af8"/>
        <function-ref name="write" scoped="" ref="0x7cdf9bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7cdf7ae0" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7cdf7ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7cdf7cb8"/>
        <function-ref name="write" scoped="" ref="0x7cdf7d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7cdfa7a0" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7cdfa7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7cdfa978"/>
        <function-ref name="write" scoped="" ref="0x7cdfaa58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7cdfc788" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7cdfc788"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7cdfc960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7cdfa010" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7cdfa010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7cdfa1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7cdf94e8" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7cdf94e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7cdf96c0"/>
        <function-ref name="write" scoped="" ref="0x7cdf97a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7cdfbbd8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7cdfbbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7cdfbdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7cdf76a8" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7cdf76a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7cdf7880"/>
        <function-ref name="write" scoped="" ref="0x7cdf7960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7cdfcae0" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7cdfcae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7cdfccb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7cdf7f18" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7cdf7f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7cdf6108"/>
        <function-ref name="writeDone" scoped="" ref="0x7cdf61e8"/>
        <function-ref name="write" scoped="" ref="0x7cdf62c8"/>
        <function-ref name="beginRead" scoped="" ref="0x7cdf63a8"/>
        <function-ref name="readDone" scoped="" ref="0x7cdf6488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7cdfabd8" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7cdfabd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7cdfae30"/>
        <function-ref name="write" scoped="" ref="0x7cdfaf10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7cdfa368" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7cdfa368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7cdfa540"/>
        <function-ref name="write" scoped="" ref="0x7cdfa620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7cdfce38" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7cdfce38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7cdfb050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7cdfdcd8" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7cdfdcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7cdfdeb0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7cdfc010"/>
        <function-ref name="request" scoped="" ref="0x7cdfc0f0"/>
        <function-ref name="granted" scoped="" ref="0x7cdfc1d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7cdfc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7cdf7270" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7cdf7270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7cdf7448"/>
        <function-ref name="write" scoped="" ref="0x7cdf7528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7cdf9d58" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7cdf9d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7cdf7010"/>
        <function-ref name="write" scoped="" ref="0x7cdf70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7cdfc430" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7cdfc430"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7cdfc608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7cdfb528" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7cdfb528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7cdfb700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7cdfb1d0" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7cdfb1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7cdfb3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7cdf6608" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7cdf6608"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7cdf67e0"/>
        <function-ref name="writeDone" scoped="" ref="0x7cdf68c0"/>
        <function-ref name="write" scoped="" ref="0x7cdf69a0"/>
        <function-ref name="beginRead" scoped="" ref="0x7cdf6a80"/>
        <function-ref name="readDone" scoped="" ref="0x7cdf6b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7cdf0ec0" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7cdf0ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7cde70c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7cde71a0"/>
        <function-ref name="sfd" scoped="" ref="0x7cde7280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7cdf0750" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7cdf0750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7cdf0928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7cde73e8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7cde73e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7cde75c0"/>
        <function-ref name="receive" scoped="" ref="0x7cde76a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7cde7780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7cdf0a98" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7cdf0a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7cdf0c70"/>
        <function-ref name="stop" scoped="" ref="0x7cdf0d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7cde1288" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x7cde1288"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cde1460"/>
        <function-ref name="isInput" scoped="" ref="0x7cde1540"/>
        <function-ref name="toggle" scoped="" ref="0x7cde1620"/>
        <function-ref name="isOutput" scoped="" ref="0x7cde1700"/>
        <function-ref name="get" scoped="" ref="0x7cde17e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cde18c0"/>
        <function-ref name="set" scoped="" ref="0x7cde19a0"/>
        <function-ref name="clr" scoped="" ref="0x7cde1a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7cdda680" loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x7cdda680"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7cdda858"/>
        <function-ref name="runTask" scoped="" ref="0x7cdda938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7cde1c18" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x7cde1c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cde1df0"/>
        <function-ref name="isInput" scoped="" ref="0x7cde1ed0"/>
        <function-ref name="toggle" scoped="" ref="0x7cde0010"/>
        <function-ref name="isOutput" scoped="" ref="0x7cde00f0"/>
        <function-ref name="get" scoped="" ref="0x7cde01d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cde02b0"/>
        <function-ref name="set" scoped="" ref="0x7cde0390"/>
        <function-ref name="clr" scoped="" ref="0x7cde0470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7cde3dd8" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7cde3dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7cde2010"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7cde20f0"/>
        <function-ref name="sfd" scoped="" ref="0x7cde21d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7cddfa58" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7cddfa58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7cddfc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7cde2868" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7cde2868"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cde2a40"/>
        <function-ref name="isInput" scoped="" ref="0x7cde2b20"/>
        <function-ref name="toggle" scoped="" ref="0x7cde2c00"/>
        <function-ref name="isOutput" scoped="" ref="0x7cde2ce0"/>
        <function-ref name="get" scoped="" ref="0x7cde2dc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cde2ea0"/>
        <function-ref name="set" scoped="" ref="0x7cde1010"/>
        <function-ref name="clr" scoped="" ref="0x7cde10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7cde3668" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7cde3668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7cde3840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7cde2338" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7cde2338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7cde2510"/>
        <function-ref name="receive" scoped="" ref="0x7cde25f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7cde26d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7cde0c28" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7cde0c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7cde0e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7cde0ee0"/>
        <function-ref name="request" scoped="" ref="0x7cddf010"/>
        <function-ref name="granted" scoped="" ref="0x7cddf0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7cddf1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7cddf368" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7cddf368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7cddf540"/>
        <function-ref name="writeDone" scoped="" ref="0x7cddf620"/>
        <function-ref name="write" scoped="" ref="0x7cddf700"/>
        <function-ref name="beginRead" scoped="" ref="0x7cddf7e0"/>
        <function-ref name="readDone" scoped="" ref="0x7cddf8c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7cdde178" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7cdde178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7cdde3d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7cdde4b0"/>
        <function-ref name="led1On" scoped="" ref="0x7cdde590"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7cdde670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7cdde750"/>
        <function-ref name="get" scoped="" ref="0x7cdde830"/>
        <function-ref name="led1Off" scoped="" ref="0x7cdde910"/>
        <function-ref name="led2Off" scoped="" ref="0x7cddec90"/>
        <function-ref name="set" scoped="" ref="0x7cdde9f0"/>
        <function-ref name="led0On" scoped="" ref="0x7cddead0"/>
        <function-ref name="led2On" scoped="" ref="0x7cddebb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7cde39b0" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7cde39b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7cde3b88"/>
        <function-ref name="stop" scoped="" ref="0x7cde3c68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7cde0610" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7cde0610"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7cde07e8"/>
        <function-ref name="disable" scoped="" ref="0x7cde08c8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7cde09a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7cde0a88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7cddfdd0" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7cddfdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7cdde010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7cdb0d38" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7cdb0d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7cdb0f10"/>
        <function-ref name="write" scoped="" ref="0x7cda7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7cdb15b8" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7cdb15b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7cdb1790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7cda75c8" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7cda75c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7cda77a0"/>
        <function-ref name="write" scoped="" ref="0x7cda7880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7cda66e8" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7cda66e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7cda68c0"/>
        <function-ref name="write" scoped="" ref="0x7cda69a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7cdb0448" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7cdb0448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7cdb0620"/>
        <function-ref name="write" scoped="" ref="0x7cdb0700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7cdb24e8" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7cdb24e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7cdb26c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7cdb1c68" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7cdb1c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7cdb1e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7cda7190" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7cda7190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7cda7368"/>
        <function-ref name="write" scoped="" ref="0x7cda7448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7cdb1910" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7cdb1910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7cdb1ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7cda62b0" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7cda62b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7cda6488"/>
        <function-ref name="write" scoped="" ref="0x7cda6568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7cdb2840" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7cdb2840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7cdb2a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7cda6b20" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7cda6b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7cda6cf8"/>
        <function-ref name="writeDone" scoped="" ref="0x7cda6dd8"/>
        <function-ref name="write" scoped="" ref="0x7cda6eb8"/>
        <function-ref name="beginRead" scoped="" ref="0x7cda5010"/>
        <function-ref name="readDone" scoped="" ref="0x7cda50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7cdb0880" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7cdb0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7cdb0ad8"/>
        <function-ref name="write" scoped="" ref="0x7cdb0bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7cdb0010" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7cdb0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7cdb01e8"/>
        <function-ref name="write" scoped="" ref="0x7cdb02c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7cdb2b98" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7cdb2b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7cdb2d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7cde49f8" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7cde49f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7cde4bd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7cde4cb0"/>
        <function-ref name="request" scoped="" ref="0x7cde4d90"/>
        <function-ref name="granted" scoped="" ref="0x7cde4e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7cdb2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7cda7e38" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7cda7e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7cda6050"/>
        <function-ref name="write" scoped="" ref="0x7cda6130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7cda7a00" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7cda7a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7cda7bd8"/>
        <function-ref name="write" scoped="" ref="0x7cda7cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7cdb2190" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7cdb2190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7cdb2368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7cdb1260" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7cdb1260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7cdb1438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7cdb2ef0" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7cdb2ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7cdb10e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7cda5270" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7cda5270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7cda5448"/>
        <function-ref name="writeDone" scoped="" ref="0x7cda5528"/>
        <function-ref name="write" scoped="" ref="0x7cda5608"/>
        <function-ref name="beginRead" scoped="" ref="0x7cda56e8"/>
        <function-ref name="readDone" scoped="" ref="0x7cda57c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7cd96e18" loc="35:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7cd96e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7cd98010"/>
        <function-ref name="rand32" scoped="" ref="0x7cd980f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7cd96568" loc="34:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7cd96568"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7cd96b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7cd9b808" loc="33:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7cd9b808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7cd9b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7cd92d08" loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7cd92d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7cd92ee0"/>
        <function-ref name="rand32" scoped="" ref="0x7cd91010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7cd92458" loc="33:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7cd92458"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7cd92a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7cd92040" loc="32:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7cd92040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7cd92218"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7cd86cd8" loc="37:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7cd86cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7cd86eb0"/>
        <function-ref name="rand32" scoped="" ref="0x7cd85010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7cd86428" loc="36:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7cd86428"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7cd86a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7cd86010" loc="35:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7cd86010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7cd861e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7cd7ed78" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7cd7ed78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7cd77010"/>
        <function-ref name="getRssi" scoped="" ref="0x7cd770f0"/>
        <function-ref name="getPower" scoped="" ref="0x7cd771d0"/>
        <function-ref name="getLqi" scoped="" ref="0x7cd772b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7cd77450" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7cd77450"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7cd77628"/>
        <function-ref name="noAck" scoped="" ref="0x7cd77708"/>
        <function-ref name="wasAcked" scoped="" ref="0x7cd777e8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Boot" loc="39:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10;</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7e083018" loc="49:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="LCDSetter" loc="1:LCDSetter.nc">
      <function command="" provided="0" name="init" ref="0x7e061cf8" loc="2:LCDSetter.nc">
        <interfacedef-ref qname="LCDSetter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setLCD" ref="0x7e043660" loc="3:LCDSetter.nc">
        <interfacedef-ref qname="LCDSetter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7e043030" loc="3:LCDSetter.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="value" ref="0x7e0431c0" loc="3:LCDSetter.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
          </variable>
          <variable name="avg" ref="0x7e043350" loc="3:LCDSetter.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
          </variable>
          <variable name="stdev" ref="0x7e0434e0" loc="3:LCDSetter.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LedController" loc="2:LedController.nc">
      <function command="" provided="0" name="test" ref="0x7e063b38" loc="3:LedController.nc">
        <interfacedef-ref qname="LedController"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="BlinkLed1" ref="0x7e053600" loc="9:LedController.nc">
        <interfacedef-ref qname="LedController"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="BlinkLed2" ref="0x7e0538f8" loc="10:LedController.nc">
        <interfacedef-ref qname="LedController"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="BlinkLed0" ref="0x7e053308" loc="8:LedController.nc">
        <interfacedef-ref qname="LedController"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setNumber" ref="0x7e053010" loc="5:LedController.nc">
        <interfacedef-ref qname="LedController"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="num" ref="0x7e063e58" loc="5:LedController.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BaseStation" loc="1:BaseStation.nc">
      <function command="" provided="0" name="init" ref="0x7e032160" loc="2:BaseStation.nc">
        <interfacedef-ref qname="BaseStation"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="TempSensor" loc="1:TempSensor.nc">
      <function event="" provided="0" name="done" ref="0x7e040010" loc="3:TempSensor.nc">
        <interfacedef-ref qname="TempSensor"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mytemp" ref="0x7e041ac8" loc="3:TempSensor.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
          </variable>
          <variable name="myhumi" ref="0x7e041c58" loc="3:TempSensor.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
          </variable>
          <variable name="myur" ref="0x7e041de8" loc="3:TempSensor.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7e0417a8" loc="2:TempSensor.nc">
        <interfacedef-ref qname="TempSensor"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7e081660" loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7e081660"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7e0715b8" loc="125:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.&#10;</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7e080950" loc="72:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7e0729a8" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7e072418" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7e0725a8" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7e0720f0" loc="87:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.&#10;</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7e071dd0" loc="140:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7e0719f8" loc="133:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7e080d20" loc="81:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7e081d18" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7e081a70" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7e071260" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7e072cd0" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7e072e60" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7e080310" loc="62:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7e080068" loc="62:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e080618" loc="67:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="40:/opt/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Init.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.1.2.13 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7dfe3eb0" loc="51:/opt/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7dfc2778" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7dfc2520" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7dfc3208" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.&#10;</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7dfc37d8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10;</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7dfc3560" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7dfc3db0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10;</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7dfc3b30" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7dfc21b8" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10;</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10;</short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7df80cb0" loc="33:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7df72010" loc="34:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7df80680" loc="31:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7df72648" loc="36:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7df80998" loc="32:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7df72328" loc="35:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7df80060" loc="29:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="clr" ref="0x7df80370" loc="30:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.&#10;&#10;</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7e330010" loc="46:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7e3307f8" loc="61:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7e330428" loc="54:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10;</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7e310198" loc="56:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7e3105a0" loc="64:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7e1513c8" loc="59:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep. </short>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.1.2.11 2006/09/22 19:23:59 idgay Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7e0e0028" loc="54:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7e252338"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7e101ee8" loc="44:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7dc547c0" loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7dc547c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7dc54c80" loc="50:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10;</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7dc30450" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7dc30450"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7dc30568" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dc30568"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7dc30a38" loc="53:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dc30568"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7dc251b0" loc="65:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7dc30e58" loc="60:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits. </short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7dc25580" loc="71:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed. </short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10;</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7dc42388" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7dc42388"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7dc424a0" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dc424a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7dc352a8" loc="98:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.&#10;</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dc424a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7dc40268" loc="67:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7dc40f08" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dc424a0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dc424a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7dc409e0" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dc424a0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7dc40b70" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dc424a0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7dc406a0" loc="77:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7dc356e0" loc="105:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10;</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dc424a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="start" ref="0x7dc42b60" loc="55:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dc424a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7dc428c8" loc="55:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dc424a0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7dc42f18" loc="62:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10;</short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x7dc01cd0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7e2015c0"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7e201810"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7dc00d00" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7e1e16f0"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7e1e1940"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7dc004f0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7e1f03a8"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7e1f05f8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7dc009a8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7e1f03a8"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7e1f05f8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7dc00840" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7e1f03a8"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7e1f05f8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7dbf41d0" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7e1e16f0"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7e1e1940"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7dbf4068" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7e1e16f0"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7e1e1940"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7dc00198" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7e2015c0"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7e201810"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7dc00030" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7e2015c0"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7e201810"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.&#10;</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7dbf2778" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dbf2778"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7dbf0278" loc="65:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10;</short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7dbf1520" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7dbf2bf0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.&#10;</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dbf2778"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="reset" ref="0x7dbf1858" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7dbf0600" loc="71:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10;</short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7dbf11f0" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.&#10;</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dbf2778"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7dbf1010" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dbf2778"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7dbf1b88" loc="56:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7dbf1eb8" loc="59:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.  &#10;</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7dc12010" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7dc12010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7dc100e8" loc="89:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="test" ref="0x7dc11a18" loc="78:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10;</short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7dc12470" loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.&#10;</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7dc12010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7dc10600" loc="95:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.&#10;</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7dc10428" loc="95:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7dc10998" loc="101:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.&#10;</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="reset" ref="0x7dc11010" loc="66:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7dc12cb8" loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7dc11da8" loc="84:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10;</short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7dc12970" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.&#10;</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7dc12010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7dc127b0" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7dc12010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7dc11348" loc="69:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7dc11678" loc="72:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <short>&#10; Constants for manipulating LEDs.&#10;&#10;</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7d9f28a0" loc="50:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7d9f2c78" loc="56:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7d9f1010" loc="61:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7d9f1758" loc="72:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7d9e7220" loc="89:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7d9e7760" loc="106:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LED_LED0, LED_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7d9f1380" loc="66:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7d9e7e38" loc="123:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask. </short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7d9e7a98" loc="123:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7d9f2530" loc="45:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7d9f1ac8" loc="78:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7d9f1e38" loc="83:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Interaction" loc="20:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
      <documentation loc="20:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
        <short>***************************************************************************</short>
      </documentation>
      <function event="" provided="0" name="StartDoneConfiguration" ref="0x7d8a6940" loc="22:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
        <interfacedef-ref qname="Interaction"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="appType" ref="0x7d8a6648" loc="22:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="optType" ref="0x7d8a67d0" loc="22:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getSensorDataDone" ref="0x7d8a4748" loc="26:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
        <interfacedef-ref qname="Interaction"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:67" alignment="I:1"><struct-ref name="_app_struct" ref="0x7d8d0340"/>
                <typename><typedef-ref name="App_struct_t" ref="0x7d8d08a8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="App_Payload" ref="0x7d8a4448" loc="26:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:67" alignment="I:1"><struct-ref name="_app_struct" ref="0x7d8d0340"/>
                <typename><typedef-ref name="App_struct_t" ref="0x7d8d08a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="app_size" ref="0x7d8a45d8" loc="26:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="Urgency_Data" ref="0x7d8a33d0" loc="29:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
        <interfacedef-ref qname="Interaction"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Urgency_Payload" ref="0x7d8a30d8" loc="29:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7d8a3260" loc="29:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Process_CMD" ref="0x7d8a4d78" loc="28:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
        <interfacedef-ref qname="Interaction"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="payload" ref="0x7d8a4a80" loc="28:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7d8a4c08" loc="28:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="SetSamplingTime" ref="0x7d8a6dd8" loc="24:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
        <interfacedef-ref qname="Interaction"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="SamplingInfo" ref="0x7d8a6c70" loc="24:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSensorData" ref="0x7d8a40f0" loc="25:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
        <interfacedef-ref qname="Interaction"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="StartConfiguration" ref="0x7d8a6320" loc="21:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
        <interfacedef-ref qname="Interaction"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:67" alignment="I:1"><struct-ref name="_app_struct" ref="0x7d8d0340"/>
                <typename><typedef-ref name="App_struct_t" ref="0x7d8d08a8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="App_Payload" ref="0x7d8a61b8" loc="21:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:67" alignment="I:1"><struct-ref name="_app_struct" ref="0x7d8d0340"/>
                <typename><typedef-ref name="App_struct_t" ref="0x7d8d08a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Send_LongData" ref="0x7d8a3d30" loc="31:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
        <interfacedef-ref qname="Interaction"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="OptType" ref="0x7d8a36f0" loc="31:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="Cmd1" ref="0x7d8a3878" loc="31:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="Len" ref="0x7d8a3a00" loc="31:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="LongDataBuff" ref="0x7d8a3bb0" loc="31:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="65:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7d899888" loc="73:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.&#10;&#10;</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7d899cd8" loc="82:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10;</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="SCSuartDBG" loc="29:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBG.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBG.nc">
        <short>***************************************************************************</short>
      </documentation>
      <function command="" provided="0" name="UARTSend" ref="0x7d896380" loc="30:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBG.nc">
        <interfacedef-ref qname="SCSuartDBG"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7d896088" loc="30:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBG.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7d896210" loc="30:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBG.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
      <documentation loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7d849780" loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7d849780"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7d849be0" loc="55:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.&#10; &#10;</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7d8482d8" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().&#10;&#10;</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7d849780"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7d849f00" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7d8480b0" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7d849780"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CommunicationWithOPT" loc="20:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
      <documentation loc="20:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
        <short>***************************************************************************</short>
      </documentation>
      <function event="" provided="0" name="parsing_sensor" ref="0x7d8389a0" loc="30:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
        <interfacedef-ref qname="CommunicationWithOPT"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="RecvMsg" ref="0x7d838838" loc="30:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="RequestLongMSG" ref="0x7d839308" loc="26:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
        <interfacedef-ref qname="CommunicationWithOPT"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="OptType" ref="0x7d839010" loc="26:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="Seq" ref="0x7d839198" loc="26:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="SpecialControlMSG" ref="0x7d838010" loc="27:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
        <interfacedef-ref qname="CommunicationWithOPT"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="TXpacketType" ref="0x7d839638" loc="27:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="OptType" ref="0x7d8397c0" loc="27:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="Cmd1" ref="0x7d839948" loc="27:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="Cmd2" ref="0x7d839ad0" loc="27:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="SetDataBuff" ref="0x7d839c80" loc="27:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="RXpacketType" ref="0x7d839e10" loc="27:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="parsing_control" ref="0x7d838e68" loc="31:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
        <interfacedef-ref qname="CommunicationWithOPT"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="RecvMsg" ref="0x7d838d00" loc="31:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="parsing_longDT" ref="0x7d836358" loc="32:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
        <interfacedef-ref qname="CommunicationWithOPT"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="RecvMsg" ref="0x7d8361f0" loc="32:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="RequestSensorMSG" ref="0x7d840c38" loc="25:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
        <interfacedef-ref qname="CommunicationWithOPT"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="OptType" ref="0x7d840ad0" loc="25:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="SendConfigureMSG" ref="0x7d8424b0" loc="22:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
        <interfacedef-ref qname="CommunicationWithOPT"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="SendLongMSG" ref="0x7d842e10" loc="23:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
        <interfacedef-ref qname="CommunicationWithOPT"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="OptType" ref="0x7d8427d0" loc="23:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="Cmd1" ref="0x7d842958" loc="23:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="Len" ref="0x7d842ae0" loc="23:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="LongDataBuff" ref="0x7d842c90" loc="23:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7d8421b0" loc="21:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
        <interfacedef-ref qname="CommunicationWithOPT"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="SendControlMSG" ref="0x7d8407a8" loc="24:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
        <interfacedef-ref qname="CommunicationWithOPT"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="OptType" ref="0x7d840168" loc="24:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="Cmd1" ref="0x7d8402f0" loc="24:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="Cmd2" ref="0x7d840478" loc="24:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="SetDataBuff" ref="0x7d840628" loc="24:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="parsing_config" ref="0x7d8384d8" loc="29:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
        <interfacedef-ref qname="CommunicationWithOPT"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="RecvMsg" ref="0x7d838370" loc="29:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SensirionSht11" loc="40:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
        <short>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor. &#10;&#10;</short>
        <long>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="measureHumidityDone" ref="0x7d784ae0" loc="84:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a humidity measurement.&#10;&#10;</short>
          <long>&#10; Presents the result of a humidity measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the humidity reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7d784718" loc="84:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7d7848a8" loc="84:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readStatusReg" ref="0x7d784ed8" loc="92:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
        <documentation loc="86:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Reads the current contents of the SHT11 status and control&#10; register.</short>
          <long>&#10; Reads the current contents of the SHT11 status and control&#10; register. See the datasheet for interpretation of this register.&#10;&#10; @return SUCCESS if the read will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="measureHumidity" ref="0x7d7843f0" loc="76:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Starts a humidity measurement.&#10;&#10;</short>
          <long>&#10; Starts a humidity measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="measureTemperature" ref="0x7d785960" loc="61:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Starts a temperature measurement.&#10;&#10;</short>
          <long>&#10; Starts a temperature measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="writeStatusReg" ref="0x7d783b50" loc="109:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Writes a new value to the SHT11 status and control register.&#10;&#10;</short>
          <long>&#10; Writes a new value to the SHT11 status and control register.&#10;&#10; @param val the new value to be written&#10;&#10; @return SUCCESS if the write will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7d783900" loc="109:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7d7850c0" loc="47:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Resets the sensor.&#10;&#10;</short>
          <long>&#10; Resets the sensor.&#10;&#10; @return SUCCESS if the sensor will be reset&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="writeStatusRegDone" ref="0x7d7810e0" loc="116:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
        <documentation loc="111:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Signals the completion of the status register write.&#10;&#10;</short>
          <long>&#10; Signals the completion of the status register write.&#10;&#10; @param result SUCCESS if the write was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7d783e78" loc="116:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readStatusRegDone" ref="0x7d7835d8" loc="100:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Presents the value of the status register.&#10;&#10;</short>
          <long>&#10; Presents the value of the status register.&#10;&#10; @param result SUCCESS if the read succeeded&#10; @param val the value of the register&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7d783228" loc="100:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7d7833b0" loc="100:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="resetDone" ref="0x7d7855d8" loc="54:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Signals that the sensor has been reset.&#10;&#10;</short>
          <long>&#10; Signals that the sensor has been reset.&#10;&#10; @param result SUCCESS if the reset succeeded&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7d7853e0" loc="54:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="measureTemperatureDone" ref="0x7d784070" loc="69:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a temperature measurement.&#10;&#10;</short>
          <long>&#10; Presents the result of a temperature measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the temperature reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7d785c88" loc="69:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7d785e18" loc="69:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
      <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.1.2.10 $&#10; @date $Date: 2006/08/15 11:50:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7d78ad58" loc="101:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.&#10;&#10;</short>
          <long>&#10; Release a shared resource you previously acquired.&#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7d78a620" loc="87:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="request" ref="0x7d78a1f0" loc="78:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="granted" ref="0x7d78a940" loc="92:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7d788180" loc="109:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="103:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="32:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.1.2.3 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7d746590" loc="57:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.&#10;&#10;</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0x7d7461e8" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10;</short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7d747e00" loc="43:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7d747ad8" loc="42:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="66:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7d6db408" loc="88:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10;</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7d6db168" loc="88:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7d6dbef0" loc="110:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="104:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.&#10;&#10;</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7d6dbca0" loc="110:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7d6e0e20" loc="79:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents. </short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if issuing the start command was successful&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7d6db980" loc="102:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Stop the component and pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;</short>
          <long>&#10; Stop the component and pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10; Return values of SUCCESS will always result in a&#10; &#60;code>stopDone()&#60;/code> event being signalled.&#10;&#10; @return SUCCESS if issuing the stop command was successful&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10;</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7d6c4858" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7d6c25c8" loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0x7d6c4500" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="edge" ref="0x7d6c2288" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.&#10;</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7d6c2010" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7d6c41b0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7d6c4c30" loc="52:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10;</short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10;</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7d6b4658" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10;</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.1.2.5 $&#10; @date $Date: 2006/08/15 11:50:42 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7d6632e0" loc="43:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7d6637b8" loc="51:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7d6569b0" loc="55:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.&#10;</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="configure" ref="0x7d6565d8" loc="49:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.&#10;</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceController" loc="40:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10;</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $Revision: 1.1.2.4 $&#10; @date $Date: 2006/08/15 11:50:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7d660440" loc="56:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
          <short>&#10; Release control of the resource&#10;&#10;</short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceController"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="requested" ref="0x7d660d08" loc="73:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceController"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="granted" ref="0x7d660010" loc="46:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceController"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7d660850" loc="65:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10; </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceController"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7d65c218" loc="81:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceController"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7d659b18" loc="80:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.&#10;&#10;</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="userId" ref="0x7d659f18" loc="88:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.&#10; &#10;</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2006/08/15 11:50:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7d649248" loc="69:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a cleint id&#10;&#10;</short>
          <long>&#10; Enqueue a cleint id&#10;&#10; @param cleintId - the cleint id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7d653518"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7d649010" loc="69:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7d653518"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7d64b288" loc="43:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.&#10;&#10;</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7d64b868" loc="52:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10;</short>
          <long>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7d653518"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7d64b5e0" loc="52:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7d653518"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7d64bc78" loc="60:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the cleint id of the next resource in the queue. &#10;</short>
          <long>&#10; Retreive the cleint id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The cleint id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7d653518"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="45:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7d606290" loc="52:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource. </short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="19:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10;</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x7d5b8498" loc="32:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10;</short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7d5b80d0" loc="25:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.&#10;</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x7d5b8860" loc="39:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.&#10;</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="51:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
      <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7d5b0350" loc="51:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7d5b0350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7d5b07d0" loc="57:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.&#10; &#10;</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7d5b0ec0" loc="65:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().&#10;&#10;</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7d5b0350"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7d5b0b10" loc="65:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7d5b0c98" loc="65:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7d5b0350"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="68:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10;&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10;&#10; from multiple channels using the ATmega128's free-running mode.&#10;&#10;</short>
        <long>&#10;&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10;&#10; from multiple channels using the ATmega128's free-running mode.&#10;&#10; &#60;p>&#10;&#10; Because of the possibility that samples may be imprecise after &#10;&#10; switching channels and/or reference voltages, and because there&#10;&#10; is a one sample delay on swithcing channels and reference voltages,&#10;&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10;&#10; &#60;ol type=&#34;A&#34;>&#10;&#10; &#60;li>Acquire N samples from channel C:&#10;&#10;    &#60;ol>&#10;&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;&#10;       (note that the choice of prescalers is very limited, so you&#10;&#10;       don't have many choices for sampling rate)&#10;&#10;    &#60;li>ignore the first dataReady event&#10;&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;&#10;       on the last one&#10;&#10;    &#60;/ol>&#10;&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;&#10;    assumes that none of these channels are differential)&#10;&#10;    &#60;ol>&#10;&#10;    &#60;li>call getData to start sampling on channel C1&#10;&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;&#10;       *newChannel&#10;&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;&#10;       (the data from the first dataReady event is ignored)&#10;&#10;    &#60;/ol>&#10;&#10; &#60;/ol>&#10;&#10;&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;&#10; @author David Gay&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7d59a538" loc="91:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10;&#10; Initiates free-running ADC conversions, with the ability to switch &#10;&#10; channels and reference-voltage with a one sample delay.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Initiates free-running ADC conversions, with the ability to switch &#10;&#10; channels and reference-voltage with a one sample delay.&#10;&#10;&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;&#10;   be changed in the dataReady event, though these changes happen&#10;&#10;   with a one-sample delay (this is a hardware restriction).&#10;&#10; @param refVoltage Initial A/D reference voltage. See the&#10;&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;&#10;   the reference voltage can be changed in the dataReady event with&#10;&#10;   a one-sample delay.&#10;&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;&#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10;&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;&#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;&#10;  See the ATmega128 manual for details.&#10;&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;&#10;   imprecise (due to a change in reference voltage, or switching to a&#10;&#10;   differential input channel)&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7d59b9f8" loc="91:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7d59bb88" loc="91:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7d59bd28" loc="92:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7d59beb8" loc="92:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7d599668" loc="110:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10;&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10;&#10; Returns the next sample in a free-running conversion. Allow the user&#10;&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10;&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10;&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;&#10;   (we assume that the second conversion after a change of reference&#10;&#10;   voltage or after switching to a differential channel is precise)&#10;&#10; @param channel Channel this sample was from.&#10;&#10; @param newChannel Change this parameter to switch to a new channel&#10;&#10;   for the second next sample.&#10;&#10; @param newRefVoltage Change this parameter to change the reference &#10;&#10;   voltage for the second next sample.&#10;&#10;&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7d59aa68" loc="110:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7d59abf0" loc="110:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x7d59ad78" loc="110:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x7d599010" loc="111:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x7d5991c0" loc="111:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="43:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10;&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10;&#10; a single sample from a channel.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10;&#10; a single sample from a channel.&#10;&#10;&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;&#10; @author David Gay&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7d5a23a0" loc="61:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10;&#10; Initiates an ADC conversion on a given channel.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Initiates an ADC conversion on a given channel.&#10;&#10;&#10;&#10; @param channel A/D conversion channel.&#10;&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10;&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;&#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10;&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;&#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;&#10;  See the ATmega128 manual for details.&#10;&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;&#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;&#10;   differential input channel)&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7d5a3868" loc="61:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7d5a39f8" loc="61:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7d5a3b98" loc="62:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7d5a3d28" loc="62:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7d5a03f0" loc="82:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10;&#10; Cancel an outstanding getData operation.</short>
          <long>&#10;&#10; Cancel an outstanding getData operation. Use with care, to&#10;&#10; avoid problems with races between the dataReady event and cancel.&#10;&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;&#10;   conversion was already complete. dataReady will be (or has&#10;&#10;   already been) signaled.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7d5a2d58" loc="72:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10;&#10; Indicates a sample has been recorded by the ADC as the result&#10;&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Indicates a sample has been recorded by the ADC as the result&#10;&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10;&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10;&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7d5a28b8" loc="72:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7d5a2a40" loc="72:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="39:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x7d588758" loc="105:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x7d58ba60" loc="44:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10;</short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7e232540"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x7e2327f8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x7d5868d0" loc="131:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="126:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10;</short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7d5866b0" loc="131:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7d588b58" loc="113:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="109:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10;</short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x7d589010" loc="73:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x7d58a010" loc="49:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10;</short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7e232540"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x7e2327f8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x7d58bda8" loc="49:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7e232540"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x7e2327f8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x7d589678" loc="82:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x7d586370" loc="124:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="119:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10;</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7d586dc8" loc="141:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="133:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x7d589340" loc="77:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x7d589cf0" loc="90:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="87:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x7d5899b8" loc="86:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7d5880e8" loc="97:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x7d588f08" loc="118:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="114:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10;</short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x7d58a8e0" loc="60:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10;</short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7e2218f8"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7e221ce8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x7d58a6f8" loc="60:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7e2218f8"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7e221ce8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x7d588420" loc="101:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="98:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x7d58a3b0" loc="55:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10;</short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7e2218f8"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7e221ce8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7d58ac78" loc="66:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10;</short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7d5852f0" loc="147:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="143:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10;</short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7d585120" loc="147:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7d591128" loc="73:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.&#10;&#10;</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7d591598" loc="82:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10;</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ZigbexBusAdc" loc="27:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusAdc.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusAdc.nc">
        <short>***************************************************************************</short>
      </documentation>
      <function command="" provided="0" name="getChannel" ref="0x7d4d7f28" loc="31:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusAdc.nc">
        <documentation loc="28:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusAdc.nc">
          <short>&#10; Return the A/D channel number to use for one of the ADCn pins.&#10;</short>
        </documentation>
        <interfacedef-ref qname="ZigbexBusAdc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10;</short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.1 $ $Date: 2006/10/10 19:18:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7d48a570" loc="44:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7d48bf08" loc="42:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x7d488818" loc="49:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7d4886b0" loc="49:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7d488060" loc="47:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7d48b8c8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7d48bbe8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7d48a250" loc="43:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x7d48a890" loc="45:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="tx" ref="0x7d48ad30" loc="46:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7d48abc8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7d488378" loc="48:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="SCSuartDBGRecv" loc="29:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGRecv.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGRecv.nc">
        <short>***************************************************************************</short>
      </documentation>
      <function event="" provided="0" name="UARTRecv" ref="0x7d3cea60" loc="30:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGRecv.nc">
        <interfacedef-ref qname="SCSuartDBGRecv"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="recv_Char" ref="0x7d3ce8f8" loc="30:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGRecv.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
      <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="source" ref="0x7d2fa2b0" loc="77:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.&#10;</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param amsg  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7d36ea30"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7d2fa030" loc="77:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7d2fc6d0" loc="57:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.&#10;</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7d36ea30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="destination" ref="0x7d2fccb8" loc="67:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.&#10;</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param amsg    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7d36ea30"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7d2fca28" loc="67:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7d2f9490" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet. </short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7d36ea30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7d2fae88" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7d2f9030" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7d36ea30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7d2fab40" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet. </short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7d36ea30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7d2fa5f8" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7d2fa788" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7d36ea30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7d2f8178" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.&#10;</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  amsg   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7d36e688"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7d2f9f08" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7d2f89b8" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet. </short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  amsg    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7d36e688"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7d2f84b8" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7d2f8640" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7d36e688"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7d2f9bc0" loc="125:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7d2f97d8" loc="125:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7d301978" loc="54:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet. </short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  msg    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7d301728" loc="54:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7d300010" loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  msg    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7d301cc8" loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7d2ff628" loc="108:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet. </short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.  If&#10; len is not NULL, getPayload will return the length of the payload&#10; in it, which is the same as the return value from&#10; payloadLength(). If a protocol does not support variable length&#10; packets, then *len is equal to maxPayloadLength().&#10;&#10; @param msg   the packet&#10; @param len   pointer to where the current payload length should be stored.&#10; @return      a pointer to the packet's data payload for this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7d2ff0d0" loc="108:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7d2ff278" loc="108:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7d300d68" loc="95:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7d300890" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param msg   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7d300360" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7d3004e8" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.1.2.13 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="payloadLength" ref="0x7d323b00" loc="89:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This call is identical&#10; to &#60;TT>Packet.payloadLength&#60;/TT>, and is included in Receive as a&#10; convenience.&#10;&#10; @param  msg      the packet&#10; @return          the length of the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7d323880" loc="89:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x7d324cb8" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  msg      the receied packet&#10; @param  payload  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return          a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
              <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7d324428" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7d3245c8" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7d324750" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7d323530" loc="79:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Return point to a protocol's payload region in a packet. </short>
          <long>&#10; Return point to a protocol's payload region in a packet.  If len&#10; is not NULL, getPayload will return the length of the payload in&#10; it. This call is identical to &#60;TT>Packet.getPayload&#60;/TT>, and is&#10; included in Receive as a convenience.&#10;&#10; @param  msg      the packet&#10; @param  len      a pointer to where to store the payload length&#10; @return          a pointer to the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7d323030" loc="79:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7d3231d8" loc="79:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x7d32a918" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7d36ea30"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7d32a068" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7d36ea30"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7d32a218" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7d32a3a0" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7d328328" loc="125:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.&#10;</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; The length of this region is maxPayloadLength(). This command&#10; behaves similarly to &#60;tt>Packet.getPayload&#60;/tt> (minus the&#10; length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7d328010" loc="125:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7d329c90" loc="112:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7d329058" loc="85:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7d32ac60" loc="85:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7d329840" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7d3293a0" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7d329528" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10;</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7d2c1090" loc="48:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10;</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param msg - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7d2d2ca8" loc="48:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7d2c1728" loc="60:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10;</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param msg - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7d2c13f8" loc="60:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7d2c1db8" loc="74:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10;</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param msg - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7d2c1a98" loc="74:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7d2b6f08" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7d2b6b50" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7d2b6cd8" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7d2b5500" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7eeb09c0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7d2b5298" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7d2b67e8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.&#10;&#10;</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7d2b65f8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7d2b5ad8" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7d2b5868" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/tinyos-2.x/tos/interfaces/Send.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.1.2.13 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7d29cb58" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   msg     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7d29c4c0" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7d29c648" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7d29a518" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.&#10;</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; The length of this region is maxPayloadLength(). This command&#10; behaves similarly to &#60;tt>Packet.getPayload&#60;/tt> (minus the&#10; length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param   msg    the packet&#10; @return         a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7d29a1f8" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7d29be98" loc="101:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7d29b250" loc="78:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   msg    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7d29cea0" loc="78:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7d29ba48" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param msg   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7d29b598" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7d29b720" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.6 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7d2330e0" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Send a message with CCA disabled.&#10;&#10;</short>
          <long>&#10; Send a message with CCA disabled.&#10;&#10; @param p_msg message to send.&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7d235e80" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7d233c20" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="72:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.&#10;&#10;</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="modify" ref="0x7d232cf0" loc="96:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="87:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7d2326f0" loc="96:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7d232898" loc="96:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7d232a20" loc="96:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7d2323b0" loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10;</short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7d232010" loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7d232198" loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resendCCA" ref="0x7d2334b0" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Send the previous message again with CCA enabled.&#10;&#10;</short>
          <long>&#10; Send the previous message again with CCA enabled.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="resend" ref="0x7d233878" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Send the previous message again with CCA disabled.&#10;&#10;</short>
          <long>&#10; Send the previous message again with CCA disabled.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sendCCA" ref="0x7d235b18" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Send a message with CCA enabled.&#10;&#10;</short>
          <long>&#10; Send a message with CCA enabled.&#10;&#10; @param p_msg message to send.&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7d235900" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/opt/tinyos-2.x/tos/interfaces/Random.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10;</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7d21e518" loc="41:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number. &#10;</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7d21e160" loc="35:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number. &#10;</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7d239c08" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7d238ab0" loc="97:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Disable RX.&#10;&#10;</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7d238730" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Enable RX.&#10;&#10;</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7d239128" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7d239810" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.&#10;&#10;</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7d238010" loc="76:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7d2383b0" loc="83:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Stop the oscillator.&#10;&#10;</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7d239478" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaBackoff" loc="29:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
        <short>&#10; Interface for MAC Backoff values from the radio stack.&#10;</short>
        <long>&#10; Interface for MAC Backoff values from the radio stack.&#10; Allows application to change the backoff on a per packet basis.&#10; Only used if congestion control is enabled.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function event="" provided="0" name="congestion" ref="0x7d222d60" loc="43:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
          <short>&#10; Return backoff time after message m could not be send due to congestion.&#10;</short>
          <long>&#10; Return backoff time after message m could not be send due to congestion.&#10; The units are raio dependent.&#10; @return Backoff time after congestion&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7d222b10" loc="43:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initial" ref="0x7d222798" loc="36:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
          <short>&#10; Return initial backoff time before attempting to send message m.</short>
          <long>&#10; Return initial backoff time before attempting to send message m. The&#10; units are radio dependent.&#10; @return Initial backoff time&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7d222560" loc="36:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.6 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="syncDone" ref="0x7d1df498" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7d1df330" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7d1dfc48" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7d1dfae0" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7d1dd4a0" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7d1dd338" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7d1ddc60" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7d1ddaf8" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7d1dd010" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sync" ref="0x7d1df010" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7d1df7c0" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
          <short>&#10; Change the channel of the radio.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7d1dd7d0" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.4 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7d1bdaf8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.&#10;&#10;</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7d3637d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7d1bd8d8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7d1bb0e0" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.&#10; &#10;</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7d3637d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7d1bde48" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="36:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Strobe.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.&#10;</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7d1b8cd0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Strobe.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7d3637d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.8 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7d1c05d8" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7d3637d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7d1c0010" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7d1c01b8" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7d1c0340" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7d1c0ee8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7d3637d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7d1c0920" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7d1c0ac8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7d1c0c50" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10;</short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7d13a528" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short> Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7e182700"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7e182950"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x7d13c4d0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7e1b19f8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7e1b1c48"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7d13c368" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7e1b19f8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7e1b1c48"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7d13cce0" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short> Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7e190558"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7e1907a8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x7d13d430" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short> Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7e1c2b78"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7e1c2dc8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7d13a1d0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7e190558"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7e1907a8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7d13a068" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7e190558"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7e1907a8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7d13a9e0" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7e182700"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7e182950"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7d13a878" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7e182700"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7e182950"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x7d13da98" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7e1b0ae0"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7e1b0d30"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x7d13d768" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7e1b19f8"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7e1b1c48"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x7d13c010" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7e1c2b78"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7e1c2dc8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7d13ddf0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7e1c2b78"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7e1c2dc8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x7d13c988" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7e1b0ae0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7e1b0d30"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7d13c820" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7e1b0ae0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7e1b0d30"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.&#10;</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7d137420" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7d137420"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7d1348f8" loc="79:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.&#10;</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7d134710" loc="79:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7d134050" loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10;</short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7d137890" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.&#10;</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7d137420"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="captured" ref="0x7d136300" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.&#10;</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7d137420"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7d136120" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7d137420"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7d136638" loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7d1343d8" loc="73:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10;</short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7d137db8" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.&#10;</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7d137420"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7d137bd0" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7d137420"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7d136968" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7d136c98" loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="35:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.1.2.13 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7cffd4b0" loc="43:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0x7cffdd18" loc="55:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.&#10;</short>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="captured" ref="0x7cffd9e8" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.&#10;&#10;</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7cffd7f8" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7cffd188" loc="42:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.&#10;&#10;</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10;</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7cfb5198" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7cfb6d00" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7cfb6e88" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7cfb4b90" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
        <documentation loc="84:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.&#10;&#10;</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7cfb4610" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7cfb4798" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7cfb4920" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7cfb42b0" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7d3637d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7cfb5dd0" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7cfb4010" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7cfb6998" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7d3637d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7cfb6568" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7cfb66f0" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7cfb5a68" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.&#10;&#10;</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7cfb54f8" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7cfb5680" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7cfb5808" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="43:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus. </short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.1.2.1 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7cf95f18" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.&#10;&#10;</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param txBuf A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param rxBuf A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7cf957f8" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7cf959a0" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7cf95b30" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7cf93a90" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.&#10;&#10;</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param txBuf The buffer used for transmission&#10; @param rxBuf The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7cf93290" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7cf93438" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7cf935c8" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7cf93760" loc="72:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7cf972c0" loc="34:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10;</short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7cf97088" loc="34:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7cf3c010" loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7cf37920" loc="109:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7cf390f0" loc="100:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7cf37dd8" loc="111:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7cf37c70" loc="111:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7cf3dbe0" loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7cf39d70" loc="105:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7cf39c08" loc="105:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7cf3a5e0" loc="96:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7cf3a478" loc="96:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7cf3c6c0" loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10;</short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7cf357e8" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7cf35680" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7cf3a908" loc="97:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7cf365e8" loc="114:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7cf36480" loc="114:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7cf36c30" loc="120:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7cf375f8" loc="108:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7cf37490" loc="108:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7cf35338" loc="124:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7cf395a0" loc="102:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7cf39438" loc="102:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7cf3cbc8" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10;</short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7cf3c9f8" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7cf3adb0" loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7cf3ac48" loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7cf37140" loc="106:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7cf36140" loc="112:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7cf36908" loc="115:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7cf35010" loc="122:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7cf398c0" loc="103:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7cf3c350" loc="72:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7cf3a138" loc="92:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete. &#10;</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7cf3cf08" loc="92:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioTimeStamping" loc="33:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
        <short>&#10; Interface for receiving time stamp information from the radio.&#10;</short>
        <long>&#10; Interface for receiving time stamp information from the radio.&#10; This information is also embedded in packet metadata.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   October 10 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="transmittedSFD" ref="0x7ce5b3c8" loc="39:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
          <short> &#10; Provides the time at which start of frame delimiter has been&#10; transmitted: units are in terms of a 32kHz clock.&#10;</short>
        </documentation>
        <interfacedef-ref qname="RadioTimeStamping"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7ce5b030" loc="39:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
          </variable>
          <variable name="p_msg" ref="0x7ce5b1e0" loc="39:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedSFD" ref="0x7ce5ba80" loc="50:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
          <short> &#10; Provides the time at which start of frame delimiter was received:&#10; units are in terms of a 32kHz clock. </short>
          <long> &#10; Provides the time at which start of frame delimiter was received:&#10; units are in terms of a 32kHz clock.  &#60;b>NOTE&#60;/b> that receiving&#10; a receivedSFD() event does NOT mean that a packet will be&#10; received; the transmission may stop, become corrupted, or be&#10; filtered by the physical or link layers.  The number of rxSFD&#10; events will always be great than or equal to the number of&#10; Receive message events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioTimeStamping"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7ce5b710" loc="50:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.5 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7ce42c00" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.&#10;&#10;</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7ce42828" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7ce429d8" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7d32dcf0"/>
                <typename><typedef-ref name="message_t" ref="0x7d32c698"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7ce424f0" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7ce42130" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.&#10;&#10;</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7ce46f08" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.1.2.13 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7cd97b38" loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7cd97b38"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7cd96310" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7cd97b38"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7cd96010" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7cd97b38"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
