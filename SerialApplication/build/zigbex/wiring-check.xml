<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="6:SerialApp.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7ef83190"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7eea08c8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7eea08c8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7eb62300"/></to>
    </wire>
    <wire loc="9:SerialApp.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ef90010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7eb630c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7eb630c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7eb41e58"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="13:SerialApp.nc">
      <from><interface-ref name="LEDController" scoped="" ref="0x7ef516a0"/></from>
      <to><interface-ref name="LEDController" scoped="" ref="0x7e8d4398"/></to>
    </wire>
    <wire loc="7:LEDControllerC.nc">
      <from><interface-ref name="LEDController" scoped="" ref="0x7e8d4398"/></from>
      <to><interface-ref name="LEDController" scoped="" ref="0x7e8d28f0"/></to>
    </wire>
    <wire loc="17:SerialApp.nc">
      <from><interface-ref name="LCDSetter" scoped="" ref="0x7ef42b30"/></from>
      <to><interface-ref name="LCDSetter" scoped="" ref="0x7e7861c8"/></to>
    </wire>
    <wire loc="30:LCDSetterC.nc">
      <from><interface-ref name="LCDSetter" scoped="" ref="0x7e7861c8"/></from>
      <to><interface-ref name="LCDSetter" scoped="" ref="0x7e7842d8"/></to>
    </wire>
    <wire loc="21:SerialApp.nc">
      <from><interface-ref name="TempSensor" scoped="" ref="0x7ef33530"/></from>
      <to><interface-ref name="TempSensor" scoped="" ref="0x7e26b1d8"/></to>
    </wire>
    <wire loc="27:TempSensorC.nc">
      <from><interface-ref name="TempSensor" scoped="" ref="0x7e26b1d8"/></from>
      <to><interface-ref name="TempSensor" scoped="" ref="0x7e267600"/></to>
    </wire>
    <wire loc="25:SerialApp.nc">
      <from><interface-ref name="ComSat" scoped="" ref="0x7ef232f0"/></from>
      <to><interface-ref name="ComSat" scoped="" ref="0x7e2415b0"/></to>
    </wire>
    <wire loc="6:ComSatC.nc">
      <from><interface-ref name="ComSat" scoped="" ref="0x7e2415b0"/></from>
      <to><interface-ref name="ComSat" scoped="" ref="0x7e22fbd0"/></to>
    </wire>
    <wire loc="46:SerialAppM.nc">
      <from><interface-ref name="sendPacket" scoped="" ref="0x7ef217e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:SerialAppM.nc">
      <from><interface-ref name="setData" scoped="" ref="0x7ef21f08"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ee92080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dc5c040"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ee92080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d851200"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ee92080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e0ffa40"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ee92080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e0a2578"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ee92080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dd33cf0"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ee92080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dcb9750"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ee92080"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x7e30cdc8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ee92080"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x7e308608"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ee92080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d921d90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ee92080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d960a30"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ee92080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7eb25060"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7eb62648"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f230970"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f230970"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f070960"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7eb62b78"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ee81d60"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ee81d60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ee53d10"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7eb62ee8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7ee92080"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7ee72010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7df5cf28"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7ee72010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e46bd30"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7ee72010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7eae2d00"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7ee628f0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7eb91160"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7ee52400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7eb93d58"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7ee52090"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e8436b8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7ee52090"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7ee60a38"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7ee60a38"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7ee30010"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7ee60da0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7ee72010"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7ee13800"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7ee00188"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7ee00188"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7ed10ac8"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7ee221a0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7ee60da0"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7eda0e78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ec132d8"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7edd0e98"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7ecc2330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7ecc2330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7db33228"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7edb3068"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7eca3d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7eca3d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7daf2ac8"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7eda4e78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7ec84410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7ec84410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dab50f8"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7edf3508"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7ed04e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7ed04e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dbe2538"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7edb0af8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7ec90090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7ec90090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dab9c78"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7edf1808"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7ed00bc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7ed00bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dbb5d08"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7edd4980"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7ece05d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7ece05d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7db6a718"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7edc3bd8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7ecc0030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7ecc0030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7db280b0"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7edb2d98"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7eca1ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7eca1ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dae99e8"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7ee02428"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7ed12e70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7ed12e70"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dc11010"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7ede3508"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7ecf2890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7ecf2890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dba8ac8"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7edd26c8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7ecd3250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7ecd3250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7db65570"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7edc1980"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7ecb4c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7ecb4c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7db23010"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7eda1b00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7ec82170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7ec82170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dab0010"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7ed93d98"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ec01bc0"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7edc0cb8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7eca4a18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7eca4a18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7daf5718"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7ed10ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dbe5010"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7ede1268"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7ecf05d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7ecf05d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dba39e8"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7ed94aa0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ec10590"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7ede05e8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7ece12a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7ece12a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7db722b0"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7edc4858"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7ecc2c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7ecc2c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7db32c08"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7edb39d8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7eca2790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7eca2790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7daf0570"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7eda2808"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7ec84d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7ec84d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dab4ac8"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7edf3e78"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7ed037d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7ed037d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dbe0010"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7edf0190"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7ecf45d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7ecf45d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dbb1718"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7edd3348"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7ece0f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7ece0f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7db680f8"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7edc25e8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7ecc0988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7ecc0988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7db27a88"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7edb17a8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7eca04f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7eca04f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dae7538"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7ee02d98"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7ed117f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7ed117f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dc109e8"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7ede3e78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7ecf1250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7ecf1250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dba6570"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7edd1068"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7ecd3ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7ecd3ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7db63010"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7eda0508"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7ec82ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7ec82ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7daab9e8"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7edd0428"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7ecc39c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7ecc39c0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7db357f8"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7edb46c8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7eca3410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7eca3410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7daf30f8"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7eda4508"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7ec909e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7ec909e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dab7718"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7ed927a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ebf5f20"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7ee00af8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7ed044f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7ed044f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dbe49e8"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7ede1bd8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7ecf0f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7ecf0f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dba1538"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7edb0188"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7ec916f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7ec916f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7daba2b0"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7edd4010"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7ece1bf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7ece1bf8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7db71c78"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7edc3268"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7ecc16b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7ecc16b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7db2a6c0"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7edb2428"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7eca1170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7eca1170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7daea010"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7eda1190"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7ec83790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7ec83790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dab2570"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7ee03a80"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7ed12518"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7ed12518"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dc135c0"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7edf0b00"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7ecf4f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7ecf4f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dba90f8"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7edd3cb8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7ecd4890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7ecd4890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7db67ac8"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7edc1010"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7ecb4330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7ecb4330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7db25538"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7ed93428"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ec04880"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7edc0348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7eca40c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7eca40c0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7daf9d08"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7edd19d8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7ecd15d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7ecd15d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7db629e8"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7ee017a8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7ed10170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7ed10170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dbe7538"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7ede2878"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7ecf1ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7ecf1ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dba4010"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f062120"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f051540"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f202c20"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7eb41e58"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7eb256f8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7eb256f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e902370"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7eb25060"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7eb13c20"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7eb14ea0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7e8f1a88"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7eb13c20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ea55c78"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7e8f7380"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e977440"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7e9514c8"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7eaf59d0"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7eaf59d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7e9e1608"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7e8f03d0"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7eae5870"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7eae5870"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7e992e48"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ea54078"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ead1be0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7ea13e10"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ead1be0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7ea10c10"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7eab3848"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ea002f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ead1be0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7e986010"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ea41680"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7e991ed8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7ea01320"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x7e950bf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7e8f4240"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="10:LEDControllerC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7e8b7548"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7e871248"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7e871248"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7e870eb0"/></to>
    </wire>
    <wire loc="13:LEDControllerC.nc">
      <from><interface-ref name="LEDTimer0" scoped="" ref="0x7e8c5220"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e8346d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7e8346d8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7eb41e58"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:LEDControllerC.nc">
      <from><interface-ref name="LEDTimer1" scoped="" ref="0x7e8b5160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e846330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7e846330"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7eb41e58"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:LEDControllerC.nc">
      <from><interface-ref name="LEDTimer2" scoped="" ref="0x7e8b20b8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e838cb0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7e838cb0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7eb41e58"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:LEDControllerC.nc">
      <from><interface-ref name="LEDIntervalTimer0" scoped="" ref="0x7e8a8078"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e8239e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7e8239e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7eb41e58"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:LEDControllerC.nc">
      <from><interface-ref name="LEDIntervalTimer1" scoped="" ref="0x7e8a6078"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e8305a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7e8305a8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7eb41e58"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="20:LEDControllerC.nc">
      <from><interface-ref name="LEDIntervalTimer2" scoped="" ref="0x7e8a3078"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e826010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7e826010"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7eb41e58"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e8436b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e870b90"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7e865b38"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7e845908"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7e845908"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7ee02d98"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7e864508"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7e844368"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7e844368"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7ee02428"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7e864e78"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7e844cf8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7e844cf8"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7ee03a80"/></to>
    </wire>
    <wire loc="28:LCDSetterC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7e784890"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e7402e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7e7402e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7eb41e58"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:LCDSetterC.nc">
      <from><interface-ref name="Interaction" scoped="" ref="0x7e773308"/></from>
      <to><interface-ref name="Interaction" scoped="" ref="0x7e7310b0"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
      <from><interface-ref name="Interaction" scoped="" ref="0x7e7310b0"/></from>
      <to><interface-ref name="Interaction" scoped="" ref="0x7e726830"/></to>
    </wire>
    <wire loc="37:LCDSetterC.nc">
      <from><interface-ref name="SCSuartDBGstd" scoped="" ref="0x7e770338"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7e28bf20"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7e28bf20"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7e288730"/></to>
    </wire>
    <wire loc="38:LCDSetterC.nc">
      <from><interface-ref name="SCSuartDBG" scoped="" ref="0x7e7689a8"/></from>
      <to><interface-ref name="SCSuartDBG" scoped="" ref="0x7e28f7e0"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGC.nc">
      <from><interface-ref name="SCSuartDBG" scoped="" ref="0x7e28f7e0"/></from>
      <to><interface-ref name="SCSuartDBG" scoped="" ref="0x7e2880e0"/></to>
    </wire>
    <wire loc="52:LCDSetterM.nc">
      <from><interface-ref name="TryToSetTimer" scoped="" ref="0x7e764640"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:LCDSetterM.nc">
      <from><interface-ref name="TryToConfigure" scoped="" ref="0x7e7667d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7e725278"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7e871248"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
      <from><interface-ref name="ConfigTimeout" scoped="" ref="0x7e725f20"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e67a5a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7e67a5a8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7eb41e58"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
      <from><interface-ref name="SensorCheckTimer" scoped="" ref="0x7e722e60"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e677010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7e677010"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7eb41e58"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
      <from><interface-ref name="C328_Reset_Timer" scoped="" ref="0x7e720e60"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e6749f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7e6749f0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7eb41e58"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
      <from><interface-ref name="Read_Humi" scoped="" ref="0x7e712938"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7e4b70c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Humidity" scoped="" ref="0x7e4b70c0"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7d9d4bc0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
      <from><interface-ref name="Read_Temp" scoped="" ref="0x7e7145a0"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7e4b84f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Temperature" scoped="" ref="0x7e4b84f0"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7d9d4010"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
      <from><interface-ref name="Read_Photo" scoped="" ref="0x7e713168"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7e4acac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7e4acac8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d932120"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
      <from><interface-ref name="Read_Ultrared" scoped="" ref="0x7e713d20"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7e3b8990"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7e3b8990"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d8f57a8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
      <from><interface-ref name="CommunicationWithOPT" scoped="" ref="0x7e700998"/></from>
      <to><interface-ref name="CommunicationWithOPT" scoped="" ref="0x7e37cb58"/></to>
    </wire>
    <wire loc="29:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTC.nc">
      <from><interface-ref name="CommunicationWithOPT" scoped="" ref="0x7e37cb58"/></from>
      <to><interface-ref name="CommunicationWithOPT" scoped="" ref="0x7e36c5e8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
      <from><interface-ref name="SCSuartDBG" scoped="" ref="0x7e7075c0"/></from>
      <to><interface-ref name="SCSuartDBG" scoped="" ref="0x7e2a5438"/></to>
    </wire>
    <wire loc="339:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <from><interface-ref name="SendBasicSensor" scoped="" ref="0x7e696f28"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <from><interface-ref name="Event_Urgency_Data" scoped="" ref="0x7e6d8080"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="293:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <from><interface-ref name="ProcessCMD" scoped="" ref="0x7e6a77c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <from><interface-ref name="Set_C328_Restart_Timer_START" scoped="" ref="0x7e6f3668"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <from><interface-ref name="TaskStartDoneConfiguration" scoped="" ref="0x7e6f7768"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="211:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <from><interface-ref name="TryToGetSensorData" scoped="" ref="0x7e6c1a78"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <from><interface-ref name="TaskGetSensorDataDone" scoped="" ref="0x7e6f6788"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TempResource" scoped="" ref="0x7d9d3710"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e626178"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Sht11Temp" scoped="" ref="0x7d9d2510"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7e626ad0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="HumResource" scoped="" ref="0x7d9d3de8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e626178"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Sht11Hum" scoped="" ref="0x7d9d1080"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7e626ad0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="SensirionSht11" scoped="" ref="0x7e626ad0"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7e5ca4d8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7e626178"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e5ba2d0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7e5ba2d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e53c4e0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7e5c9050"/></from>
      <to><interface-ref name="DATA" scoped="" ref="0x7e5ba9c0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7e5ba9c0"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7edd0e98"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="CLOCK" scoped="" ref="0x7e5c99c8"/></from>
      <to><interface-ref name="SCK" scoped="" ref="0x7e5b9368"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7e5b9368"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x7edd0428"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x7e5c8358"/></from>
      <to><interface-ref name="InterruptDATA" scoped="" ref="0x7e5b9d00"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x7e5b9d00"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7e54aa28"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7e5c89c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e4c05d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7e4c05d8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7eb41e58"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7e5c58a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7e871248"/></to>
    </wire>
    <wire>
      <from><interface-ref name="readSensor" scoped="" ref="0x7e5c4948"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="signalStatusDone" scoped="" ref="0x7e5c4510"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7e53c4e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7d95c010"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7e5ab8e0"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7edd0e98"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7e5a7288"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x7edd0428"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7e5a9908"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e5b4d40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7e5b4d40"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7eb41e58"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7e549050"/></from>
      <to><interface-ref name="Int1" scoped="" ref="0x7e595010"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7e595010"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e563228"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7e4e2980"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e5a9290"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7e4e19c0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7e4e66d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7e4e66d8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7d95b230"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ResourceController" scoped="" ref="0x7e4e1328"/></from>
      <to><interface-ref name="ResourceController" scoped="" ref="0x7e4e6040"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceController" scoped="" ref="0x7e4e6040"/></from>
      <to><interface-ref name="ResourceController" scoped="" ref="0x7d95cb58"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11P.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7e5a6010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x7e5917c8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e555538"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x7e5947c8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e5592d0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x7e590010"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e5535e0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7e5957c8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e561228"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x7e591010"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e5573b0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7e5927f0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e573228"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7e594010"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e55c228"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e5739e0"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x7e584808"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e5639e0"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x7e584b80"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e5619e0"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x7e584ef8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e55c9e0"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x7e586280"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e559a88"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x7e5865f8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e557b68"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x7e586970"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e555cf0"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x7e586ce8"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e553d98"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x7e585088"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7e53cc20"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7d95c750"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7d95b6f0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7e4e6b88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x7d95bb18"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7d960d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x7d959d68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x7d941ef8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e4e2980"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7d93f4c0"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7e4e1010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceController" scoped="" ref="0x7d93f7d8"/></from>
      <to><interface-ref name="ResourceController" scoped="" ref="0x7e4e1328"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7d93fe70"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7e4e19c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="stopTask" scoped="" ref="0x7d93e2d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="startTask" scoped="" ref="0x7d93e708"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7d932120"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d930890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="subRead" scoped="" ref="0x7d92e460"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d92d8c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7d92d8c0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d92be30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7d92be30"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7e48b800"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d929950"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e3b7a98"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoDeviceP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e3b7a98"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e3b2240"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7d929e28"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7e3b7690"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoDeviceP.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7e3b7690"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7e3b6d80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e4871a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d929950"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7e487920"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e4806e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7e479100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7d929e28"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7e48b800"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7e3cd670"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x7e484390"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x7e3e4530"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7e3ccec0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e487920"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e3e3838"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e4871a8"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7e3cc318"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7e3e5700"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7e3e30c0"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7e476568"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7e476568"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7e466b18"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7e4719c0"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7e468040"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7e4806e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e3fd0c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7e3fd0c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7d91d2e8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7e3fc7c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7e479100"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x7e45a468"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x7e43d468"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x7e43d468"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x7e438c70"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7e465800"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7ee628f0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7e3f9da8"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7e466710"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceController" scoped="" ref="0x7e3f8548"/></from>
      <to><interface-ref name="ResourceController" scoped="" ref="0x7e3fdc10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceController" scoped="" ref="0x7e3fdc10"/></from>
      <to><interface-ref name="ResourceController" scoped="" ref="0x7d91de30"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7e436040"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7eff0078"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7e3fd808"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7d91da28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7e3fc310"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7d91c510"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7d91c9d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7e3fc7c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x7d91cdf8"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7d91f170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x7d91a030"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7d900010"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7e3f9da8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7d900408"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7e3f8230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceController" scoped="" ref="0x7d900720"/></from>
      <to><interface-ref name="ResourceController" scoped="" ref="0x7e3f8548"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7d900db8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7e3f8be0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x7e3dad10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoDeviceP.nc">
      <from><interface-ref name="PhotoPin" scoped="" ref="0x7e3b2798"/></from>
      <to><interface-ref name="PortB6" scoped="" ref="0x7ede1268"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoDeviceP.nc">
      <from><interface-ref name="PhotoAdc" scoped="" ref="0x7e3ad0f0"/></from>
      <to><interface-ref name="Adc0" scoped="" ref="0x7e3a3e78"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="Adc0" scoped="" ref="0x7e3a3e78"/></from>
      <to><interface-ref name="Adc0" scoped="" ref="0x7e39e908"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="PW3" scoped="" ref="0x7e3a6428"/></from>
      <to><interface-ref name="PortC3" scoped="" ref="0x7edd3348"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="PW6" scoped="" ref="0x7e3a4188"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0x7edd1068"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="Adc3" scoped="" ref="0x7e3a2888"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x7e39b360"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="Adc5" scoped="" ref="0x7e3a1010"/></from>
      <to><interface-ref name="Adc5" scoped="" ref="0x7e39ba00"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="PW1" scoped="" ref="0x7e3a7088"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x7edd4010"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="PW4" scoped="" ref="0x7e3a6d98"/></from>
      <to><interface-ref name="PortC4" scoped="" ref="0x7edd3cb8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7e3a3508"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x7edb39d8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="Adc1" scoped="" ref="0x7e3a21e8"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x7e39ec58"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="PW7" scoped="" ref="0x7e3a4af8"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0x7edd19d8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="Adc6" scoped="" ref="0x7e3a1360"/></from>
      <to><interface-ref name="Adc6" scoped="" ref="0x7e39bd50"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="PW2" scoped="" ref="0x7e3a79f8"/></from>
      <to><interface-ref name="PortC2" scoped="" ref="0x7edd4980"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="PW5" scoped="" ref="0x7e3a57a8"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0x7edd26c8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="Adc2" scoped="" ref="0x7e3a2538"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x7e39b010"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="Adc4" scoped="" ref="0x7e3a2c58"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x7e39b6b0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="Adc7" scoped="" ref="0x7e3a16b0"/></from>
      <to><interface-ref name="Adc7" scoped="" ref="0x7e39a0b0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <from><interface-ref name="PW0" scoped="" ref="0x7e3a86e8"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x7ede05e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7d8f57a8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d8f3010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="subRead" scoped="" ref="0x7d8f3bc0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d8f0010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7d8f0010"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d8ec588"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7d8ec588"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7e48b800"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d8eb0c0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e37b468"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredDeviceP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e37b468"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e377b60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7d8eb598"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7e37b060"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredDeviceP.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7e37b060"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7e377758"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e4871a8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d8eb0c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7e487920"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e4806e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7e479100"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7d8eb598"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredDeviceP.nc">
      <from><interface-ref name="UltraredPin" scoped="" ref="0x7e3760e0"/></from>
      <to><interface-ref name="PW1" scoped="" ref="0x7e3a7088"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredDeviceP.nc">
      <from><interface-ref name="UltraredAdc" scoped="" ref="0x7e376a58"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x7e3a21e8"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTC.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x7e36b2a8"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x7e30f6d8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x7e30f6d8"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x7e308980"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTC.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x7e36b6e8"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x7e30fb10"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x7e30fb10"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x7e308dd8"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTC.nc">
      <from><interface-ref name="HPLUART" scoped="" ref="0x7e3649c8"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x7e30e010"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x7e30e010"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x7e307290"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTC.nc">
      <from><interface-ref name="SCSuartDBG" scoped="" ref="0x7e3684e8"/></from>
      <to><interface-ref name="SCSuartDBG" scoped="" ref="0x7e2a5438"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x7e310b90"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7e309a60"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x7e310758"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7e309608"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x7e310320"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7e3091b0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7e307db8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7ee628f0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7e306500"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7eff0078"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGC.nc">
      <from><interface-ref name="SCSuartDBGRecv" scoped="" ref="0x7e28bbd8"/></from>
      <to><interface-ref name="SCSuartDBGRecv" scoped="" ref="0x7e288408"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGC.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x7e288ba0"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7e310320"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGC.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x7e287010"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7e310758"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGC.nc">
      <from><interface-ref name="HPLUART" scoped="" ref="0x7e287440"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7e310b90"/></to>
    </wire>
    <wire loc="30:TempSensorC.nc">
      <from><interface-ref name="Read_Humidity" scoped="" ref="0x7e267b10"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7e246768"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Humidity" scoped="" ref="0x7e246768"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7d8e09d0"/></to>
    </wire>
    <wire loc="31:TempSensorC.nc">
      <from><interface-ref name="Read_Temp" scoped="" ref="0x7e266770"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7e247b50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Temperature" scoped="" ref="0x7e247b50"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7d8e1e10"/></to>
    </wire>
    <wire loc="34:TempSensorC.nc">
      <from><interface-ref name="Read_UR" scoped="" ref="0x7e2653b8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7e244030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7e244030"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d8be010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7e2690a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7eb41e58"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TempResource" scoped="" ref="0x7d8df508"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e626178"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Sht11Temp" scoped="" ref="0x7d8de350"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7e626ad0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="HumResource" scoped="" ref="0x7d8dfbe0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e626178"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Sht11Hum" scoped="" ref="0x7d8dee88"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7e626ad0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7d8be010"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d8bd780"/></to>
    </wire>
    <wire>
      <from><interface-ref name="subRead" scoped="" ref="0x7d8bb3b8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d8ba778"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7d8ba778"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d8b8d50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7d8b8d50"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7e48b800"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d8b68a8"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e37b468"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7d8b6d80"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7e37b060"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e4871a8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d8b68a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7e487920"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e4806e8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7e479100"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7d8b6d80"/></to>
    </wire>
    <wire loc="9:ComSatC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7e22b220"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e19e010"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7e19e010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e17aae0"/></to>
    </wire>
    <wire loc="10:ComSatC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7e1e7850"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7e19e860"/>
      <arguments>
        <value cst="I:147">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="11:ComSatC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7e1e2d68"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e19d1a8"/>
      <arguments>
        <value cst="I:147">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="16:ComSatC.nc">
      <from><interface-ref name="ElapsedTimer" scoped="" ref="0x7e22e340"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7dc34740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7dc34740"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7eb41e58"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="20:ComSatC.nc">
      <from><interface-ref name="LEDController" scoped="" ref="0x7e1e5320"/></from>
      <to><interface-ref name="LEDController" scoped="" ref="0x7e8d4398"/></to>
    </wire>
    <wire loc="24:ComSatC.nc">
      <from><interface-ref name="LCDSetter" scoped="" ref="0x7e1e5c68"/></from>
      <to><interface-ref name="LCDSetter" scoped="" ref="0x7e7861c8"/></to>
    </wire>
    <wire loc="39:ComSatM.nc">
      <from><interface-ref name="sendDataTask" scoped="" ref="0x7e1c13a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:ComSatM.nc">
      <from><interface-ref name="start" scoped="" ref="0x7e1e0c48"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7e17aae0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e102178"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7e19e860"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7e1793e8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7e1793e8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7e161cb8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7e19d940"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7e1774f0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7e1774f0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7e15ee20"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7e195188"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e1763f8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7e1763f8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e15dc60"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7e19d1a8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e179d18"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7e179d18"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e15e688"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e17c188"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e1745e0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e1745e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7dc41450"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e180558"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e1779d8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e1779d8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e15d320"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7e102178"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e0ffd88"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7e174010"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7dc48d78"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7e155b68"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7e102758"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7e102758"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7e0fc418"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7e15a268"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e102e18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7e102e18"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7dcb83e8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><function-ref name="amAddress" scoped="" ref="0x7e15a8e8"/></from>
      <to><function-ref name="amAddress" scoped="" ref="0x7dc47360"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e101340"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e15d320"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7dcb83e8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7dcb3338"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e0dcc68"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e101340"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e09e180"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e101340"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7e0fcae0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e0a28c0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7e0a28c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e096060"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7e0f6cb0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7e09f7a0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7e09f7a0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7e0950a8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7e0f96f0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7dd27060"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7e0f96f0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7dcb9a98"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7dcb9a98"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7dcb49b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7dd27060"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7dd1f908"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7e0f4010"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7dd27488"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7dd27488"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7dd1fd58"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CsmaBackoff" scoped="" ref="0x7e0de0a8"/></from>
      <to><interface-ref name="CsmaBackoff" scoped="" ref="0x7dd27d10"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="CsmaBackoff" scoped="" ref="0x7dd27d10"/></from>
      <to><interface-ref name="CsmaBackoff" scoped="" ref="0x7dd1e6c0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7e0dc840"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7dc5fe18"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7dc5fe18"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7dc5cd08"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7e0e05e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7e871248"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7dcb9750"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dcb4668"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7dd33cf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e036b10"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7dd33cf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dd1f5c0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e0a2578"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e097ce8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7e0da840"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7e0da010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7e0db800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7e09bdd8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7e096728"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e079c38"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e09e180"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7e095b70"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7e035010"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7e035010"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7e031358"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7e0922e8"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7ded9818"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7ded9818"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7edf1808"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7e092c78"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7ded75e8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7ded75e8"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x7edf3508"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7e0916e8"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7ded6980"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7ded6980"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x7ee00af8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7e090090"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7dec3500"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7dec3500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7dea3240"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7e0906a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7dd526e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7dd526e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7de732d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7e077e80"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7dd51840"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7dd51840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de70438"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7e079208"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7dd51b98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7dd51b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de70438"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7e0798f0"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7dd505b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7dd505b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de70438"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7e079580"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7dd50910"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7dd50910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de70438"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7e07a290"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7dd50c68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7dd50c68"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de72ce0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7e07a6e0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7dd460b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7dd460b8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de72ce0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7e07abb0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7dd464f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7dd464f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de72ce0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7e080030"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7dd469a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7dd469a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de72ce0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7e080488"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7dd46de0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7dd46de0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de72ce0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7e07d0b0"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7dd45ae0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7dd45ae0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7de72600"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7e078610"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7dd41d28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7dd41d28"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7de732d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7e078cd0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7e871248"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <from><interface-ref name="syncDone_task" scoped="" ref="0x7e073260"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e036b10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dedeb08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x7dedeb08"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dedd280"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x7e031358"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7d8a6920"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x7d8a6920"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7d89fb58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7d89c430"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7d8a2448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x7d8a2448"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7d897810"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x7d89d3d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7df3fdb0"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7df3fdb0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7df315c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7d894058"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e003368"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7e003368"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7dfe05d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7d893ef8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7dff39b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7dffab98"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7dfde370"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7dff4b48"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7dfdc010"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7dff39b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7dfdbb30"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7dff39b8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7dfd8338"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7dff39b8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7dfd7ac8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x7dfd4220"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7eac1388"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7df5b320"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e003368"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7df30620"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7df39150"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7df39150"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7df37e88"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7df36e68"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e003368"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7ded8268"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x7ede1bd8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7ded8bd8"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7edb2d98"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7e038e90"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x7edc1010"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7ded6010"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x7edc3bd8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7dec1ed0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7debe690"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7dec3b18"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7deb36b8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x7debed18"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7dff4b48"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7deb3cb0"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x7e5917c8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CCATimer" scoped="" ref="0x7dea2300"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7dea4a78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7dea4a78"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7eb41e58"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x7dea3870"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7e038e90"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7de9bd70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x7de9fd70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7dd50260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de70438"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7dd45270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de72ce0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dd44368"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7de72600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7dd51190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de70438"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7dd45f18"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7de72600"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7dd514e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de70438"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7dd447a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7de73c50"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7dd456a8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7de72600"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7dd52dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de70438"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7dd51ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de70438"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7dd44e78"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7de73c50"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7de73c50"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7de61158"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7de72600"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7de61ae0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7de72ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de601e8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7de732d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7de627b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7de70438"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de608c8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7de60c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7de20090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7de20090"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7de1ab78"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7de5a438"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7de20748"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiByte" scoped="" ref="0x7de20748"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7de1a178"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7de57c08"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7de20a80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7de20a80"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7de1a4c0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7de5b040"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7e871248"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7de1a4c0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7de159d8"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7de1a178"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7de156b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x7de21d28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7de1edd0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7de1edd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7de15390"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7de1ab78"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7de13100"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x7de10500"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7dd86010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7dd86010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7d850578"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7de10ba8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7dd86b58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7dd86b58"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7d84f150"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7ddfa998"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7ddd10f0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7ddd10f0"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7ddc3db8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7ddf9010"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7eff0078"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7ddbe190"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7eff0078"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7ddc1b20"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7edf1808"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7ddc0508"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7edf0190"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7ddc0e78"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7edf0b00"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7ddbf808"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7ede3508"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7dd86750"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7d850cb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7d84f610"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7dd5a030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x7d84fa38"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7d851538"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x7d84e050"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7dd3c0b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de72ce0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7dd3e880"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de70438"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7dd3c920"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de72ce0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dd3bae0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7de72600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7dd3d7a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de72ce0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7dd40788"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de70438"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7dd3d010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de70438"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7dd3c4e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de72ce0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7dd3ebd8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de70438"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7dd3b6a8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7de72600"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7dd40ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de70438"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7dd3bf18"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7de73c50"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7dd3dbd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de72ce0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7dd3d368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de72ce0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7dd40e38"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de70438"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7dd3b270"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7de72600"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7dd3cd58"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7de72600"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7dd40430"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de70438"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7dd3e528"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de70438"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7dd3e1d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de70438"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7dd3a608"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7de73c50"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="RadioTimeStamping" scoped="" ref="0x7dd22bf8"/></from>
      <to><interface-ref name="TimeStamp" scoped="" ref="0x7dd1eb20"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7dd1d0b8"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7e035010"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7dd1ce20"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7e038e90"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7dd1a7c8"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7ded9818"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7dd191a8"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7ded6010"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7dd1c810"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7dec1ed0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7dd19b40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7dcc6cd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7dcc6cd8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7de732d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7dd172c8"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7dcc5ae0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7dcc5ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de70438"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7dd17638"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7dcc4528"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7dcc4528"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de70438"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7dd179b0"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7dcc4880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7dcc4880"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de70438"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7dd17d28"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7dcc5788"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7dcc5788"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de70438"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7dd18e50"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7dcc1920"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7dcc1920"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de72ce0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7dd18288"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7dcbf608"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7dcbf608"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7de73c50"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dd18980"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dcc0ae0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dcc0ae0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7de72600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7dd12d78"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7dcb9ec0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7dcb9ec0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7dcb4dd8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7dd14338"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7e871248"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7dcc10b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de72ce0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7dcc37a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de72ce0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7dcc3010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de70438"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7dcc14e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de72ce0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7dcc4bd8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de70438"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7dcc06a8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7de72600"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7dcc0f18"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7de73c50"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7dcc3bd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de72ce0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7dcc3368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de72ce0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7dcc5e38"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de70438"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7dcc0270"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7de72600"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7dcc1d58"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7de72600"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7dcc5430"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de70438"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7dcc41d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de70438"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7dca7178"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7e871248"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7dcb3868"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7ded9818"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7dcb2288"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7ded8268"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7dcb2c18"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7ded8bd8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7dcb1610"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7dec3b18"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7dcb1c28"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7dcb59f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7dcb59f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7de732d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7dca8368"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7dc77b20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7dc77b20"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7de73c50"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7dca8dd0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7dc7c190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7dc7c190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de70438"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7dca4680"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7dc79d38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de72ce0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7dc7b5b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de70438"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7dc785c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de72ce0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dc776e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7de72600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7dc79448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de72ce0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7dc7c4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de70438"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7dc7bc68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de70438"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7dc78190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de72ce0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7dc7b910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de70438"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7dc772b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7de72600"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7dc7c840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de70438"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7dc79880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de72ce0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7dc79010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7de72ce0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7dc7cb98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de70438"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7dc78e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7de72600"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7dc78a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7de72600"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7dc7b260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de70438"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7dc7cef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7de70438"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7dc76270"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7de73c50"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7dc5cd08"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7dc57cd8"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7dc5f568"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7dc5c458"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7dc5c458"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7dc57428"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7dc64808"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dc5c040"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7dc5c040"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dc57010"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="SerialAppM" loc="2:SerialAppM.nc">
      <module/>
    </component>
    <component qname="MainC" loc="45:/opt/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/system/MainC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.1.2.11 2006/09/22 19:23:59 idgay Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.1.2.11 2006/09/22 19:23:59 idgay Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.1.2.11 2006/09/22 19:23:59 idgay Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformC.nc">
      <documentation loc="15:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10;</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformP.nc">
      <documentation loc="18:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10;</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10;</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10;</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.1.2.6 2006/09/22 19:12:14 idgay Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialApp.TimerMilliC" loc="36(SerialApp.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(SerialApp.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="22:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer. </short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmCounterMilliP.MilliInit" loc="35(AlarmCounterMilliP.MilliInit):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="35(AlarmCounterMilliP.MilliInit):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmCounterMilliP.MilliAlarm" loc="42(AlarmCounterMilliP.MilliAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="42(AlarmCounterMilliP.MilliAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10;</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmCounterMilliP.MilliCounter" loc="33(AlarmCounterMilliP.MilliCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="33(AlarmCounterMilliP.MilliCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmCounterMilliP.Transform32" loc="53(AlarmCounterMilliP.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
      <documentation loc="53(AlarmCounterMilliP.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
        <short>&#10; TransformAlarmCounterC decreases precision and/or widens an Alarm/Counter&#10; pair.</short>
        <long>&#10; TransformAlarmCounterC decreases precision and/or widens an Alarm/Counter&#10; pair. This component has a reduced interrupt overhead compared to using&#10; TransformAlarmC and TransformCounterC separately. However, it is not as &#10; useful for hardware timers with multiple compare registers.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   interfaces.&#10; @param to_size_type The type for the width of the transformed interfaces.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   interfaces.&#10; @param from_size_type The type for the width of the original interfaces.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmCounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10;</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10;</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
          <value cst="I:16">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LEDControllerC" loc="1:LEDControllerC.nc">
      <configuration/>
    </component>
    <component qname="LEDControllerM" loc="1:LEDControllerM.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10;</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10;</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.1.2.11 2006/09/22 19:23:59 idgay Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LEDControllerC.LEDTimer1" loc="36(LEDControllerC.LEDTimer1):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(LEDControllerC.LEDTimer1):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LEDControllerC.LEDTimer2" loc="36(LEDControllerC.LEDTimer2):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(LEDControllerC.LEDTimer2):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LEDControllerC.LEDTimer0" loc="36(LEDControllerC.LEDTimer0):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(LEDControllerC.LEDTimer0):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LEDControllerC.IntervalTimer1" loc="36(LEDControllerC.IntervalTimer1):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(LEDControllerC.IntervalTimer1):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LEDControllerC.IntervalTimer2" loc="36(LEDControllerC.IntervalTimer2):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(LEDControllerC.IntervalTimer2):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LEDControllerC.IntervalTimer0" loc="36(LEDControllerC.IntervalTimer0):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(LEDControllerC.IntervalTimer0):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LCDSetterC" loc="22:LCDSetterC.nc">
      <documentation loc="22:LCDSetterC.nc">
        <short>//////////////////////////////////////</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="LCDSetterM" loc="20:LCDSetterM.nc">
      <documentation loc="20:LCDSetterM.nc">
        <short>***************************************************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="LCDSetterC.TimerMilliC" loc="36(LCDSetterC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(LCDSetterC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InteractionC" loc="22:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
      <documentation loc="22:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
        <short>////////////////////////////////////////////</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="InteractionM" loc="20:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <documentation loc="20:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
        <short>***************************************************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="InteractionC.ConfigTimeout" loc="36(InteractionC.ConfigTimeout):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(InteractionC.ConfigTimeout):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InteractionC.SensorCheckTimerC" loc="36(InteractionC.SensorCheckTimerC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(InteractionC.SensorCheckTimerC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InteractionC.C328_Reset_TimerC" loc="36(InteractionC.C328_Reset_TimerC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(InteractionC.C328_Reset_TimerC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InteractionC.SensirionSht11C" loc="45(InteractionC.SensirionSht11C):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11C.nc">
      <documentation loc="45(InteractionC.SensirionSht11C):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InteractionC.SensirionSht11C.SensirionSht11ReaderP" loc="43(InteractionC.SensirionSht11C.SensirionSht11ReaderP):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <documentation loc="43(InteractionC.SensirionSht11C.SensirionSht11ReaderP):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
        <short>&#10; SensirionSht11ReaderP transforms the HAL-level SensirionSht11&#10; interface into a pair of SID Read interfaces, one for the&#10; temperature sensor and one for the humidity sensor.</short>
        <long>&#10; SensirionSht11ReaderP transforms the HAL-level SensirionSht11&#10; interface into a pair of SID Read interfaces, one for the&#10; temperature sensor and one for the humidity sensor. It acquires the&#10; underlying resource before executing each read, enabling&#10; arbitrated access.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C" loc="43:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HalSensirionSht11C.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HalSensirionSht11C.nc">
        <short>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform.</short>
        <long>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform. This component provides the SensirionSht11&#10; interface, which offers full control over the device. Please&#10; acquire the Resource before using it.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/08/15 11:59:09 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalSensirionSht11C.SensirionSht11LogicP" loc="53(HalSensirionSht11C.SensirionSht11LogicP):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11LogicP.nc">
      <documentation loc="53(HalSensirionSht11C.SensirionSht11LogicP):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C" loc="43:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
        <short>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them.</short>
        <long>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them. You&#10; really shouldn't be wiring to this, unless you're writing a new&#10; Sensirion SHT11 driver.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/08/15 11:59:09 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11P" loc="42:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11P.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11P.nc">
        <short>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.&#10;&#10;</short>
        <long>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/06/20 18:56:07 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.TimerMilliC" loc="36(HplSensirionSht11C.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(HplSensirionSht11C.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptC" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.&#10;</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="30(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="30(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="30(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="30(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="30(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="30(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="30(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="30(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.InterruptDATAC" loc="6(HplSensirionSht11C.InterruptDATAC):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="6(HplSensirionSht11C.InterruptDATAC):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter" loc="79(HplSensirionSht11C.Arbiter):/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <documentation loc="79(HplSensirionSht11C.Arbiter):/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Sht11.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Queue" loc="32(HplSensirionSht11C.Arbiter.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Arbiter" loc="51(HplSensirionSht11C.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="51(HplSensirionSht11C.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceController interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceController interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceController&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC" loc="57(HplSensirionSht11C.SplitControlPowerManagerC):/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="57(HplSensirionSht11C.SplitControlPowerManagerC):/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices. </short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager" loc="48(HplSensirionSht11C.SplitControlPowerManagerC.PowerManager):/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <documentation loc="48(HplSensirionSht11C.SplitControlPowerManagerC.PowerManager):/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10;</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C.TimerMilliC" loc="36(HalSensirionSht11C.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(HalSensirionSht11C.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InteractionC.PhotoSensorC" loc="19(InteractionC.PhotoSensorC):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoSensorC.nc">
      <documentation loc="19(InteractionC.PhotoSensorC):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10;</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PhotoSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InteractionC.PhotoSensorC.DemoChannel" loc="27(InteractionC.PhotoSensorC.DemoChannel):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoC.nc">
      <documentation loc="27(InteractionC.PhotoSensorC.DemoChannel):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="0">
        <component-ref qname="PhotoC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InteractionC.PhotoSensorC.DemoChannel.ADC_ShiftM" loc="27(InteractionC.PhotoSensorC.DemoChannel.ADC_ShiftM):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc">
      <documentation loc="27(InteractionC.PhotoSensorC.DemoChannel.ADC_ShiftM):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="0">
        <component-ref qname="ADC_ShiftM"/>
      </instance>
      <module/>
    </component>
    <component qname="InteractionC.PhotoSensorC.DemoChannel.PhotoProC" loc="26(InteractionC.PhotoSensorC.DemoChannel.PhotoProC):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoProC.nc">
      <documentation loc="26(InteractionC.PhotoSensorC.DemoChannel.PhotoProC):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoProC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="0">
        <component-ref qname="PhotoProC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InteractionC.PhotoSensorC.DemoChannel.PhotoProC.AdcReadClientC" loc="21(InteractionC.PhotoSensorC.DemoChannel.PhotoProC.AdcReadClientC):/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="21(InteractionC.PhotoSensorC.DemoChannel.PhotoProC.AdcReadClientC):/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC. </short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="16:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <documentation loc="16:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10;</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="42:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10;</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="62:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <documentation loc="62:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
        <short>&#10;&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10;&#10;&#10; @author Jason Hill&#10;&#10; @author David Gay&#10;&#10; @author Philip Levis&#10;&#10; @author Phil Buonadonna&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="35:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10;</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="35:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10;</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="79(Atm128AdcC.AdcArbiter):/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="79(Atm128AdcC.AdcArbiter):/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="32(Atm128AdcC.AdcArbiter.Queue):/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="32(Atm128AdcC.AdcArbiter.Queue):/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.1.2.3 $&#10; @date $Date: 2006/10/23 05:45:49 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="51(Atm128AdcC.AdcArbiter.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="51(Atm128AdcC.AdcArbiter.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceController interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceController interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceController&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="57(Atm128AdcC.PM):/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="57(Atm128AdcC.PM):/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10;</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="48(Atm128AdcC.PM.PowerManager):/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="48(Atm128AdcC.PM.PowerManager):/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10;</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10;</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <documentation loc="23(WireAdcP.ArbitrateRead):/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10;</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoDeviceP" loc="29:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoDeviceP.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoDeviceP.nc">
        <short>***************************************************************************</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="PhotoP" loc="27:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoP.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoP.nc">
        <short>***************************************************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="ZigbexBusC" loc="27:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="ZigbexBusP" loc="27:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusP.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusP.nc">
        <short>***************************************************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="InteractionC.UltraredSensorC" loc="19(InteractionC.UltraredSensorC):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredSensorC.nc">
      <documentation loc="19(InteractionC.UltraredSensorC):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10;</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="UltraredSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InteractionC.UltraredSensorC.DemoChannel" loc="27(InteractionC.UltraredSensorC.DemoChannel):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredC.nc">
      <documentation loc="27(InteractionC.UltraredSensorC.DemoChannel):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="0">
        <component-ref qname="UltraredC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InteractionC.UltraredSensorC.DemoChannel.ADC_ShiftM" loc="27(InteractionC.UltraredSensorC.DemoChannel.ADC_ShiftM):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc">
      <documentation loc="27(InteractionC.UltraredSensorC.DemoChannel.ADC_ShiftM):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="1">
        <component-ref qname="ADC_ShiftM"/>
      </instance>
      <module/>
    </component>
    <component qname="InteractionC.UltraredSensorC.DemoChannel.UltraredProC" loc="29(InteractionC.UltraredSensorC.DemoChannel.UltraredProC):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredProC.nc">
      <documentation loc="29(InteractionC.UltraredSensorC.DemoChannel.UltraredProC):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredProC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="0">
        <component-ref qname="UltraredProC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InteractionC.UltraredSensorC.DemoChannel.UltraredProC.AdcReadClientC" loc="21(InteractionC.UltraredSensorC.DemoChannel.UltraredProC.AdcReadClientC):/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="21(InteractionC.UltraredSensorC.DemoChannel.UltraredProC.AdcReadClientC):/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC. </short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UltraredDeviceP" loc="29:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredDeviceP.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredDeviceP.nc">
        <short>***************************************************************************</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="UltraredP" loc="27:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredP.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredP.nc">
        <short>***************************************************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="CommunicationWithOPTC" loc="22:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTC.nc">
      <documentation loc="22:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="CommunicationWithOPTM" loc="20:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTM.nc">
      <documentation loc="20:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTM.nc">
        <short>***************************************************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="35:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.&#10;&#10;</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="69:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <documentation loc="69:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega128 serial port HPL.&#10;&#10;</short>
        <long> &#10; Private component of the Atmega128 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NoSCSuartDBGC" loc="2:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/NoSCSuartDBGC.nc">
      <module/>
    </component>
    <component qname="SCSuartDBGC" loc="29:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGC.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="SCSuartDBGM" loc="29:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGM.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGM.nc">
        <short>***************************************************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="TempSensorC" loc="20:TempSensorC.nc">
      <documentation loc="20:TempSensorC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="TempSensorM" loc="23:TempSensorM.nc">
      <documentation loc="23:TempSensorM.nc">
        <short>***************************************************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="TempSensorC.TimerMilliC" loc="36(TempSensorC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(TempSensorC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TempSensorC.Sensor" loc="45(TempSensorC.Sensor):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11C.nc">
      <documentation loc="45(TempSensorC.Sensor):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SensirionSht11C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TempSensorC.Sensor.SensirionSht11ReaderP" loc="43(TempSensorC.Sensor.SensirionSht11ReaderP):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <documentation loc="43(TempSensorC.Sensor.SensirionSht11ReaderP):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
        <short>&#10; SensirionSht11ReaderP transforms the HAL-level SensirionSht11&#10; interface into a pair of SID Read interfaces, one for the&#10; temperature sensor and one for the humidity sensor.</short>
        <long>&#10; SensirionSht11ReaderP transforms the HAL-level SensirionSht11&#10; interface into a pair of SID Read interfaces, one for the&#10; temperature sensor and one for the humidity sensor. It acquires the&#10; underlying resource before executing each read, enabling&#10; arbitrated access.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SensirionSht11ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="TempSensorC.URSensor" loc="19(TempSensorC.URSensor):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredSensorC.nc">
      <documentation loc="19(TempSensorC.URSensor):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10;</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="UltraredSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TempSensorC.URSensor.DemoChannel" loc="27(TempSensorC.URSensor.DemoChannel):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredC.nc">
      <documentation loc="27(TempSensorC.URSensor.DemoChannel):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="1">
        <component-ref qname="UltraredC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TempSensorC.URSensor.DemoChannel.ADC_ShiftM" loc="27(TempSensorC.URSensor.DemoChannel.ADC_ShiftM):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc">
      <documentation loc="27(TempSensorC.URSensor.DemoChannel.ADC_ShiftM):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="2">
        <component-ref qname="ADC_ShiftM"/>
      </instance>
      <module/>
    </component>
    <component qname="TempSensorC.URSensor.DemoChannel.UltraredProC" loc="29(TempSensorC.URSensor.DemoChannel.UltraredProC):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredProC.nc">
      <documentation loc="29(TempSensorC.URSensor.DemoChannel.UltraredProC):/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredProC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="1">
        <component-ref qname="UltraredProC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TempSensorC.URSensor.DemoChannel.UltraredProC.AdcReadClientC" loc="21(TempSensorC.URSensor.DemoChannel.UltraredProC.AdcReadClientC):/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="21(TempSensorC.URSensor.DemoChannel.UltraredProC.AdcReadClientC):/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC. </short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ComSatC" loc="1:ComSatC.nc">
      <configuration/>
    </component>
    <component qname="ComSatM" loc="2:ComSatM.nc">
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="47:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <documentation loc="47:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the micaZ platform.</short>
        <long>&#10;&#10; The Active Message layer on the micaZ platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @date June 19 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
        <short>&#10; The Active Message layer for the CC2420 radio.</short>
        <long>&#10; The Active Message layer for the CC2420 radio. This configuration&#10; just layers the AM dispatch (CC2420ActiveMessageM) on top of the&#10; underlying CC2420 radio packet (CC2420CsmaRadioC), which is&#10; inherently an AM packet (acknowledgements based on AM destination&#10; addr and group). Note that snooping may not work, due to CC2420&#10; early packet rejection if acknowledgements are enabled.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.11 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="35:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.8 $ $Date: 2006/08/04 00:34:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.11 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.12 $ $Date: 2006/07/17 05:04:16 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.8 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.22 $ $Date: 2006/09/07 17:53:12 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/AlarmMultiplexC.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/chips/cc2420/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="66(AlarmMultiplexC.Alarm):/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="66(AlarmMultiplexC.Alarm):/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.6 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.&#10;&#10;</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1P" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10;</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="35(InitOneP.InitOne):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="42(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="42(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10;</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="TOne" ref="0x7f081ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="33(CounterOne16C.NCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="TOne" ref="0x7f081ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="43(Counter32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="43(Counter32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10;</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120ce0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120ce0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x7f081e80"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="40(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="40(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm. </short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120ce0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="TOne" ref="0x7f081ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/opt/tinyos-2.x/tos/system/NoInitC.nc">
      <documentation loc="16:/opt/tinyos-2.x/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="64:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="64:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10;</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.1.2.6 2006/06/20 18:56:06 jwhui Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.6 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.6 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="33(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="33(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10;</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="65:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsP.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.1.2.4 2006/06/20 18:56:06 jwhui Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @version @version $Revision: 1.1.2.4 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.TimerMilliC" loc="36(HplCC2420InterruptsC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(HplCC2420InterruptsC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <documentation loc="39(CC2420ControlC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.8 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiImplP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.12 $ $Date: 2006/09/28 19:26:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiP.HplCC2420SpiC" loc="37(CC2420SpiP.HplCC2420SpiC):/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="37(CC2420SpiP.HplCC2420SpiC):/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.4 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.&#10;&#10;</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.1.2.9 2006/08/15 11:59:08 klueska Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <documentation loc="75:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller. </short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.1.2.10 2006/09/28 19:26:21 jwhui Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10;</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.1.2.4 2006/03/13 23:07:53 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <documentation loc="56:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10;</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="73(Atm128SpiC.Arbiter):/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="73(Atm128SpiC.Arbiter):/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="32(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="51(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="51(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <documentation loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420TransmitC" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.8 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.14 $ $Date: 2006/08/15 11:59:08 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <documentation loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.5 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.10 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <documentation loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="32:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="31:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
        <short>&#10; This is the configuration for RandomMlcgC, a &#10; multiplicative linear congruential generator. &#10;&#10;</short>
        <long>&#10; This is the configuration for RandomMlcgC, a &#10; multiplicative linear congruential generator. &#10;&#10; @author  Barbara Hohlt&#10; @author  Philip Levis&#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgP" loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers. </short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;		S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420PacketC.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420PacketC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ComSatC.TimerMilliC" loc="36(ComSatC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(ComSatC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7ed90c20" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7ed90db0" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7ed81010" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7ed62218" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7ed623b8" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7ed62558" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7ed626f0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7ec70218" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7ec703b8" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7ec70558" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7ec706f0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="36:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7ea53010" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7ea53010"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7ea531a0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10;</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7ea36608" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7ea36608"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7ea368c8" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7ea368c8"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x7ea36a58" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7ea02ae8" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7ea02ae8"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7ea02da8" loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7ea02da8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmCounterC" loc="53:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc" abstract="">
      <documentation loc="53:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
        <short>&#10; TransformAlarmCounterC decreases precision and/or widens an Alarm/Counter&#10; pair.</short>
        <long>&#10; TransformAlarmCounterC decreases precision and/or widens an Alarm/Counter&#10; pair. This component has a reduced interrupt overhead compared to using&#10; TransformAlarmC and TransformCounterC separately. However, it is not as &#10; useful for hardware timers with multiple compare registers.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   interfaces.&#10; @param to_size_type The type for the width of the transformed interfaces.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   interfaces.&#10; @param from_size_type The type for the width of the original interfaces.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7e9d6b18" loc="54:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7e9d6b18"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7e9d6dd8" loc="55:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7e9d6dd8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7e9d4010" loc="56:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7e9d4010"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7e9d42d0" loc="57:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7e9d42d0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7e9d4470" loc="58:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7e9d4738" loc="59:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7e9d4738"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10;</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7e976cc0" loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7e976cc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10;</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7e942698" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7e942698"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7e942820" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7e8e7228" loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7e8e7228"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11C" loc="45:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11C.nc" abstract="">
      <documentation loc="45:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:07 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensirionSht11ReaderP" loc="43:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc" abstract="">
      <documentation loc="43:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
        <short>&#10; SensirionSht11ReaderP transforms the HAL-level SensirionSht11&#10; interface into a pair of SID Read interfaces, one for the&#10; temperature sensor and one for the humidity sensor.</short>
        <long>&#10; SensirionSht11ReaderP transforms the HAL-level SensirionSht11&#10; interface into a pair of SID Read interfaces, one for the&#10; temperature sensor and one for the humidity sensor. It acquires the&#10; underlying resource before executing each read, enabling&#10; arbitrated access.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11LogicP" loc="53:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11LogicP.nc" abstract="">
      <documentation loc="53:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="">
      <documentation loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x7e5714e8" loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x7e571688" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x7e571828" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7e5719c0" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="">
      <documentation loc="6:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="79:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="79:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7e53b538" loc="79:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc" abstract="">
      <parameters>
        <constant name="size" ref="0x7e525948" loc="32:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="51:/opt/tinyos-2.x/tos/system/ArbiterP.nc" abstract="">
      <documentation loc="51:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceController interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceController interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceController&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="controller_id" ref="0x7e511948" loc="51:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="57:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="57:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices. </short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="48:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="48:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10;</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PhotoSensorC" loc="19:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoSensorC.nc" abstract="">
      <documentation loc="19:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10;</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PhotoC" loc="27:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoC.nc" abstract="">
      <documentation loc="27:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ADC_ShiftM" loc="27:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc" abstract="">
      <documentation loc="27:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc">
        <short>***************************************************************************</short>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PhotoProC" loc="26:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoProC.nc" abstract="">
      <documentation loc="26:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoProC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="21:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="21:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC. </short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="79:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="79:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7e418610" loc="79:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="32:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.1.2.3 $&#10; @date $Date: 2006/10/23 05:45:49 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7e410068" loc="32:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="57:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="57:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10;</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="48:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc" abstract="">
      <documentation loc="48:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10;</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc" abstract="">
      <documentation loc="23:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10;</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x7e3e6f10" loc="23:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x7e3e6f10"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="UltraredSensorC" loc="19:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredSensorC.nc" abstract="">
      <documentation loc="19:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10;</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UltraredC" loc="27:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredC.nc" abstract="">
      <documentation loc="27:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UltraredProC" loc="29:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredProC.nc" abstract="">
      <documentation loc="29:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredProC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420AlarmC" loc="66:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="66:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.6 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="26:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc" abstract="">
      <documentation loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10;</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7df24580" loc="44:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7df24580"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7df24840" loc="45:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7df24840"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7df24a08" loc="46:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7df24a08"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7df24cc8" loc="47:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7df24cc8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7df24e68" loc="48:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7df22168" loc="49:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7df22168"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="40:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc" abstract="">
      <documentation loc="40:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm. </short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7df12860" loc="41:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7df12860"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7df12b20" loc="42:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7df12b20"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7df12ce8" loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7df12ce8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7df11010" loc="44:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7df11010"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7df111b0" loc="45:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10;</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc" abstract="">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="37:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.4 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7dd858a0" loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleArbiterP" loc="51:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc" abstract="">
      <documentation loc="51:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Boot" ref="0x7ef83190" loc="4:SerialAppM.nc">
      <component-ref qname="SerialAppM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7ef83190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7ef83368"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LCDSetter" ref="0x7ef42b30" loc="9:SerialAppM.nc">
      <component-ref qname="SerialAppM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LCDSetter" scoped="" ref="0x7ef42b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCDSetter"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef42d08"/>
        <function-ref name="setLCD" scoped="" ref="0x7ef42de8"/>
        <function-ref name="setLCD2" scoped="" ref="0x7ef42ec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LEDController" ref="0x7ef516a0" loc="8:SerialAppM.nc">
      <component-ref qname="SerialAppM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LEDController" scoped="" ref="0x7ef516a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LEDController"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7ef51878"/>
        <function-ref name="BlinkLed1" scoped="" ref="0x7ef51958"/>
        <function-ref name="IntervalBlinkLed0" scoped="" ref="0x7ef51a38"/>
        <function-ref name="BlinkLed2" scoped="" ref="0x7ef51b18"/>
        <function-ref name="IntervalBlinkLed1" scoped="" ref="0x7ef51bf8"/>
        <function-ref name="BlinkLed0" scoped="" ref="0x7ef51cd8"/>
        <function-ref name="IntervalBlinkLed2" scoped="" ref="0x7ef51db8"/>
        <function-ref name="BlinkDone" scoped="" ref="0x7ef51e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ComSat" ref="0x7ef232f0" loc="11:SerialAppM.nc">
      <component-ref qname="SerialAppM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ComSat" scoped="" ref="0x7ef232f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ComSat"/>
      </instance>
      <interface-functions>
        <function-ref name="initDone" scoped="" ref="0x7ef234c8"/>
        <function-ref name="init" scoped="" ref="0x7ef235a8"/>
        <function-ref name="sendData" scoped="" ref="0x7ef23688"/>
        <function-ref name="received" scoped="" ref="0x7ef23768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendPacket" ref="0x7ef217e8" loc="46:SerialAppM.nc">
      <component-ref qname="SerialAppM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendPacket" scoped="" ref="0x7ef217e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ef219c0"/>
        <function-ref name="runTask" scoped="" ref="0x7ef21aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="setData" ref="0x7ef21f08" loc="47:SerialAppM.nc">
      <component-ref qname="SerialAppM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="setData" scoped="" ref="0x7ef21f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ef200f0"/>
        <function-ref name="runTask" scoped="" ref="0x7ef201d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempSensor" ref="0x7ef33530" loc="10:SerialAppM.nc">
      <component-ref qname="SerialAppM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempSensor" scoped="" ref="0x7ef33530"/></type-interface>
      <instance>
        <interfacedef-ref qname="TempSensor"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7ef33708"/>
        <function-ref name="start" scoped="" ref="0x7ef337e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ef90010" loc="6:SerialAppM.nc">
      <component-ref qname="SerialAppM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7ef90010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ef70928"/>
        <function-ref name="fired" scoped="" ref="0x7ef90d18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ef702e8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ef70108"/>
        <function-ref name="getdt" scoped="" ref="0x7ef70ce8"/>
        <function-ref name="gett0" scoped="" ref="0x7ef70b08"/>
        <function-ref name="isRunning" scoped="" ref="0x7ef90ef8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ef90638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ef70608"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ef908b8"/>
        <function-ref name="stop" scoped="" ref="0x7ef90b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7ee92080" loc="47:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7ee92080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ee92258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7eea08c8" loc="46:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7eea08c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7eea0aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7ee72010" loc="43:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7ee72010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ee721e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ee81d60" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ee81d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ee80010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7ee628f0" loc="41:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7ee628f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7ee62ac8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7ee62ba8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7ee62c88"/>
        <function-ref name="actualMicro" scoped="" ref="0x7ee62d68"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7ee62e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7ee52090" loc="36:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7ee52090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ee52268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ee53d10" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ee53d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ee53ee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7ee52400" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7ee52400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ee525d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7ee60da0" loc="18:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7ee60da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ee40010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7ee60a38" loc="17:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7ee60a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ee60c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7ee221a0" loc="22:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7ee221a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ee22378"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7ee13800" loc="21:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7ee13800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee139d8"/>
        <function-ref name="isInput" scoped="" ref="0x7ee13ab8"/>
        <function-ref name="toggle" scoped="" ref="0x7ee13b98"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee13c78"/>
        <function-ref name="get" scoped="" ref="0x7ee13d58"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee13e38"/>
        <function-ref name="set" scoped="" ref="0x7ee13f18"/>
        <function-ref name="clr" scoped="" ref="0x7ee22010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7ee30010" loc="20:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7ee30010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ee301e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7eda0e78" loc="91:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7eda0e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed94308"/>
        <function-ref name="isInput" scoped="" ref="0x7ed943e8"/>
        <function-ref name="toggle" scoped="" ref="0x7ed944c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed945a8"/>
        <function-ref name="get" scoped="" ref="0x7ed94688"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed94768"/>
        <function-ref name="set" scoped="" ref="0x7ed94848"/>
        <function-ref name="clr" scoped="" ref="0x7ed94928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7edd0e98" loc="65:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7edd0e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc40c0"/>
        <function-ref name="isInput" scoped="" ref="0x7edc41a0"/>
        <function-ref name="toggle" scoped="" ref="0x7edc4280"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc4360"/>
        <function-ref name="get" scoped="" ref="0x7edc4440"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc4520"/>
        <function-ref name="set" scoped="" ref="0x7edc4600"/>
        <function-ref name="clr" scoped="" ref="0x7edc46e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7edb3068" loc="76:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7edb3068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edb3240"/>
        <function-ref name="isInput" scoped="" ref="0x7edb3320"/>
        <function-ref name="toggle" scoped="" ref="0x7edb3400"/>
        <function-ref name="isOutput" scoped="" ref="0x7edb34e0"/>
        <function-ref name="get" scoped="" ref="0x7edb35c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edb36a0"/>
        <function-ref name="set" scoped="" ref="0x7edb3780"/>
        <function-ref name="clr" scoped="" ref="0x7edb3860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7eda4e78" loc="85:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7eda4e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eda2070"/>
        <function-ref name="isInput" scoped="" ref="0x7eda2150"/>
        <function-ref name="toggle" scoped="" ref="0x7eda2230"/>
        <function-ref name="isOutput" scoped="" ref="0x7eda2310"/>
        <function-ref name="get" scoped="" ref="0x7eda23f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eda24d0"/>
        <function-ref name="set" scoped="" ref="0x7eda25b0"/>
        <function-ref name="clr" scoped="" ref="0x7eda2690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7edf3508" loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7edf3508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edf36e0"/>
        <function-ref name="isInput" scoped="" ref="0x7edf37c0"/>
        <function-ref name="toggle" scoped="" ref="0x7edf38a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7edf3980"/>
        <function-ref name="get" scoped="" ref="0x7edf3a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edf3b40"/>
        <function-ref name="set" scoped="" ref="0x7edf3c20"/>
        <function-ref name="clr" scoped="" ref="0x7edf3d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7edb0af8" loc="83:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7edb0af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edb0cd0"/>
        <function-ref name="isInput" scoped="" ref="0x7edb0db0"/>
        <function-ref name="toggle" scoped="" ref="0x7edb0e90"/>
        <function-ref name="isOutput" scoped="" ref="0x7eda4010"/>
        <function-ref name="get" scoped="" ref="0x7eda40f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eda41d0"/>
        <function-ref name="set" scoped="" ref="0x7eda42b0"/>
        <function-ref name="clr" scoped="" ref="0x7eda4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7edf1808" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7edf1808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edf19e0"/>
        <function-ref name="isInput" scoped="" ref="0x7edf1ac0"/>
        <function-ref name="toggle" scoped="" ref="0x7edf1ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7edf1c80"/>
        <function-ref name="get" scoped="" ref="0x7edf1d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edf1e40"/>
        <function-ref name="set" scoped="" ref="0x7edf1f20"/>
        <function-ref name="clr" scoped="" ref="0x7edf0018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7edd4980" loc="57:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7edd4980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edd4b58"/>
        <function-ref name="isInput" scoped="" ref="0x7edd4c38"/>
        <function-ref name="toggle" scoped="" ref="0x7edd4d18"/>
        <function-ref name="isOutput" scoped="" ref="0x7edd4df8"/>
        <function-ref name="get" scoped="" ref="0x7edd4ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edd3010"/>
        <function-ref name="set" scoped="" ref="0x7edd30f0"/>
        <function-ref name="clr" scoped="" ref="0x7edd31d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7edc3bd8" loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7edc3bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc3db0"/>
        <function-ref name="isInput" scoped="" ref="0x7edc3e90"/>
        <function-ref name="toggle" scoped="" ref="0x7edc2010"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc20f0"/>
        <function-ref name="get" scoped="" ref="0x7edc21d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc22b0"/>
        <function-ref name="set" scoped="" ref="0x7edc2390"/>
        <function-ref name="clr" scoped="" ref="0x7edc2470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7edb2d98" loc="79:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7edb2d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edb1010"/>
        <function-ref name="isInput" scoped="" ref="0x7edb10f0"/>
        <function-ref name="toggle" scoped="" ref="0x7edb11d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7edb12b0"/>
        <function-ref name="get" scoped="" ref="0x7edb1390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edb1470"/>
        <function-ref name="set" scoped="" ref="0x7edb1550"/>
        <function-ref name="clr" scoped="" ref="0x7edb1630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7ee02428" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7ee02428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee02600"/>
        <function-ref name="isInput" scoped="" ref="0x7ee026e0"/>
        <function-ref name="toggle" scoped="" ref="0x7ee027c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee028a0"/>
        <function-ref name="get" scoped="" ref="0x7ee02980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee02a60"/>
        <function-ref name="set" scoped="" ref="0x7ee02b40"/>
        <function-ref name="clr" scoped="" ref="0x7ee02c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7ede3508" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7ede3508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ede36e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ede37c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ede38a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ede3980"/>
        <function-ref name="get" scoped="" ref="0x7ede3a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ede3b40"/>
        <function-ref name="set" scoped="" ref="0x7ede3c20"/>
        <function-ref name="clr" scoped="" ref="0x7ede3d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7edd26c8" loc="60:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7edd26c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edd28a0"/>
        <function-ref name="isInput" scoped="" ref="0x7edd2980"/>
        <function-ref name="toggle" scoped="" ref="0x7edd2a60"/>
        <function-ref name="isOutput" scoped="" ref="0x7edd2b40"/>
        <function-ref name="get" scoped="" ref="0x7edd2c20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edd2d00"/>
        <function-ref name="set" scoped="" ref="0x7edd2de0"/>
        <function-ref name="clr" scoped="" ref="0x7edd2ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7edc1980" loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7edc1980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc1b58"/>
        <function-ref name="isInput" scoped="" ref="0x7edc1c38"/>
        <function-ref name="toggle" scoped="" ref="0x7edc1d18"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc1df8"/>
        <function-ref name="get" scoped="" ref="0x7edc1ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc0010"/>
        <function-ref name="set" scoped="" ref="0x7edc00f0"/>
        <function-ref name="clr" scoped="" ref="0x7edc01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7eda1b00" loc="88:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7eda1b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eda1cd8"/>
        <function-ref name="isInput" scoped="" ref="0x7eda1db8"/>
        <function-ref name="toggle" scoped="" ref="0x7eda1e98"/>
        <function-ref name="isOutput" scoped="" ref="0x7eda0010"/>
        <function-ref name="get" scoped="" ref="0x7eda00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eda01d0"/>
        <function-ref name="set" scoped="" ref="0x7eda02b0"/>
        <function-ref name="clr" scoped="" ref="0x7eda0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7ed93d98" loc="94:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7ed93d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed92010"/>
        <function-ref name="isInput" scoped="" ref="0x7ed920f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed921d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed922b0"/>
        <function-ref name="get" scoped="" ref="0x7ed92390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed92470"/>
        <function-ref name="set" scoped="" ref="0x7ed92550"/>
        <function-ref name="clr" scoped="" ref="0x7ed92630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7edc0cb8" loc="74:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7edc0cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc0e90"/>
        <function-ref name="isInput" scoped="" ref="0x7edb4010"/>
        <function-ref name="toggle" scoped="" ref="0x7edb40f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7edb41d0"/>
        <function-ref name="get" scoped="" ref="0x7edb42b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edb4390"/>
        <function-ref name="set" scoped="" ref="0x7edb4470"/>
        <function-ref name="clr" scoped="" ref="0x7edb4550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7ee00188" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7ee00188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee00360"/>
        <function-ref name="isInput" scoped="" ref="0x7ee00440"/>
        <function-ref name="toggle" scoped="" ref="0x7ee00520"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee00600"/>
        <function-ref name="get" scoped="" ref="0x7ee006e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee007c0"/>
        <function-ref name="set" scoped="" ref="0x7ee008a0"/>
        <function-ref name="clr" scoped="" ref="0x7ee00980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7ede1268" loc="52:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7ede1268"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ede1440"/>
        <function-ref name="isInput" scoped="" ref="0x7ede1520"/>
        <function-ref name="toggle" scoped="" ref="0x7ede1600"/>
        <function-ref name="isOutput" scoped="" ref="0x7ede16e0"/>
        <function-ref name="get" scoped="" ref="0x7ede17c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ede18a0"/>
        <function-ref name="set" scoped="" ref="0x7ede1980"/>
        <function-ref name="clr" scoped="" ref="0x7ede1a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7ed94aa0" loc="92:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7ed94aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed94c78"/>
        <function-ref name="isInput" scoped="" ref="0x7ed94d58"/>
        <function-ref name="toggle" scoped="" ref="0x7ed94e38"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed94f18"/>
        <function-ref name="get" scoped="" ref="0x7ed93010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed930f0"/>
        <function-ref name="set" scoped="" ref="0x7ed931d0"/>
        <function-ref name="clr" scoped="" ref="0x7ed932b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7ede05e8" loc="55:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7ede05e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ede07c0"/>
        <function-ref name="isInput" scoped="" ref="0x7ede08a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ede0980"/>
        <function-ref name="isOutput" scoped="" ref="0x7ede0a60"/>
        <function-ref name="get" scoped="" ref="0x7ede0b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ede0c20"/>
        <function-ref name="set" scoped="" ref="0x7ede0d00"/>
        <function-ref name="clr" scoped="" ref="0x7ede0de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7edc4858" loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7edc4858"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc4a30"/>
        <function-ref name="isInput" scoped="" ref="0x7edc4b10"/>
        <function-ref name="toggle" scoped="" ref="0x7edc4bf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc4cd0"/>
        <function-ref name="get" scoped="" ref="0x7edc4db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc4e90"/>
        <function-ref name="set" scoped="" ref="0x7edc3010"/>
        <function-ref name="clr" scoped="" ref="0x7edc30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7edb39d8" loc="77:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7edb39d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edb3bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7edb3c90"/>
        <function-ref name="toggle" scoped="" ref="0x7edb3d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7edb3e50"/>
        <function-ref name="get" scoped="" ref="0x7edb2010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edb20f0"/>
        <function-ref name="set" scoped="" ref="0x7edb21d0"/>
        <function-ref name="clr" scoped="" ref="0x7edb22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7eda2808" loc="86:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7eda2808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eda29e0"/>
        <function-ref name="isInput" scoped="" ref="0x7eda2ac0"/>
        <function-ref name="toggle" scoped="" ref="0x7eda2ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eda2c80"/>
        <function-ref name="get" scoped="" ref="0x7eda2d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eda2e40"/>
        <function-ref name="set" scoped="" ref="0x7eda2f20"/>
        <function-ref name="clr" scoped="" ref="0x7eda1018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7edf3e78" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7edf3e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edf1070"/>
        <function-ref name="isInput" scoped="" ref="0x7edf1150"/>
        <function-ref name="toggle" scoped="" ref="0x7edf1230"/>
        <function-ref name="isOutput" scoped="" ref="0x7edf1310"/>
        <function-ref name="get" scoped="" ref="0x7edf13f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edf14d0"/>
        <function-ref name="set" scoped="" ref="0x7edf15b0"/>
        <function-ref name="clr" scoped="" ref="0x7edf1690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7edf0190" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7edf0190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edf0368"/>
        <function-ref name="isInput" scoped="" ref="0x7edf0448"/>
        <function-ref name="toggle" scoped="" ref="0x7edf0528"/>
        <function-ref name="isOutput" scoped="" ref="0x7edf0608"/>
        <function-ref name="get" scoped="" ref="0x7edf06e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edf07c8"/>
        <function-ref name="set" scoped="" ref="0x7edf08a8"/>
        <function-ref name="clr" scoped="" ref="0x7edf0988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7edd3348" loc="58:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7edd3348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edd3520"/>
        <function-ref name="isInput" scoped="" ref="0x7edd3600"/>
        <function-ref name="toggle" scoped="" ref="0x7edd36e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7edd37c0"/>
        <function-ref name="get" scoped="" ref="0x7edd38a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edd3980"/>
        <function-ref name="set" scoped="" ref="0x7edd3a60"/>
        <function-ref name="clr" scoped="" ref="0x7edd3b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7edc25e8" loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7edc25e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc27c0"/>
        <function-ref name="isInput" scoped="" ref="0x7edc28a0"/>
        <function-ref name="toggle" scoped="" ref="0x7edc2980"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc2a60"/>
        <function-ref name="get" scoped="" ref="0x7edc2b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc2c20"/>
        <function-ref name="set" scoped="" ref="0x7edc2d00"/>
        <function-ref name="clr" scoped="" ref="0x7edc2de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7edb17a8" loc="80:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7edb17a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edb1980"/>
        <function-ref name="isInput" scoped="" ref="0x7edb1a60"/>
        <function-ref name="toggle" scoped="" ref="0x7edb1b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7edb1c20"/>
        <function-ref name="get" scoped="" ref="0x7edb1d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edb1de0"/>
        <function-ref name="set" scoped="" ref="0x7edb1ec0"/>
        <function-ref name="clr" scoped="" ref="0x7edb0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7ee02d98" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7ee02d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee01010"/>
        <function-ref name="isInput" scoped="" ref="0x7ee010f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ee011d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee012b0"/>
        <function-ref name="get" scoped="" ref="0x7ee01390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee01470"/>
        <function-ref name="set" scoped="" ref="0x7ee01550"/>
        <function-ref name="clr" scoped="" ref="0x7ee01630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7ede3e78" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7ede3e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ede20e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ede21c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ede22a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ede2380"/>
        <function-ref name="get" scoped="" ref="0x7ede2460"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ede2540"/>
        <function-ref name="set" scoped="" ref="0x7ede2620"/>
        <function-ref name="clr" scoped="" ref="0x7ede2700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7edd1068" loc="61:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7edd1068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edd1240"/>
        <function-ref name="isInput" scoped="" ref="0x7edd1320"/>
        <function-ref name="toggle" scoped="" ref="0x7edd1400"/>
        <function-ref name="isOutput" scoped="" ref="0x7edd14e0"/>
        <function-ref name="get" scoped="" ref="0x7edd15c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edd16a0"/>
        <function-ref name="set" scoped="" ref="0x7edd1780"/>
        <function-ref name="clr" scoped="" ref="0x7edd1860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7eda0508" loc="89:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7eda0508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eda06e0"/>
        <function-ref name="isInput" scoped="" ref="0x7eda07c0"/>
        <function-ref name="toggle" scoped="" ref="0x7eda08a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eda0980"/>
        <function-ref name="get" scoped="" ref="0x7eda0a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eda0b40"/>
        <function-ref name="set" scoped="" ref="0x7eda0c20"/>
        <function-ref name="clr" scoped="" ref="0x7eda0d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7edd0428" loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7edd0428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edd0700"/>
        <function-ref name="isInput" scoped="" ref="0x7edd07e0"/>
        <function-ref name="toggle" scoped="" ref="0x7edd08c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7edd09a0"/>
        <function-ref name="get" scoped="" ref="0x7edd0a80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edd0b60"/>
        <function-ref name="set" scoped="" ref="0x7edd0c40"/>
        <function-ref name="clr" scoped="" ref="0x7edd0d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7edb46c8" loc="75:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7edb46c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edb48a0"/>
        <function-ref name="isInput" scoped="" ref="0x7edb4980"/>
        <function-ref name="toggle" scoped="" ref="0x7edb4a60"/>
        <function-ref name="isOutput" scoped="" ref="0x7edb4b40"/>
        <function-ref name="get" scoped="" ref="0x7edb4c20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edb4d00"/>
        <function-ref name="set" scoped="" ref="0x7edb4de0"/>
        <function-ref name="clr" scoped="" ref="0x7edb4ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7eda4508" loc="84:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7eda4508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eda46e0"/>
        <function-ref name="isInput" scoped="" ref="0x7eda47c0"/>
        <function-ref name="toggle" scoped="" ref="0x7eda48a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eda4980"/>
        <function-ref name="get" scoped="" ref="0x7eda4a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eda4b40"/>
        <function-ref name="set" scoped="" ref="0x7eda4c20"/>
        <function-ref name="clr" scoped="" ref="0x7eda4d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7ed927a8" loc="95:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7ed927a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed92980"/>
        <function-ref name="isInput" scoped="" ref="0x7ed92a60"/>
        <function-ref name="toggle" scoped="" ref="0x7ed92b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed92c20"/>
        <function-ref name="get" scoped="" ref="0x7ed92d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed92de0"/>
        <function-ref name="set" scoped="" ref="0x7ed92ec0"/>
        <function-ref name="clr" scoped="" ref="0x7ed91010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7ee00af8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7ee00af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee00cd0"/>
        <function-ref name="isInput" scoped="" ref="0x7ee00db0"/>
        <function-ref name="toggle" scoped="" ref="0x7ee00e90"/>
        <function-ref name="isOutput" scoped="" ref="0x7edf3010"/>
        <function-ref name="get" scoped="" ref="0x7edf30f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edf31d0"/>
        <function-ref name="set" scoped="" ref="0x7edf32b0"/>
        <function-ref name="clr" scoped="" ref="0x7edf3390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7ede1bd8" loc="53:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7ede1bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ede1db0"/>
        <function-ref name="isInput" scoped="" ref="0x7ede1e90"/>
        <function-ref name="toggle" scoped="" ref="0x7ede0010"/>
        <function-ref name="isOutput" scoped="" ref="0x7ede00f0"/>
        <function-ref name="get" scoped="" ref="0x7ede01d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ede02b0"/>
        <function-ref name="set" scoped="" ref="0x7ede0390"/>
        <function-ref name="clr" scoped="" ref="0x7ede0470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7edb0188" loc="82:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7edb0188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edb0360"/>
        <function-ref name="isInput" scoped="" ref="0x7edb0440"/>
        <function-ref name="toggle" scoped="" ref="0x7edb0520"/>
        <function-ref name="isOutput" scoped="" ref="0x7edb0600"/>
        <function-ref name="get" scoped="" ref="0x7edb06e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edb07c0"/>
        <function-ref name="set" scoped="" ref="0x7edb08a0"/>
        <function-ref name="clr" scoped="" ref="0x7edb0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7edd4010" loc="56:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7edd4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edd41e8"/>
        <function-ref name="isInput" scoped="" ref="0x7edd42c8"/>
        <function-ref name="toggle" scoped="" ref="0x7edd43a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7edd4488"/>
        <function-ref name="get" scoped="" ref="0x7edd4568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edd4648"/>
        <function-ref name="set" scoped="" ref="0x7edd4728"/>
        <function-ref name="clr" scoped="" ref="0x7edd4808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7edc3268" loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7edc3268"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc3440"/>
        <function-ref name="isInput" scoped="" ref="0x7edc3520"/>
        <function-ref name="toggle" scoped="" ref="0x7edc3600"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc36e0"/>
        <function-ref name="get" scoped="" ref="0x7edc37c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc38a0"/>
        <function-ref name="set" scoped="" ref="0x7edc3980"/>
        <function-ref name="clr" scoped="" ref="0x7edc3a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7edb2428" loc="78:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7edb2428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edb2600"/>
        <function-ref name="isInput" scoped="" ref="0x7edb26e0"/>
        <function-ref name="toggle" scoped="" ref="0x7edb27c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7edb28a0"/>
        <function-ref name="get" scoped="" ref="0x7edb2980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edb2a60"/>
        <function-ref name="set" scoped="" ref="0x7edb2b40"/>
        <function-ref name="clr" scoped="" ref="0x7edb2c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7eda1190" loc="87:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7eda1190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eda1368"/>
        <function-ref name="isInput" scoped="" ref="0x7eda1448"/>
        <function-ref name="toggle" scoped="" ref="0x7eda1528"/>
        <function-ref name="isOutput" scoped="" ref="0x7eda1608"/>
        <function-ref name="get" scoped="" ref="0x7eda16e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eda17c8"/>
        <function-ref name="set" scoped="" ref="0x7eda18a8"/>
        <function-ref name="clr" scoped="" ref="0x7eda1988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7ee03a80" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7ee03a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee03c58"/>
        <function-ref name="isInput" scoped="" ref="0x7ee03d38"/>
        <function-ref name="toggle" scoped="" ref="0x7ee03e18"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee03ef8"/>
        <function-ref name="get" scoped="" ref="0x7ee02010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee020f0"/>
        <function-ref name="set" scoped="" ref="0x7ee021d0"/>
        <function-ref name="clr" scoped="" ref="0x7ee022b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7edf0b00" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7edf0b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edf0cd8"/>
        <function-ref name="isInput" scoped="" ref="0x7edf0db8"/>
        <function-ref name="toggle" scoped="" ref="0x7edf0e98"/>
        <function-ref name="isOutput" scoped="" ref="0x7ede3010"/>
        <function-ref name="get" scoped="" ref="0x7ede30f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ede31d0"/>
        <function-ref name="set" scoped="" ref="0x7ede32b0"/>
        <function-ref name="clr" scoped="" ref="0x7ede3390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7edd3cb8" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7edd3cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edd3e90"/>
        <function-ref name="isInput" scoped="" ref="0x7edd2010"/>
        <function-ref name="toggle" scoped="" ref="0x7edd20f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7edd21d0"/>
        <function-ref name="get" scoped="" ref="0x7edd22b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edd2390"/>
        <function-ref name="set" scoped="" ref="0x7edd2470"/>
        <function-ref name="clr" scoped="" ref="0x7edd2550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7edc1010" loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7edc1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc11e8"/>
        <function-ref name="isInput" scoped="" ref="0x7edc12c8"/>
        <function-ref name="toggle" scoped="" ref="0x7edc13a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc1488"/>
        <function-ref name="get" scoped="" ref="0x7edc1568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc1648"/>
        <function-ref name="set" scoped="" ref="0x7edc1728"/>
        <function-ref name="clr" scoped="" ref="0x7edc1808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7ed93428" loc="93:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7ed93428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed93600"/>
        <function-ref name="isInput" scoped="" ref="0x7ed936e0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed937c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed938a0"/>
        <function-ref name="get" scoped="" ref="0x7ed93980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed93a60"/>
        <function-ref name="set" scoped="" ref="0x7ed93b40"/>
        <function-ref name="clr" scoped="" ref="0x7ed93c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7edc0348" loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7edc0348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc0520"/>
        <function-ref name="isInput" scoped="" ref="0x7edc0600"/>
        <function-ref name="toggle" scoped="" ref="0x7edc06e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc07c0"/>
        <function-ref name="get" scoped="" ref="0x7edc08a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc0980"/>
        <function-ref name="set" scoped="" ref="0x7edc0a60"/>
        <function-ref name="clr" scoped="" ref="0x7edc0b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7edd19d8" loc="62:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7edd19d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edd1bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7edd1c90"/>
        <function-ref name="toggle" scoped="" ref="0x7edd1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7edd1e50"/>
        <function-ref name="get" scoped="" ref="0x7edd0010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edd00f0"/>
        <function-ref name="set" scoped="" ref="0x7edd01d0"/>
        <function-ref name="clr" scoped="" ref="0x7edd02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7ee017a8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7ee017a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee01980"/>
        <function-ref name="isInput" scoped="" ref="0x7ee01a60"/>
        <function-ref name="toggle" scoped="" ref="0x7ee01b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee01c20"/>
        <function-ref name="get" scoped="" ref="0x7ee01d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee01de0"/>
        <function-ref name="set" scoped="" ref="0x7ee01ec0"/>
        <function-ref name="clr" scoped="" ref="0x7ee00010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7ede2878" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7ede2878"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ede2a50"/>
        <function-ref name="isInput" scoped="" ref="0x7ede2b30"/>
        <function-ref name="toggle" scoped="" ref="0x7ede2c10"/>
        <function-ref name="isOutput" scoped="" ref="0x7ede2cf0"/>
        <function-ref name="get" scoped="" ref="0x7ede2dd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ede2eb0"/>
        <function-ref name="set" scoped="" ref="0x7ede1010"/>
        <function-ref name="clr" scoped="" ref="0x7ede10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7ed117f0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7ed117f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed119c8"/>
        <function-ref name="isInput" scoped="" ref="0x7ed11aa8"/>
        <function-ref name="toggle" scoped="" ref="0x7ed11b88"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed11c68"/>
        <function-ref name="get" scoped="" ref="0x7ed11d48"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed11e28"/>
        <function-ref name="set" scoped="" ref="0x7ed11f08"/>
        <function-ref name="clr" scoped="" ref="0x7ed10010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7ed044f0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7ed044f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed046c8"/>
        <function-ref name="isInput" scoped="" ref="0x7ed047a8"/>
        <function-ref name="toggle" scoped="" ref="0x7ed04888"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed04968"/>
        <function-ref name="get" scoped="" ref="0x7ed04a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed04b28"/>
        <function-ref name="set" scoped="" ref="0x7ed04c08"/>
        <function-ref name="clr" scoped="" ref="0x7ed04ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7ed12518" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7ed12518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed126f0"/>
        <function-ref name="isInput" scoped="" ref="0x7ed127d0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed128b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed12990"/>
        <function-ref name="get" scoped="" ref="0x7ed12a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed12b50"/>
        <function-ref name="set" scoped="" ref="0x7ed12c30"/>
        <function-ref name="clr" scoped="" ref="0x7ed12d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7ed10170" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7ed10170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed10348"/>
        <function-ref name="isInput" scoped="" ref="0x7ed10428"/>
        <function-ref name="toggle" scoped="" ref="0x7ed10508"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed105e8"/>
        <function-ref name="get" scoped="" ref="0x7ed106c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed107a8"/>
        <function-ref name="set" scoped="" ref="0x7ed10888"/>
        <function-ref name="clr" scoped="" ref="0x7ed10968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7ed04e48" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7ed04e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed03050"/>
        <function-ref name="isInput" scoped="" ref="0x7ed03130"/>
        <function-ref name="toggle" scoped="" ref="0x7ed03210"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed032f0"/>
        <function-ref name="get" scoped="" ref="0x7ed033d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed034b0"/>
        <function-ref name="set" scoped="" ref="0x7ed03590"/>
        <function-ref name="clr" scoped="" ref="0x7ed03670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7ed12e70" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7ed12e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed11070"/>
        <function-ref name="isInput" scoped="" ref="0x7ed11150"/>
        <function-ref name="toggle" scoped="" ref="0x7ed11230"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed11310"/>
        <function-ref name="get" scoped="" ref="0x7ed113f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed114d0"/>
        <function-ref name="set" scoped="" ref="0x7ed115b0"/>
        <function-ref name="clr" scoped="" ref="0x7ed11690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7ed10ac8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7ed10ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed10ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7ed10d80"/>
        <function-ref name="toggle" scoped="" ref="0x7ed10e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed04010"/>
        <function-ref name="get" scoped="" ref="0x7ed040f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed041d0"/>
        <function-ref name="set" scoped="" ref="0x7ed042b0"/>
        <function-ref name="clr" scoped="" ref="0x7ed04390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7ed037d0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7ed037d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed039a8"/>
        <function-ref name="isInput" scoped="" ref="0x7ed03a88"/>
        <function-ref name="toggle" scoped="" ref="0x7ed03b68"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed03c48"/>
        <function-ref name="get" scoped="" ref="0x7ed03d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed03e08"/>
        <function-ref name="set" scoped="" ref="0x7ed03ee8"/>
        <function-ref name="clr" scoped="" ref="0x7ed02010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dc135c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dc135c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dc13798"/>
        <function-ref name="isInput" scoped="" ref="0x7dc13878"/>
        <function-ref name="toggle" scoped="" ref="0x7dc13958"/>
        <function-ref name="isOutput" scoped="" ref="0x7dc13a38"/>
        <function-ref name="get" scoped="" ref="0x7dc13b18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dc13bf8"/>
        <function-ref name="set" scoped="" ref="0x7dc13cd8"/>
        <function-ref name="clr" scoped="" ref="0x7dc13db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dc11010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dc11010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dc111e8"/>
        <function-ref name="isInput" scoped="" ref="0x7dc112c8"/>
        <function-ref name="toggle" scoped="" ref="0x7dc113a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7dc11488"/>
        <function-ref name="get" scoped="" ref="0x7dc11568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dc11648"/>
        <function-ref name="set" scoped="" ref="0x7dc11728"/>
        <function-ref name="clr" scoped="" ref="0x7dc11808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dc109e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dc109e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dc10bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7dc10ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7dc10d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7dc10e60"/>
        <function-ref name="get" scoped="" ref="0x7dbe8010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dbe80f0"/>
        <function-ref name="set" scoped="" ref="0x7dbe81d0"/>
        <function-ref name="clr" scoped="" ref="0x7dbe82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dbe7538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dbe7538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dbe7710"/>
        <function-ref name="isInput" scoped="" ref="0x7dbe77f0"/>
        <function-ref name="toggle" scoped="" ref="0x7dbe78d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dbe79b0"/>
        <function-ref name="get" scoped="" ref="0x7dbe7a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dbe7b70"/>
        <function-ref name="set" scoped="" ref="0x7dbe7c50"/>
        <function-ref name="clr" scoped="" ref="0x7dbe7d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dbe5010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dbe5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dbe51e8"/>
        <function-ref name="isInput" scoped="" ref="0x7dbe52c8"/>
        <function-ref name="toggle" scoped="" ref="0x7dbe53a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7dbe5488"/>
        <function-ref name="get" scoped="" ref="0x7dbe5568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dbe5648"/>
        <function-ref name="set" scoped="" ref="0x7dbe5728"/>
        <function-ref name="clr" scoped="" ref="0x7dbe5808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dbe49e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dbe49e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dbe4bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7dbe4ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7dbe4d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7dbe4e60"/>
        <function-ref name="get" scoped="" ref="0x7dbe3010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dbe30f0"/>
        <function-ref name="set" scoped="" ref="0x7dbe31d0"/>
        <function-ref name="clr" scoped="" ref="0x7dbe32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dbe2538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dbe2538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dbe2710"/>
        <function-ref name="isInput" scoped="" ref="0x7dbe27f0"/>
        <function-ref name="toggle" scoped="" ref="0x7dbe28d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dbe29b0"/>
        <function-ref name="get" scoped="" ref="0x7dbe2a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dbe2b70"/>
        <function-ref name="set" scoped="" ref="0x7dbe2c50"/>
        <function-ref name="clr" scoped="" ref="0x7dbe2d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dbe0010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dbe0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dbe01e8"/>
        <function-ref name="isInput" scoped="" ref="0x7dbe02c8"/>
        <function-ref name="toggle" scoped="" ref="0x7dbe03a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7dbe0488"/>
        <function-ref name="get" scoped="" ref="0x7dbe0568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dbe0648"/>
        <function-ref name="set" scoped="" ref="0x7dbe0728"/>
        <function-ref name="clr" scoped="" ref="0x7dbe0808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7ecf4f28" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7ecf4f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecf2110"/>
        <function-ref name="isInput" scoped="" ref="0x7ecf21f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ecf22d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecf23b0"/>
        <function-ref name="get" scoped="" ref="0x7ecf2490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecf2570"/>
        <function-ref name="set" scoped="" ref="0x7ecf2650"/>
        <function-ref name="clr" scoped="" ref="0x7ecf2730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7ecf1ba8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7ecf1ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecf1d80"/>
        <function-ref name="isInput" scoped="" ref="0x7ecf1e60"/>
        <function-ref name="toggle" scoped="" ref="0x7ecf0010"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecf00f0"/>
        <function-ref name="get" scoped="" ref="0x7ecf01d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecf02b0"/>
        <function-ref name="set" scoped="" ref="0x7ecf0390"/>
        <function-ref name="clr" scoped="" ref="0x7ecf0470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7ed00bc0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7ed00bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed00d98"/>
        <function-ref name="isInput" scoped="" ref="0x7ed00e78"/>
        <function-ref name="toggle" scoped="" ref="0x7ecf4010"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecf40f0"/>
        <function-ref name="get" scoped="" ref="0x7ecf41d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecf42b0"/>
        <function-ref name="set" scoped="" ref="0x7ecf4390"/>
        <function-ref name="clr" scoped="" ref="0x7ecf4470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7ecf2890" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7ecf2890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecf2a68"/>
        <function-ref name="isInput" scoped="" ref="0x7ecf2b48"/>
        <function-ref name="toggle" scoped="" ref="0x7ecf2c28"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecf2d08"/>
        <function-ref name="get" scoped="" ref="0x7ecf2de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecf2ec8"/>
        <function-ref name="set" scoped="" ref="0x7ecf1010"/>
        <function-ref name="clr" scoped="" ref="0x7ecf10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7ecf05d0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7ecf05d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecf07a8"/>
        <function-ref name="isInput" scoped="" ref="0x7ecf0888"/>
        <function-ref name="toggle" scoped="" ref="0x7ecf0968"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecf0a48"/>
        <function-ref name="get" scoped="" ref="0x7ecf0b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecf0c08"/>
        <function-ref name="set" scoped="" ref="0x7ecf0ce8"/>
        <function-ref name="clr" scoped="" ref="0x7ecf0dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7ecf45d0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7ecf45d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecf47a8"/>
        <function-ref name="isInput" scoped="" ref="0x7ecf4888"/>
        <function-ref name="toggle" scoped="" ref="0x7ecf4968"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecf4a48"/>
        <function-ref name="get" scoped="" ref="0x7ecf4b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecf4c08"/>
        <function-ref name="set" scoped="" ref="0x7ecf4ce8"/>
        <function-ref name="clr" scoped="" ref="0x7ecf4dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7ecf1250" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7ecf1250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecf1428"/>
        <function-ref name="isInput" scoped="" ref="0x7ecf1508"/>
        <function-ref name="toggle" scoped="" ref="0x7ecf15e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecf16c8"/>
        <function-ref name="get" scoped="" ref="0x7ecf17a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecf1888"/>
        <function-ref name="set" scoped="" ref="0x7ecf1968"/>
        <function-ref name="clr" scoped="" ref="0x7ecf1a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7ecf0f28" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7ecf0f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ece4110"/>
        <function-ref name="isInput" scoped="" ref="0x7ece41f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ece42d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ece43b0"/>
        <function-ref name="get" scoped="" ref="0x7ece4490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ece4570"/>
        <function-ref name="set" scoped="" ref="0x7ece4650"/>
        <function-ref name="clr" scoped="" ref="0x7ece4730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dbb5d08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dbb5d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dbb5ee0"/>
        <function-ref name="isInput" scoped="" ref="0x7dbb2010"/>
        <function-ref name="toggle" scoped="" ref="0x7dbb20f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dbb21d0"/>
        <function-ref name="get" scoped="" ref="0x7dbb22b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dbb2390"/>
        <function-ref name="set" scoped="" ref="0x7dbb2470"/>
        <function-ref name="clr" scoped="" ref="0x7dbb2550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dbb1718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dbb1718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dbb18f0"/>
        <function-ref name="isInput" scoped="" ref="0x7dbb19d0"/>
        <function-ref name="toggle" scoped="" ref="0x7dbb1ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dbb1b90"/>
        <function-ref name="get" scoped="" ref="0x7dbb1c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dbb1d50"/>
        <function-ref name="set" scoped="" ref="0x7dbb1e30"/>
        <function-ref name="clr" scoped="" ref="0x7dbb1f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dba90f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dba90f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dba92d0"/>
        <function-ref name="isInput" scoped="" ref="0x7dba93b0"/>
        <function-ref name="toggle" scoped="" ref="0x7dba9490"/>
        <function-ref name="isOutput" scoped="" ref="0x7dba9570"/>
        <function-ref name="get" scoped="" ref="0x7dba9650"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dba9730"/>
        <function-ref name="set" scoped="" ref="0x7dba9810"/>
        <function-ref name="clr" scoped="" ref="0x7dba98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dba8ac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dba8ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dba8ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7dba8d80"/>
        <function-ref name="toggle" scoped="" ref="0x7dba8e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7dba7010"/>
        <function-ref name="get" scoped="" ref="0x7dba70f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dba71d0"/>
        <function-ref name="set" scoped="" ref="0x7dba72b0"/>
        <function-ref name="clr" scoped="" ref="0x7dba7390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dba6570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dba6570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dba6748"/>
        <function-ref name="isInput" scoped="" ref="0x7dba6828"/>
        <function-ref name="toggle" scoped="" ref="0x7dba6908"/>
        <function-ref name="isOutput" scoped="" ref="0x7dba69e8"/>
        <function-ref name="get" scoped="" ref="0x7dba6ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dba6ba8"/>
        <function-ref name="set" scoped="" ref="0x7dba6c88"/>
        <function-ref name="clr" scoped="" ref="0x7dba6d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dba4010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dba4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dba41e8"/>
        <function-ref name="isInput" scoped="" ref="0x7dba42c8"/>
        <function-ref name="toggle" scoped="" ref="0x7dba43a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7dba4488"/>
        <function-ref name="get" scoped="" ref="0x7dba4568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dba4648"/>
        <function-ref name="set" scoped="" ref="0x7dba4728"/>
        <function-ref name="clr" scoped="" ref="0x7dba4808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dba39e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dba39e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dba3bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7dba3ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7dba3d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7dba3e60"/>
        <function-ref name="get" scoped="" ref="0x7dba2010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dba20f0"/>
        <function-ref name="set" scoped="" ref="0x7dba21d0"/>
        <function-ref name="clr" scoped="" ref="0x7dba22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dba1538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dba1538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dba1710"/>
        <function-ref name="isInput" scoped="" ref="0x7dba17f0"/>
        <function-ref name="toggle" scoped="" ref="0x7dba18d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dba19b0"/>
        <function-ref name="get" scoped="" ref="0x7dba1a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dba1b70"/>
        <function-ref name="set" scoped="" ref="0x7dba1c50"/>
        <function-ref name="clr" scoped="" ref="0x7dba1d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7ece05d0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7ece05d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ece07a8"/>
        <function-ref name="isInput" scoped="" ref="0x7ece0888"/>
        <function-ref name="toggle" scoped="" ref="0x7ece0968"/>
        <function-ref name="isOutput" scoped="" ref="0x7ece0a48"/>
        <function-ref name="get" scoped="" ref="0x7ece0b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ece0c08"/>
        <function-ref name="set" scoped="" ref="0x7ece0ce8"/>
        <function-ref name="clr" scoped="" ref="0x7ece0dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7ecd3250" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7ecd3250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecd3428"/>
        <function-ref name="isInput" scoped="" ref="0x7ecd3508"/>
        <function-ref name="toggle" scoped="" ref="0x7ecd35e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecd36c8"/>
        <function-ref name="get" scoped="" ref="0x7ecd37a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecd3888"/>
        <function-ref name="set" scoped="" ref="0x7ecd3968"/>
        <function-ref name="clr" scoped="" ref="0x7ecd3a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7ece12a0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7ece12a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ece1478"/>
        <function-ref name="isInput" scoped="" ref="0x7ece1558"/>
        <function-ref name="toggle" scoped="" ref="0x7ece1638"/>
        <function-ref name="isOutput" scoped="" ref="0x7ece1718"/>
        <function-ref name="get" scoped="" ref="0x7ece17f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ece18d8"/>
        <function-ref name="set" scoped="" ref="0x7ece19b8"/>
        <function-ref name="clr" scoped="" ref="0x7ece1a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7ece0f28" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7ece0f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecd4110"/>
        <function-ref name="isInput" scoped="" ref="0x7ecd41f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ecd42d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecd43b0"/>
        <function-ref name="get" scoped="" ref="0x7ecd4490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecd4570"/>
        <function-ref name="set" scoped="" ref="0x7ecd4650"/>
        <function-ref name="clr" scoped="" ref="0x7ecd4730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7ecd3ba8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7ecd3ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecd3d80"/>
        <function-ref name="isInput" scoped="" ref="0x7ecd3e60"/>
        <function-ref name="toggle" scoped="" ref="0x7ecd1010"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecd10f0"/>
        <function-ref name="get" scoped="" ref="0x7ecd11d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecd12b0"/>
        <function-ref name="set" scoped="" ref="0x7ecd1390"/>
        <function-ref name="clr" scoped="" ref="0x7ecd1470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7ece1bf8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7ece1bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ece1dd0"/>
        <function-ref name="isInput" scoped="" ref="0x7ece1eb0"/>
        <function-ref name="toggle" scoped="" ref="0x7ece0010"/>
        <function-ref name="isOutput" scoped="" ref="0x7ece00f0"/>
        <function-ref name="get" scoped="" ref="0x7ece01d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ece02b0"/>
        <function-ref name="set" scoped="" ref="0x7ece0390"/>
        <function-ref name="clr" scoped="" ref="0x7ece0470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7ecd4890" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7ecd4890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecd4a68"/>
        <function-ref name="isInput" scoped="" ref="0x7ecd4b48"/>
        <function-ref name="toggle" scoped="" ref="0x7ecd4c28"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecd4d08"/>
        <function-ref name="get" scoped="" ref="0x7ecd4de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecd4ec8"/>
        <function-ref name="set" scoped="" ref="0x7ecd3010"/>
        <function-ref name="clr" scoped="" ref="0x7ecd30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7ecd15d0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7ecd15d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecd17a8"/>
        <function-ref name="isInput" scoped="" ref="0x7ecd1888"/>
        <function-ref name="toggle" scoped="" ref="0x7ecd1968"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecd1a48"/>
        <function-ref name="get" scoped="" ref="0x7ecd1b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecd1c08"/>
        <function-ref name="set" scoped="" ref="0x7ecd1ce8"/>
        <function-ref name="clr" scoped="" ref="0x7ecd1dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7db722b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7db722b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7db72488"/>
        <function-ref name="isInput" scoped="" ref="0x7db72568"/>
        <function-ref name="toggle" scoped="" ref="0x7db72648"/>
        <function-ref name="isOutput" scoped="" ref="0x7db72728"/>
        <function-ref name="get" scoped="" ref="0x7db72808"/>
        <function-ref name="makeOutput" scoped="" ref="0x7db728e8"/>
        <function-ref name="set" scoped="" ref="0x7db729c8"/>
        <function-ref name="clr" scoped="" ref="0x7db72aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7db71c78" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7db71c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7db71e50"/>
        <function-ref name="isInput" scoped="" ref="0x7db70010"/>
        <function-ref name="toggle" scoped="" ref="0x7db700f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7db701d0"/>
        <function-ref name="get" scoped="" ref="0x7db702b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7db70390"/>
        <function-ref name="set" scoped="" ref="0x7db70470"/>
        <function-ref name="clr" scoped="" ref="0x7db70550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7db6a718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7db6a718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7db6a8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7db6a9d0"/>
        <function-ref name="toggle" scoped="" ref="0x7db6aab0"/>
        <function-ref name="isOutput" scoped="" ref="0x7db6ab90"/>
        <function-ref name="get" scoped="" ref="0x7db6ac70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7db6ad50"/>
        <function-ref name="set" scoped="" ref="0x7db6ae30"/>
        <function-ref name="clr" scoped="" ref="0x7db6af10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7db680f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7db680f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7db682d0"/>
        <function-ref name="isInput" scoped="" ref="0x7db683b0"/>
        <function-ref name="toggle" scoped="" ref="0x7db68490"/>
        <function-ref name="isOutput" scoped="" ref="0x7db68570"/>
        <function-ref name="get" scoped="" ref="0x7db68650"/>
        <function-ref name="makeOutput" scoped="" ref="0x7db68730"/>
        <function-ref name="set" scoped="" ref="0x7db68810"/>
        <function-ref name="clr" scoped="" ref="0x7db688f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7db67ac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7db67ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7db67ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7db67d80"/>
        <function-ref name="toggle" scoped="" ref="0x7db67e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7db66010"/>
        <function-ref name="get" scoped="" ref="0x7db660f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7db661d0"/>
        <function-ref name="set" scoped="" ref="0x7db662b0"/>
        <function-ref name="clr" scoped="" ref="0x7db66390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7db65570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7db65570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7db65748"/>
        <function-ref name="isInput" scoped="" ref="0x7db65828"/>
        <function-ref name="toggle" scoped="" ref="0x7db65908"/>
        <function-ref name="isOutput" scoped="" ref="0x7db659e8"/>
        <function-ref name="get" scoped="" ref="0x7db65ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7db65ba8"/>
        <function-ref name="set" scoped="" ref="0x7db65c88"/>
        <function-ref name="clr" scoped="" ref="0x7db65d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7db63010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7db63010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7db631e8"/>
        <function-ref name="isInput" scoped="" ref="0x7db632c8"/>
        <function-ref name="toggle" scoped="" ref="0x7db633a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7db63488"/>
        <function-ref name="get" scoped="" ref="0x7db63568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7db63648"/>
        <function-ref name="set" scoped="" ref="0x7db63728"/>
        <function-ref name="clr" scoped="" ref="0x7db63808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7db629e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7db629e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7db62bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7db62ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7db62d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7db62e60"/>
        <function-ref name="get" scoped="" ref="0x7db61010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7db610f0"/>
        <function-ref name="set" scoped="" ref="0x7db611d0"/>
        <function-ref name="clr" scoped="" ref="0x7db612b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7ecc2c88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7ecc2c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecc2e60"/>
        <function-ref name="isInput" scoped="" ref="0x7ecc1010"/>
        <function-ref name="toggle" scoped="" ref="0x7ecc10f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecc11d0"/>
        <function-ref name="get" scoped="" ref="0x7ecc12b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecc1390"/>
        <function-ref name="set" scoped="" ref="0x7ecc1470"/>
        <function-ref name="clr" scoped="" ref="0x7ecc1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7ecc0988" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7ecc0988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecc0b60"/>
        <function-ref name="isInput" scoped="" ref="0x7ecc0c40"/>
        <function-ref name="toggle" scoped="" ref="0x7ecc0d20"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecc0e00"/>
        <function-ref name="get" scoped="" ref="0x7ecc0ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecb4010"/>
        <function-ref name="set" scoped="" ref="0x7ecb40f0"/>
        <function-ref name="clr" scoped="" ref="0x7ecb41d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7ecc39c0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7ecc39c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecc3b98"/>
        <function-ref name="isInput" scoped="" ref="0x7ecc3c78"/>
        <function-ref name="toggle" scoped="" ref="0x7ecc3d58"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecc3e38"/>
        <function-ref name="get" scoped="" ref="0x7ecc3f18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecc2010"/>
        <function-ref name="set" scoped="" ref="0x7ecc20f0"/>
        <function-ref name="clr" scoped="" ref="0x7ecc21d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7ecc16b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7ecc16b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecc1888"/>
        <function-ref name="isInput" scoped="" ref="0x7ecc1968"/>
        <function-ref name="toggle" scoped="" ref="0x7ecc1a48"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecc1b28"/>
        <function-ref name="get" scoped="" ref="0x7ecc1c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecc1ce8"/>
        <function-ref name="set" scoped="" ref="0x7ecc1dc8"/>
        <function-ref name="clr" scoped="" ref="0x7ecc1ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7ecb4330" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7ecb4330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecb4508"/>
        <function-ref name="isInput" scoped="" ref="0x7ecb45e8"/>
        <function-ref name="toggle" scoped="" ref="0x7ecb46c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecb47a8"/>
        <function-ref name="get" scoped="" ref="0x7ecb4888"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecb4968"/>
        <function-ref name="set" scoped="" ref="0x7ecb4a48"/>
        <function-ref name="clr" scoped="" ref="0x7ecb4b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7ecc2330" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7ecc2330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecc2508"/>
        <function-ref name="isInput" scoped="" ref="0x7ecc25e8"/>
        <function-ref name="toggle" scoped="" ref="0x7ecc26c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecc27a8"/>
        <function-ref name="get" scoped="" ref="0x7ecc2888"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecc2968"/>
        <function-ref name="set" scoped="" ref="0x7ecc2a48"/>
        <function-ref name="clr" scoped="" ref="0x7ecc2b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7ecc0030" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7ecc0030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecc0208"/>
        <function-ref name="isInput" scoped="" ref="0x7ecc02e8"/>
        <function-ref name="toggle" scoped="" ref="0x7ecc03c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecc04a8"/>
        <function-ref name="get" scoped="" ref="0x7ecc0588"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecc0668"/>
        <function-ref name="set" scoped="" ref="0x7ecc0748"/>
        <function-ref name="clr" scoped="" ref="0x7ecc0828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7ecb4c88" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7ecb4c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecb4e60"/>
        <function-ref name="isInput" scoped="" ref="0x7ecb3010"/>
        <function-ref name="toggle" scoped="" ref="0x7ecb30f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecb31d0"/>
        <function-ref name="get" scoped="" ref="0x7ecb32b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecb3390"/>
        <function-ref name="set" scoped="" ref="0x7ecb3470"/>
        <function-ref name="clr" scoped="" ref="0x7ecb3550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7db357f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7db357f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7db359d0"/>
        <function-ref name="isInput" scoped="" ref="0x7db35ab0"/>
        <function-ref name="toggle" scoped="" ref="0x7db35b90"/>
        <function-ref name="isOutput" scoped="" ref="0x7db35c70"/>
        <function-ref name="get" scoped="" ref="0x7db35d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7db35e30"/>
        <function-ref name="set" scoped="" ref="0x7db35f10"/>
        <function-ref name="clr" scoped="" ref="0x7db34010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7db33228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7db33228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7db33400"/>
        <function-ref name="isInput" scoped="" ref="0x7db334e0"/>
        <function-ref name="toggle" scoped="" ref="0x7db335c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7db336a0"/>
        <function-ref name="get" scoped="" ref="0x7db33780"/>
        <function-ref name="makeOutput" scoped="" ref="0x7db33860"/>
        <function-ref name="set" scoped="" ref="0x7db33940"/>
        <function-ref name="clr" scoped="" ref="0x7db33a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7db32c08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7db32c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7db32de0"/>
        <function-ref name="isInput" scoped="" ref="0x7db32ec0"/>
        <function-ref name="toggle" scoped="" ref="0x7db30010"/>
        <function-ref name="isOutput" scoped="" ref="0x7db300f0"/>
        <function-ref name="get" scoped="" ref="0x7db301d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7db302b0"/>
        <function-ref name="set" scoped="" ref="0x7db30390"/>
        <function-ref name="clr" scoped="" ref="0x7db30470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7db2a6c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7db2a6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7db2a898"/>
        <function-ref name="isInput" scoped="" ref="0x7db2a978"/>
        <function-ref name="toggle" scoped="" ref="0x7db2aa58"/>
        <function-ref name="isOutput" scoped="" ref="0x7db2ab38"/>
        <function-ref name="get" scoped="" ref="0x7db2ac18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7db2acf8"/>
        <function-ref name="set" scoped="" ref="0x7db2add8"/>
        <function-ref name="clr" scoped="" ref="0x7db2aeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7db280b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7db280b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7db28288"/>
        <function-ref name="isInput" scoped="" ref="0x7db28368"/>
        <function-ref name="toggle" scoped="" ref="0x7db28448"/>
        <function-ref name="isOutput" scoped="" ref="0x7db28528"/>
        <function-ref name="get" scoped="" ref="0x7db28608"/>
        <function-ref name="makeOutput" scoped="" ref="0x7db286e8"/>
        <function-ref name="set" scoped="" ref="0x7db287c8"/>
        <function-ref name="clr" scoped="" ref="0x7db288a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7db27a88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7db27a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7db27c60"/>
        <function-ref name="isInput" scoped="" ref="0x7db27d40"/>
        <function-ref name="toggle" scoped="" ref="0x7db27e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7db27f00"/>
        <function-ref name="get" scoped="" ref="0x7db26010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7db260f0"/>
        <function-ref name="set" scoped="" ref="0x7db261d0"/>
        <function-ref name="clr" scoped="" ref="0x7db262b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7db25538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7db25538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7db25710"/>
        <function-ref name="isInput" scoped="" ref="0x7db257f0"/>
        <function-ref name="toggle" scoped="" ref="0x7db258d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7db259b0"/>
        <function-ref name="get" scoped="" ref="0x7db25a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7db25b70"/>
        <function-ref name="set" scoped="" ref="0x7db25c50"/>
        <function-ref name="clr" scoped="" ref="0x7db25d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7db23010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7db23010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7db231e8"/>
        <function-ref name="isInput" scoped="" ref="0x7db232c8"/>
        <function-ref name="toggle" scoped="" ref="0x7db233a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7db23488"/>
        <function-ref name="get" scoped="" ref="0x7db23568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7db23648"/>
        <function-ref name="set" scoped="" ref="0x7db23728"/>
        <function-ref name="clr" scoped="" ref="0x7db23808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7eca3410" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7eca3410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eca35e8"/>
        <function-ref name="isInput" scoped="" ref="0x7eca36c8"/>
        <function-ref name="toggle" scoped="" ref="0x7eca37a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7eca3888"/>
        <function-ref name="get" scoped="" ref="0x7eca3968"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eca3a48"/>
        <function-ref name="set" scoped="" ref="0x7eca3b28"/>
        <function-ref name="clr" scoped="" ref="0x7eca3c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7eca1170" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7eca1170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eca1348"/>
        <function-ref name="isInput" scoped="" ref="0x7eca1428"/>
        <function-ref name="toggle" scoped="" ref="0x7eca1508"/>
        <function-ref name="isOutput" scoped="" ref="0x7eca15e8"/>
        <function-ref name="get" scoped="" ref="0x7eca16c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eca17a8"/>
        <function-ref name="set" scoped="" ref="0x7eca1888"/>
        <function-ref name="clr" scoped="" ref="0x7eca1968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7eca40c0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7eca40c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eca4298"/>
        <function-ref name="isInput" scoped="" ref="0x7eca4378"/>
        <function-ref name="toggle" scoped="" ref="0x7eca4458"/>
        <function-ref name="isOutput" scoped="" ref="0x7eca4538"/>
        <function-ref name="get" scoped="" ref="0x7eca4618"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eca46f8"/>
        <function-ref name="set" scoped="" ref="0x7eca47d8"/>
        <function-ref name="clr" scoped="" ref="0x7eca48b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7eca3d68" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7eca3d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eca2010"/>
        <function-ref name="isInput" scoped="" ref="0x7eca20f0"/>
        <function-ref name="toggle" scoped="" ref="0x7eca21d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eca22b0"/>
        <function-ref name="get" scoped="" ref="0x7eca2390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eca2470"/>
        <function-ref name="set" scoped="" ref="0x7eca2550"/>
        <function-ref name="clr" scoped="" ref="0x7eca2630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7eca1ac8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7eca1ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eca1ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7eca1d80"/>
        <function-ref name="toggle" scoped="" ref="0x7eca1e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7eca0010"/>
        <function-ref name="get" scoped="" ref="0x7eca00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eca01d0"/>
        <function-ref name="set" scoped="" ref="0x7eca02b0"/>
        <function-ref name="clr" scoped="" ref="0x7eca0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7eca4a18" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7eca4a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eca4bf0"/>
        <function-ref name="isInput" scoped="" ref="0x7eca4cd0"/>
        <function-ref name="toggle" scoped="" ref="0x7eca4db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eca4e90"/>
        <function-ref name="get" scoped="" ref="0x7eca3010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eca30f0"/>
        <function-ref name="set" scoped="" ref="0x7eca31d0"/>
        <function-ref name="clr" scoped="" ref="0x7eca32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7eca2790" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7eca2790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eca2968"/>
        <function-ref name="isInput" scoped="" ref="0x7eca2a48"/>
        <function-ref name="toggle" scoped="" ref="0x7eca2b28"/>
        <function-ref name="isOutput" scoped="" ref="0x7eca2c08"/>
        <function-ref name="get" scoped="" ref="0x7eca2ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eca2dc8"/>
        <function-ref name="set" scoped="" ref="0x7eca2ea8"/>
        <function-ref name="clr" scoped="" ref="0x7eca1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7eca04f0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7eca04f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eca06c8"/>
        <function-ref name="isInput" scoped="" ref="0x7eca07a8"/>
        <function-ref name="toggle" scoped="" ref="0x7eca0888"/>
        <function-ref name="isOutput" scoped="" ref="0x7eca0968"/>
        <function-ref name="get" scoped="" ref="0x7eca0a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eca0b28"/>
        <function-ref name="set" scoped="" ref="0x7eca0c08"/>
        <function-ref name="clr" scoped="" ref="0x7eca0ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7daf9d08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7daf9d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7daf9ee0"/>
        <function-ref name="isInput" scoped="" ref="0x7daf6010"/>
        <function-ref name="toggle" scoped="" ref="0x7daf60f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7daf61d0"/>
        <function-ref name="get" scoped="" ref="0x7daf62b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7daf6390"/>
        <function-ref name="set" scoped="" ref="0x7daf6470"/>
        <function-ref name="clr" scoped="" ref="0x7daf6550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7daf5718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7daf5718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7daf58f0"/>
        <function-ref name="isInput" scoped="" ref="0x7daf59d0"/>
        <function-ref name="toggle" scoped="" ref="0x7daf5ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x7daf5b90"/>
        <function-ref name="get" scoped="" ref="0x7daf5c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7daf5d50"/>
        <function-ref name="set" scoped="" ref="0x7daf5e30"/>
        <function-ref name="clr" scoped="" ref="0x7daf5f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7daf30f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7daf30f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7daf32d0"/>
        <function-ref name="isInput" scoped="" ref="0x7daf33b0"/>
        <function-ref name="toggle" scoped="" ref="0x7daf3490"/>
        <function-ref name="isOutput" scoped="" ref="0x7daf3570"/>
        <function-ref name="get" scoped="" ref="0x7daf3650"/>
        <function-ref name="makeOutput" scoped="" ref="0x7daf3730"/>
        <function-ref name="set" scoped="" ref="0x7daf3810"/>
        <function-ref name="clr" scoped="" ref="0x7daf38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7daf2ac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7daf2ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7daf2ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7daf2d80"/>
        <function-ref name="toggle" scoped="" ref="0x7daf2e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7daf1010"/>
        <function-ref name="get" scoped="" ref="0x7daf10f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7daf11d0"/>
        <function-ref name="set" scoped="" ref="0x7daf12b0"/>
        <function-ref name="clr" scoped="" ref="0x7daf1390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7daf0570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7daf0570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7daf0748"/>
        <function-ref name="isInput" scoped="" ref="0x7daf0828"/>
        <function-ref name="toggle" scoped="" ref="0x7daf0908"/>
        <function-ref name="isOutput" scoped="" ref="0x7daf09e8"/>
        <function-ref name="get" scoped="" ref="0x7daf0ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7daf0ba8"/>
        <function-ref name="set" scoped="" ref="0x7daf0c88"/>
        <function-ref name="clr" scoped="" ref="0x7daf0d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7daea010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7daea010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7daea1e8"/>
        <function-ref name="isInput" scoped="" ref="0x7daea2c8"/>
        <function-ref name="toggle" scoped="" ref="0x7daea3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7daea488"/>
        <function-ref name="get" scoped="" ref="0x7daea568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7daea648"/>
        <function-ref name="set" scoped="" ref="0x7daea728"/>
        <function-ref name="clr" scoped="" ref="0x7daea808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dae99e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dae99e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dae9bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7dae9ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7dae9d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7dae9e60"/>
        <function-ref name="get" scoped="" ref="0x7dae8010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dae80f0"/>
        <function-ref name="set" scoped="" ref="0x7dae81d0"/>
        <function-ref name="clr" scoped="" ref="0x7dae82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dae7538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dae7538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dae7710"/>
        <function-ref name="isInput" scoped="" ref="0x7dae77f0"/>
        <function-ref name="toggle" scoped="" ref="0x7dae78d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dae79b0"/>
        <function-ref name="get" scoped="" ref="0x7dae7a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dae7b70"/>
        <function-ref name="set" scoped="" ref="0x7dae7c50"/>
        <function-ref name="clr" scoped="" ref="0x7dae7d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7ec909e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7ec909e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec90bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec90ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec90d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec90e60"/>
        <function-ref name="get" scoped="" ref="0x7ec84010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec840f0"/>
        <function-ref name="set" scoped="" ref="0x7ec841d0"/>
        <function-ref name="clr" scoped="" ref="0x7ec842b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7ec83790" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7ec83790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec83968"/>
        <function-ref name="isInput" scoped="" ref="0x7ec83a48"/>
        <function-ref name="toggle" scoped="" ref="0x7ec83b28"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec83c08"/>
        <function-ref name="get" scoped="" ref="0x7ec83ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec83dc8"/>
        <function-ref name="set" scoped="" ref="0x7ec83ea8"/>
        <function-ref name="clr" scoped="" ref="0x7ec82010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7ec916f8" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7ec916f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec918d0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec919b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec91a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec91b70"/>
        <function-ref name="get" scoped="" ref="0x7ec91c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec91d30"/>
        <function-ref name="set" scoped="" ref="0x7ec91e10"/>
        <function-ref name="clr" scoped="" ref="0x7ec91ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7ec84410" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7ec84410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec845e8"/>
        <function-ref name="isInput" scoped="" ref="0x7ec846c8"/>
        <function-ref name="toggle" scoped="" ref="0x7ec847a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec84888"/>
        <function-ref name="get" scoped="" ref="0x7ec84968"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec84a48"/>
        <function-ref name="set" scoped="" ref="0x7ec84b28"/>
        <function-ref name="clr" scoped="" ref="0x7ec84c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7ec82170" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7ec82170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec82348"/>
        <function-ref name="isInput" scoped="" ref="0x7ec82428"/>
        <function-ref name="toggle" scoped="" ref="0x7ec82508"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec825e8"/>
        <function-ref name="get" scoped="" ref="0x7ec826c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec827a8"/>
        <function-ref name="set" scoped="" ref="0x7ec82888"/>
        <function-ref name="clr" scoped="" ref="0x7ec82968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7ec90090" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7ec90090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec90268"/>
        <function-ref name="isInput" scoped="" ref="0x7ec90348"/>
        <function-ref name="toggle" scoped="" ref="0x7ec90428"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec90508"/>
        <function-ref name="get" scoped="" ref="0x7ec905e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec906c8"/>
        <function-ref name="set" scoped="" ref="0x7ec907a8"/>
        <function-ref name="clr" scoped="" ref="0x7ec90888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7ec84d68" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7ec84d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec83010"/>
        <function-ref name="isInput" scoped="" ref="0x7ec830f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec831d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec832b0"/>
        <function-ref name="get" scoped="" ref="0x7ec83390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec83470"/>
        <function-ref name="set" scoped="" ref="0x7ec83550"/>
        <function-ref name="clr" scoped="" ref="0x7ec83630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7ec82ac8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7ec82ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec82ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec82d80"/>
        <function-ref name="toggle" scoped="" ref="0x7ec82e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec81010"/>
        <function-ref name="get" scoped="" ref="0x7ec810f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec811d0"/>
        <function-ref name="set" scoped="" ref="0x7ec812b0"/>
        <function-ref name="clr" scoped="" ref="0x7ec81390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7daba2b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7daba2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7daba488"/>
        <function-ref name="isInput" scoped="" ref="0x7daba568"/>
        <function-ref name="toggle" scoped="" ref="0x7daba648"/>
        <function-ref name="isOutput" scoped="" ref="0x7daba728"/>
        <function-ref name="get" scoped="" ref="0x7daba808"/>
        <function-ref name="makeOutput" scoped="" ref="0x7daba8e8"/>
        <function-ref name="set" scoped="" ref="0x7daba9c8"/>
        <function-ref name="clr" scoped="" ref="0x7dabaaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dab9c78" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dab9c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dab9e50"/>
        <function-ref name="isInput" scoped="" ref="0x7dab8010"/>
        <function-ref name="toggle" scoped="" ref="0x7dab80f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dab81d0"/>
        <function-ref name="get" scoped="" ref="0x7dab82b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dab8390"/>
        <function-ref name="set" scoped="" ref="0x7dab8470"/>
        <function-ref name="clr" scoped="" ref="0x7dab8550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dab7718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dab7718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dab78f0"/>
        <function-ref name="isInput" scoped="" ref="0x7dab79d0"/>
        <function-ref name="toggle" scoped="" ref="0x7dab7ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dab7b90"/>
        <function-ref name="get" scoped="" ref="0x7dab7c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dab7d50"/>
        <function-ref name="set" scoped="" ref="0x7dab7e30"/>
        <function-ref name="clr" scoped="" ref="0x7dab7f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dab50f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dab50f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dab52d0"/>
        <function-ref name="isInput" scoped="" ref="0x7dab53b0"/>
        <function-ref name="toggle" scoped="" ref="0x7dab5490"/>
        <function-ref name="isOutput" scoped="" ref="0x7dab5570"/>
        <function-ref name="get" scoped="" ref="0x7dab5650"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dab5730"/>
        <function-ref name="set" scoped="" ref="0x7dab5810"/>
        <function-ref name="clr" scoped="" ref="0x7dab58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dab4ac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dab4ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dab4ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7dab4d80"/>
        <function-ref name="toggle" scoped="" ref="0x7dab4e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7dab3010"/>
        <function-ref name="get" scoped="" ref="0x7dab30f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dab31d0"/>
        <function-ref name="set" scoped="" ref="0x7dab32b0"/>
        <function-ref name="clr" scoped="" ref="0x7dab3390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dab2570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dab2570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dab2748"/>
        <function-ref name="isInput" scoped="" ref="0x7dab2828"/>
        <function-ref name="toggle" scoped="" ref="0x7dab2908"/>
        <function-ref name="isOutput" scoped="" ref="0x7dab29e8"/>
        <function-ref name="get" scoped="" ref="0x7dab2ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dab2ba8"/>
        <function-ref name="set" scoped="" ref="0x7dab2c88"/>
        <function-ref name="clr" scoped="" ref="0x7dab2d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dab0010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dab0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dab01e8"/>
        <function-ref name="isInput" scoped="" ref="0x7dab02c8"/>
        <function-ref name="toggle" scoped="" ref="0x7dab03a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7dab0488"/>
        <function-ref name="get" scoped="" ref="0x7dab0568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dab0648"/>
        <function-ref name="set" scoped="" ref="0x7dab0728"/>
        <function-ref name="clr" scoped="" ref="0x7dab0808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7daab9e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7daab9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7daabbc0"/>
        <function-ref name="isInput" scoped="" ref="0x7daabca0"/>
        <function-ref name="toggle" scoped="" ref="0x7daabd80"/>
        <function-ref name="isOutput" scoped="" ref="0x7daabe60"/>
        <function-ref name="get" scoped="" ref="0x7daaa010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7daaa0f0"/>
        <function-ref name="set" scoped="" ref="0x7daaa1d0"/>
        <function-ref name="clr" scoped="" ref="0x7daaa2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ec72228" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ec72228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec72400"/>
        <function-ref name="isInput" scoped="" ref="0x7ec724e0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec725c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec726a0"/>
        <function-ref name="get" scoped="" ref="0x7ec72780"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec72860"/>
        <function-ref name="set" scoped="" ref="0x7ec72940"/>
        <function-ref name="clr" scoped="" ref="0x7ec72a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ec445e8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ec445e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec447c0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec448a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec44980"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec44a60"/>
        <function-ref name="get" scoped="" ref="0x7ec44b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec44c20"/>
        <function-ref name="set" scoped="" ref="0x7ec44d00"/>
        <function-ref name="clr" scoped="" ref="0x7ec44de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ec41a90" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ec41a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec41c68"/>
        <function-ref name="isInput" scoped="" ref="0x7ec41d48"/>
        <function-ref name="toggle" scoped="" ref="0x7ec41e28"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec41f08"/>
        <function-ref name="get" scoped="" ref="0x7ec40010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec400f0"/>
        <function-ref name="set" scoped="" ref="0x7ec401d0"/>
        <function-ref name="clr" scoped="" ref="0x7ec402b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ec35e60" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ec35e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec34050"/>
        <function-ref name="isInput" scoped="" ref="0x7ec34130"/>
        <function-ref name="toggle" scoped="" ref="0x7ec34210"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec342f0"/>
        <function-ref name="get" scoped="" ref="0x7ec343d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec344b0"/>
        <function-ref name="set" scoped="" ref="0x7ec34590"/>
        <function-ref name="clr" scoped="" ref="0x7ec34670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ec31228" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ec31228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec31400"/>
        <function-ref name="isInput" scoped="" ref="0x7ec314e0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec315c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec316a0"/>
        <function-ref name="get" scoped="" ref="0x7ec31780"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec31860"/>
        <function-ref name="set" scoped="" ref="0x7ec31940"/>
        <function-ref name="clr" scoped="" ref="0x7ec31a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ec255e8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ec255e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec257c0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec258a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec25980"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec25a60"/>
        <function-ref name="get" scoped="" ref="0x7ec25b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec25c20"/>
        <function-ref name="set" scoped="" ref="0x7ec25d00"/>
        <function-ref name="clr" scoped="" ref="0x7ec25de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ec23b10" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ec23b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec23ce8"/>
        <function-ref name="isInput" scoped="" ref="0x7ec23dc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ec23ea8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec22010"/>
        <function-ref name="get" scoped="" ref="0x7ec220f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec221d0"/>
        <function-ref name="set" scoped="" ref="0x7ec222b0"/>
        <function-ref name="clr" scoped="" ref="0x7ec22390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ec15010" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ec15010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec151e8"/>
        <function-ref name="isInput" scoped="" ref="0x7ec152c8"/>
        <function-ref name="toggle" scoped="" ref="0x7ec153a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec15488"/>
        <function-ref name="get" scoped="" ref="0x7ec15568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec15648"/>
        <function-ref name="set" scoped="" ref="0x7ec15728"/>
        <function-ref name="clr" scoped="" ref="0x7ec15808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ec132d8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ec132d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec134b0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec13590"/>
        <function-ref name="toggle" scoped="" ref="0x7ec13670"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec13750"/>
        <function-ref name="get" scoped="" ref="0x7ec13830"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec13910"/>
        <function-ref name="set" scoped="" ref="0x7ec139f0"/>
        <function-ref name="clr" scoped="" ref="0x7ec13ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ec10590" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ec10590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec10768"/>
        <function-ref name="isInput" scoped="" ref="0x7ec10848"/>
        <function-ref name="toggle" scoped="" ref="0x7ec10928"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec10a08"/>
        <function-ref name="get" scoped="" ref="0x7ec10ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec10bc8"/>
        <function-ref name="set" scoped="" ref="0x7ec10ca8"/>
        <function-ref name="clr" scoped="" ref="0x7ec10d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ec04880" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ec04880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec04a58"/>
        <function-ref name="isInput" scoped="" ref="0x7ec04b38"/>
        <function-ref name="toggle" scoped="" ref="0x7ec04c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec04cf8"/>
        <function-ref name="get" scoped="" ref="0x7ec04dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec04eb8"/>
        <function-ref name="set" scoped="" ref="0x7ec03010"/>
        <function-ref name="clr" scoped="" ref="0x7ec030f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ec01bc0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ec01bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec01d98"/>
        <function-ref name="isInput" scoped="" ref="0x7ec01e78"/>
        <function-ref name="toggle" scoped="" ref="0x7ec00010"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec000f0"/>
        <function-ref name="get" scoped="" ref="0x7ec001d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec002b0"/>
        <function-ref name="set" scoped="" ref="0x7ec00390"/>
        <function-ref name="clr" scoped="" ref="0x7ec00470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ebf5f20" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ebf5f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ebf4110"/>
        <function-ref name="isInput" scoped="" ref="0x7ebf41f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ebf42d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ebf43b0"/>
        <function-ref name="get" scoped="" ref="0x7ebf4490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ebf4570"/>
        <function-ref name="set" scoped="" ref="0x7ebf4650"/>
        <function-ref name="clr" scoped="" ref="0x7ebf4730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7eb93d58" loc="27:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7eb93d58"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f250308"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f250308"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7eb91010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7eb91160" loc="28:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7eb91160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7eb91338"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7eb91418"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7eb914f8"/>
        <function-ref name="actualMicro" scoped="" ref="0x7eb915d8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7eb916b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7eb62ee8" loc="49:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7eb62ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7eb610e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7eb62300" loc="46:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7eb62300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7eb624d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7eb62b78" loc="48:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7eb62b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7eb62d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7eb62648" loc="47:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7eb62648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7eb62820"/>
        <function-ref name="taskLoop" scoped="" ref="0x7eb62900"/>
        <function-ref name="runNextTask" scoped="" ref="0x7eb629e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f2109b8" loc="37:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f210b90"/>
        <function-ref name="runTask" scoped="" ref="0x7f210c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f230970" loc="36:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f230970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f230b48"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f230c28"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f230d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f062120" loc="45:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f062120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0622f8"/>
        <function-ref name="runTask" scoped="" ref="0x7f0623d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f051540" loc="46:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f051540"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f051718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f070960" loc="44:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f070960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f070b38"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f070c18"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f070cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7efe01a0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7efe01a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7efe0378"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f202c20" loc="42:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f202c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f202df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7eff0078" loc="43:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7eff0078"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7eff0250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7eb630c0" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="SerialApp.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7eb630c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7eb42a10"/>
        <function-ref name="fired" scoped="" ref="0x7eb63dc8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7eb423d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7eb421f0"/>
        <function-ref name="getdt" scoped="" ref="0x7eb42dd0"/>
        <function-ref name="gett0" scoped="" ref="0x7eb42bf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7eb42010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7eb636e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7eb426f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7eb63968"/>
        <function-ref name="stop" scoped="" ref="0x7eb63be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7eb41e58" loc="38:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7eb41e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7eb35830"/>
        <function-ref name="fired" scoped="" ref="0x7eb40b98"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7eb351f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7eb35010"/>
        <function-ref name="getdt" scoped="" ref="0x7eb35bf0"/>
        <function-ref name="gett0" scoped="" ref="0x7eb35a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7eb40d78"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7eb404b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7eb35510"/>
        <function-ref name="startOneShot" scoped="" ref="0x7eb40738"/>
        <function-ref name="stop" scoped="" ref="0x7eb409b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7eb256f8" loc="35:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7eb256f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7eb23068"/>
        <function-ref name="fired" scoped="" ref="0x7eb24470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7eb24a10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7eb24830"/>
        <function-ref name="getdt" scoped="" ref="0x7eb23428"/>
        <function-ref name="gett0" scoped="" ref="0x7eb23248"/>
        <function-ref name="isRunning" scoped="" ref="0x7eb24650"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7eb25d20"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7eb24d30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7eb24010"/>
        <function-ref name="stop" scoped="" ref="0x7eb24290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7eb14ea0" loc="36:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7eb14ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7eb204f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7eb25060" loc="34:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7eb25060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7eb25238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7eae5870" loc="26:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7eae5870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7eaf3010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7eaf3410"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7eaf3210"/>
        <function-ref name="overflow" scoped="" ref="0x7eaf3610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7eb13c20" loc="24:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7eb13c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7eb13df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7eaf59d0" loc="25:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7eaf59d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7eb04de0"/>
        <function-ref name="fired" scoped="" ref="0x7eb046a0"/>
        <function-ref name="startAt" scoped="" ref="0x7eb04aa0"/>
        <function-ref name="isRunning" scoped="" ref="0x7eb048a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7eb03010"/>
        <function-ref name="start" scoped="" ref="0x7eb04200"/>
        <function-ref name="stop" scoped="" ref="0x7eb044a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7eac1388" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7eac1388"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7eac1560"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7eac1640"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7eac1720"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7eac1800"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7eac18e0"/>
        <function-ref name="setControl" scoped="" ref="0x7eac19c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7eae2d00" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7eae2d00"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f2500e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f2500e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7eae2ed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7eab3848" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7eab3848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7eac4b48"/>
        <function-ref name="fired" scoped="" ref="0x7eac4348"/>
        <function-ref name="get" scoped="" ref="0x7eab3e90"/>
        <function-ref name="reset" scoped="" ref="0x7eac4548"/>
        <function-ref name="isOn" scoped="" ref="0x7eac4d48"/>
        <function-ref name="set" scoped="" ref="0x7eac40a8"/>
        <function-ref name="start" scoped="" ref="0x7eac4748"/>
        <function-ref name="stop" scoped="" ref="0x7eac4948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7ead1be0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7ead1be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7ead0330"/>
        <function-ref name="test" scoped="" ref="0x7ead6f18"/>
        <function-ref name="get" scoped="" ref="0x7ead6278"/>
        <function-ref name="setScale" scoped="" ref="0x7ead0530"/>
        <function-ref name="getScale" scoped="" ref="0x7ead07d0"/>
        <function-ref name="reset" scoped="" ref="0x7ead6918"/>
        <function-ref name="overflow" scoped="" ref="0x7ead6718"/>
        <function-ref name="isOn" scoped="" ref="0x7ead0130"/>
        <function-ref name="set" scoped="" ref="0x7ead6478"/>
        <function-ref name="start" scoped="" ref="0x7ead6b18"/>
        <function-ref name="stop" scoped="" ref="0x7ead6d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ea55c78" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliInit"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ea55c78"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f2500e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f2500e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ea55e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ea54078" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliInit"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7ea54078"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7ea45810"/>
        <function-ref name="test" scoped="" ref="0x7ea45410"/>
        <function-ref name="get" scoped="" ref="0x7ea546c0"/>
        <function-ref name="setScale" scoped="" ref="0x7ea45a10"/>
        <function-ref name="getScale" scoped="" ref="0x7ea45cb0"/>
        <function-ref name="reset" scoped="" ref="0x7ea54d60"/>
        <function-ref name="overflow" scoped="" ref="0x7ea54b60"/>
        <function-ref name="isOn" scoped="" ref="0x7ea45610"/>
        <function-ref name="set" scoped="" ref="0x7ea548c0"/>
        <function-ref name="start" scoped="" ref="0x7ea45010"/>
        <function-ref name="stop" scoped="" ref="0x7ea45210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ea41680" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7ea41680"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7f251f28"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7f251f28"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ea139c8"/>
        <function-ref name="fired" scoped="" ref="0x7ea13288"/>
        <function-ref name="startAt" scoped="" ref="0x7ea13688"/>
        <function-ref name="isRunning" scoped="" ref="0x7ea13488"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ea13bc8"/>
        <function-ref name="start" scoped="" ref="0x7ea41dd0"/>
        <function-ref name="stop" scoped="" ref="0x7ea13088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7ea10c10" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7ea10c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7ea06f18"/>
        <function-ref name="fired" scoped="" ref="0x7ea06718"/>
        <function-ref name="get" scoped="" ref="0x7ea06278"/>
        <function-ref name="reset" scoped="" ref="0x7ea06918"/>
        <function-ref name="isOn" scoped="" ref="0x7ea04130"/>
        <function-ref name="set" scoped="" ref="0x7ea06478"/>
        <function-ref name="start" scoped="" ref="0x7ea06b18"/>
        <function-ref name="stop" scoped="" ref="0x7ea06d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7ea13e10" loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7ea13e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7ea10528"/>
        <function-ref name="test" scoped="" ref="0x7ea10128"/>
        <function-ref name="get" scoped="" ref="0x7ea12468"/>
        <function-ref name="setScale" scoped="" ref="0x7ea10728"/>
        <function-ref name="getScale" scoped="" ref="0x7ea109c8"/>
        <function-ref name="reset" scoped="" ref="0x7ea12b08"/>
        <function-ref name="overflow" scoped="" ref="0x7ea12908"/>
        <function-ref name="isOn" scoped="" ref="0x7ea10328"/>
        <function-ref name="set" scoped="" ref="0x7ea12668"/>
        <function-ref name="start" scoped="" ref="0x7ea12d08"/>
        <function-ref name="stop" scoped="" ref="0x7ea12f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7ea01320" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7ea01320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ea01a70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ea01e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ea01c70"/>
        <function-ref name="overflow" scoped="" ref="0x7ea00088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ea002f0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7ea002f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e9e4a10"/>
        <function-ref name="test" scoped="" ref="0x7e9e4610"/>
        <function-ref name="get" scoped="" ref="0x7ea00938"/>
        <function-ref name="setScale" scoped="" ref="0x7e9e4c10"/>
        <function-ref name="getScale" scoped="" ref="0x7e9e4eb0"/>
        <function-ref name="reset" scoped="" ref="0x7e9e4010"/>
        <function-ref name="overflow" scoped="" ref="0x7ea00dd8"/>
        <function-ref name="isOn" scoped="" ref="0x7e9e4810"/>
        <function-ref name="set" scoped="" ref="0x7ea00b38"/>
        <function-ref name="start" scoped="" ref="0x7e9e4210"/>
        <function-ref name="stop" scoped="" ref="0x7e9e4410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7e9e1608" loc="61:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
      <component-ref qname="AlarmCounterMilliP.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7e9e1608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e992950"/>
        <function-ref name="fired" scoped="" ref="0x7e992210"/>
        <function-ref name="startAt" scoped="" ref="0x7e992610"/>
        <function-ref name="isRunning" scoped="" ref="0x7e992410"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e992b50"/>
        <function-ref name="start" scoped="" ref="0x7e9e1d58"/>
        <function-ref name="stop" scoped="" ref="0x7e992010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7e991ed8" loc="63:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
      <component-ref qname="AlarmCounterMilliP.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7e991ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e987680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e987a80"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e987880"/>
        <function-ref name="overflow" scoped="" ref="0x7e987c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7e992e48" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
      <component-ref qname="AlarmCounterMilliP.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e992e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e9915e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e9919e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e9917e0"/>
        <function-ref name="overflow" scoped="" ref="0x7e991be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7e986010" loc="64:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
      <component-ref qname="AlarmCounterMilliP.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x7e986010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e985350"/>
        <function-ref name="fired" scoped="" ref="0x7e986c00"/>
        <function-ref name="startAt" scoped="" ref="0x7e985010"/>
        <function-ref name="isRunning" scoped="" ref="0x7e986e00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e985550"/>
        <function-ref name="start" scoped="" ref="0x7e986760"/>
        <function-ref name="stop" scoped="" ref="0x7e986a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7e950bf0" loc="63:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7e950bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e950dc8"/>
        <function-ref name="runTask" scoped="" ref="0x7e950ea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7e9514c8" loc="38:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7e9514c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e950818"/>
        <function-ref name="fired" scoped="" ref="0x7e9500d8"/>
        <function-ref name="startAt" scoped="" ref="0x7e9504d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7e9502d8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e950a18"/>
        <function-ref name="start" scoped="" ref="0x7e951c18"/>
        <function-ref name="stop" scoped="" ref="0x7e951eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e977440" loc="37:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e977440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e953dd0"/>
        <function-ref name="fired" scoped="" ref="0x7e9531f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e953790"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e9535b0"/>
        <function-ref name="getdt" scoped="" ref="0x7e9511f0"/>
        <function-ref name="gett0" scoped="" ref="0x7e951010"/>
        <function-ref name="isRunning" scoped="" ref="0x7e9533d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e977a68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e953ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e977ce8"/>
        <function-ref name="stop" scoped="" ref="0x7e953010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7e8f4240" loc="60:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7e8f4240"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e8f4418"/>
        <function-ref name="runTask" scoped="" ref="0x7e8f44f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7e8f7380" loc="38:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7e8f7380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e8f6c98"/>
        <function-ref name="fired" scoped="" ref="0x7e8f60b8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e8f6658"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e8f6478"/>
        <function-ref name="getdt" scoped="" ref="0x7e8f4068"/>
        <function-ref name="gett0" scoped="" ref="0x7e8f6e78"/>
        <function-ref name="isRunning" scoped="" ref="0x7e8f6298"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e8f79a8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e8f6978"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e8f7c28"/>
        <function-ref name="stop" scoped="" ref="0x7e8f7ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e902370" loc="37:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e902370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e901d08"/>
        <function-ref name="fired" scoped="" ref="0x7e9010d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e9016a8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e9014b8"/>
        <function-ref name="getdt" scoped="" ref="0x7e8f7108"/>
        <function-ref name="gett0" scoped="" ref="0x7e901ef8"/>
        <function-ref name="isRunning" scoped="" ref="0x7e9012c8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e9029a8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e9019d8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e902c38"/>
        <function-ref name="stop" scoped="" ref="0x7e902ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7e8f1a88" loc="37:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7e8f1a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e8f00f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7e8f03d0" loc="38:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e8f03d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e8f0b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e8f0f20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e8f0d20"/>
        <function-ref name="overflow" scoped="" ref="0x7e8e3138"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LEDController" ref="0x7e8d4398" loc="2:LEDControllerC.nc">
      <component-ref qname="LEDControllerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LEDController" scoped="" ref="0x7e8d4398"/></type-interface>
      <instance>
        <interfacedef-ref qname="LEDController"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e8d4570"/>
        <function-ref name="BlinkLed1" scoped="" ref="0x7e8d4650"/>
        <function-ref name="IntervalBlinkLed0" scoped="" ref="0x7e8d4730"/>
        <function-ref name="BlinkLed2" scoped="" ref="0x7e8d4810"/>
        <function-ref name="IntervalBlinkLed1" scoped="" ref="0x7e8d48f0"/>
        <function-ref name="BlinkLed0" scoped="" ref="0x7e8d49d0"/>
        <function-ref name="IntervalBlinkLed2" scoped="" ref="0x7e8d4ab0"/>
        <function-ref name="BlinkDone" scoped="" ref="0x7e8d4b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LEDTimer1" ref="0x7e8b5160" loc="7:LEDControllerM.nc">
      <component-ref qname="LEDControllerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LEDTimer1" scoped="" ref="0x7e8b5160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e8b3a68"/>
        <function-ref name="fired" scoped="" ref="0x7e8b5e68"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e8b3428"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e8b3248"/>
        <function-ref name="getdt" scoped="" ref="0x7e8b3e28"/>
        <function-ref name="gett0" scoped="" ref="0x7e8b3c48"/>
        <function-ref name="isRunning" scoped="" ref="0x7e8b3068"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e8b5788"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e8b3748"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e8b5a08"/>
        <function-ref name="stop" scoped="" ref="0x7e8b5c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LEDController" ref="0x7e8d28f0" loc="2:LEDControllerM.nc">
      <component-ref qname="LEDControllerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LEDController" scoped="" ref="0x7e8d28f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LEDController"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e8d2ac8"/>
        <function-ref name="BlinkLed1" scoped="" ref="0x7e8d2ba8"/>
        <function-ref name="IntervalBlinkLed0" scoped="" ref="0x7e8d2c88"/>
        <function-ref name="BlinkLed2" scoped="" ref="0x7e8d2d68"/>
        <function-ref name="IntervalBlinkLed1" scoped="" ref="0x7e8d2e48"/>
        <function-ref name="BlinkLed0" scoped="" ref="0x7e8d2f28"/>
        <function-ref name="IntervalBlinkLed2" scoped="" ref="0x7e8c7018"/>
        <function-ref name="BlinkDone" scoped="" ref="0x7e8c70f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LEDIntervalTimer2" ref="0x7e8a3078" loc="12:LEDControllerM.nc">
      <component-ref qname="LEDControllerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LEDIntervalTimer2" scoped="" ref="0x7e8a3078"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e8a2a10"/>
        <function-ref name="fired" scoped="" ref="0x7e8a3d80"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e8a23d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e8a21f0"/>
        <function-ref name="getdt" scoped="" ref="0x7e8a2dd0"/>
        <function-ref name="gett0" scoped="" ref="0x7e8a2bf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7e8a2010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e8a36a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e8a26f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e8a3920"/>
        <function-ref name="stop" scoped="" ref="0x7e8a3ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LEDIntervalTimer0" ref="0x7e8a8078" loc="10:LEDControllerM.nc">
      <component-ref qname="LEDControllerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LEDIntervalTimer0" scoped="" ref="0x7e8a8078"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e8a7a10"/>
        <function-ref name="fired" scoped="" ref="0x7e8a8d80"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e8a73d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e8a71f0"/>
        <function-ref name="getdt" scoped="" ref="0x7e8a7dd0"/>
        <function-ref name="gett0" scoped="" ref="0x7e8a7bf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7e8a7010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e8a86a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e8a76f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e8a8920"/>
        <function-ref name="stop" scoped="" ref="0x7e8a8ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e8b7548" loc="5:LEDControllerM.nc">
      <component-ref qname="LEDControllerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e8b7548"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e8b7720"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e8b7800"/>
        <function-ref name="led1On" scoped="" ref="0x7e8b78e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e8b79c0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e8b7aa0"/>
        <function-ref name="get" scoped="" ref="0x7e8b7b80"/>
        <function-ref name="led1Off" scoped="" ref="0x7e8b7c60"/>
        <function-ref name="led2Off" scoped="" ref="0x7e8c5010"/>
        <function-ref name="set" scoped="" ref="0x7e8b7d40"/>
        <function-ref name="led0On" scoped="" ref="0x7e8b7e20"/>
        <function-ref name="led2On" scoped="" ref="0x7e8b7f00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LEDTimer2" ref="0x7e8b20b8" loc="8:LEDControllerM.nc">
      <component-ref qname="LEDControllerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LEDTimer2" scoped="" ref="0x7e8b20b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e8b1a10"/>
        <function-ref name="fired" scoped="" ref="0x7e8b2dc0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e8b13d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e8b11f0"/>
        <function-ref name="getdt" scoped="" ref="0x7e8b1dd0"/>
        <function-ref name="gett0" scoped="" ref="0x7e8b1bf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7e8b1010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e8b26e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e8b16f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e8b2960"/>
        <function-ref name="stop" scoped="" ref="0x7e8b2be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LEDTimer0" ref="0x7e8c5220" loc="6:LEDControllerM.nc">
      <component-ref qname="LEDControllerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LEDTimer0" scoped="" ref="0x7e8c5220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e8c4b18"/>
        <function-ref name="fired" scoped="" ref="0x7e8c5f28"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e8c44d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e8c42f8"/>
        <function-ref name="getdt" scoped="" ref="0x7e8c4ed8"/>
        <function-ref name="gett0" scoped="" ref="0x7e8c4cf8"/>
        <function-ref name="isRunning" scoped="" ref="0x7e8c4118"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e8c5848"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e8c47f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e8c5ac8"/>
        <function-ref name="stop" scoped="" ref="0x7e8c5d48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LEDIntervalTimer1" ref="0x7e8a6078" loc="11:LEDControllerM.nc">
      <component-ref qname="LEDControllerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LEDIntervalTimer1" scoped="" ref="0x7e8a6078"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e8a4a10"/>
        <function-ref name="fired" scoped="" ref="0x7e8a6d80"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e8a43d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e8a41f0"/>
        <function-ref name="getdt" scoped="" ref="0x7e8a4dd0"/>
        <function-ref name="gett0" scoped="" ref="0x7e8a4bf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7e8a4010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e8a66a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e8a46f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e8a6920"/>
        <function-ref name="stop" scoped="" ref="0x7e8a6ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7e871248" loc="35:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e871248"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e871420"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e871500"/>
        <function-ref name="led1On" scoped="" ref="0x7e8715e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e8716c0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e8717a0"/>
        <function-ref name="get" scoped="" ref="0x7e871880"/>
        <function-ref name="led1Off" scoped="" ref="0x7e871960"/>
        <function-ref name="led2Off" scoped="" ref="0x7e871ce0"/>
        <function-ref name="set" scoped="" ref="0x7e871a40"/>
        <function-ref name="led0On" scoped="" ref="0x7e871b20"/>
        <function-ref name="led2On" scoped="" ref="0x7e871c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7e865b38" loc="39:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7e865b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e865d10"/>
        <function-ref name="isInput" scoped="" ref="0x7e865df0"/>
        <function-ref name="toggle" scoped="" ref="0x7e865ed0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e864010"/>
        <function-ref name="get" scoped="" ref="0x7e8640f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e8641d0"/>
        <function-ref name="set" scoped="" ref="0x7e8642b0"/>
        <function-ref name="clr" scoped="" ref="0x7e864390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e870b90" loc="35:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e870b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e870d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7e864508" loc="40:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7e864508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e8646e0"/>
        <function-ref name="isInput" scoped="" ref="0x7e8647c0"/>
        <function-ref name="toggle" scoped="" ref="0x7e8648a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e864980"/>
        <function-ref name="get" scoped="" ref="0x7e864a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e864b40"/>
        <function-ref name="set" scoped="" ref="0x7e864c20"/>
        <function-ref name="clr" scoped="" ref="0x7e864d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7e870eb0" loc="36:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e870eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e8650c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e8651a0"/>
        <function-ref name="led1On" scoped="" ref="0x7e865280"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e865360"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e865440"/>
        <function-ref name="get" scoped="" ref="0x7e865520"/>
        <function-ref name="led1Off" scoped="" ref="0x7e865600"/>
        <function-ref name="led2Off" scoped="" ref="0x7e865980"/>
        <function-ref name="set" scoped="" ref="0x7e8656e0"/>
        <function-ref name="led0On" scoped="" ref="0x7e8657c0"/>
        <function-ref name="led2On" scoped="" ref="0x7e8658a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7e864e78" loc="41:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7e864e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e863070"/>
        <function-ref name="isInput" scoped="" ref="0x7e863150"/>
        <function-ref name="toggle" scoped="" ref="0x7e863230"/>
        <function-ref name="isOutput" scoped="" ref="0x7e863310"/>
        <function-ref name="get" scoped="" ref="0x7e8633f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e8634d0"/>
        <function-ref name="set" scoped="" ref="0x7e8635b0"/>
        <function-ref name="clr" scoped="" ref="0x7e863690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7e845908" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7e845908"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e845ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7e845bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7e845ca0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e845d80"/>
        <function-ref name="get" scoped="" ref="0x7e845e60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e844010"/>
        <function-ref name="set" scoped="" ref="0x7e8440f0"/>
        <function-ref name="clr" scoped="" ref="0x7e8441d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7e844368" loc="36:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7e844368"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e844540"/>
        <function-ref name="isInput" scoped="" ref="0x7e844620"/>
        <function-ref name="toggle" scoped="" ref="0x7e844700"/>
        <function-ref name="isOutput" scoped="" ref="0x7e8447e0"/>
        <function-ref name="get" scoped="" ref="0x7e8448c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e8449a0"/>
        <function-ref name="set" scoped="" ref="0x7e844a80"/>
        <function-ref name="clr" scoped="" ref="0x7e844b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7e8436b8" loc="38:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e8436b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e843890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7e844cf8" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7e844cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e844ed0"/>
        <function-ref name="isInput" scoped="" ref="0x7e843010"/>
        <function-ref name="toggle" scoped="" ref="0x7e8430f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e8431d0"/>
        <function-ref name="get" scoped="" ref="0x7e8432b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e843390"/>
        <function-ref name="set" scoped="" ref="0x7e843470"/>
        <function-ref name="clr" scoped="" ref="0x7e843550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e846330" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="LEDControllerC.LEDTimer1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e846330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e840c28"/>
        <function-ref name="fired" scoped="" ref="0x7e840048"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e8405e8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e840408"/>
        <function-ref name="getdt" scoped="" ref="0x7e838010"/>
        <function-ref name="gett0" scoped="" ref="0x7e840e08"/>
        <function-ref name="isRunning" scoped="" ref="0x7e840228"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e846958"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e840908"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e846bd8"/>
        <function-ref name="stop" scoped="" ref="0x7e846e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e838cb0" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="LEDControllerC.LEDTimer2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e838cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e835650"/>
        <function-ref name="fired" scoped="" ref="0x7e8379c8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e835010"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e837d88"/>
        <function-ref name="getdt" scoped="" ref="0x7e835a10"/>
        <function-ref name="gett0" scoped="" ref="0x7e835830"/>
        <function-ref name="isRunning" scoped="" ref="0x7e837ba8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e8372e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e835330"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e837568"/>
        <function-ref name="stop" scoped="" ref="0x7e8377e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e8346d8" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="LEDControllerC.LEDTimer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e8346d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e832068"/>
        <function-ref name="fired" scoped="" ref="0x7e833470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e833a10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e833830"/>
        <function-ref name="getdt" scoped="" ref="0x7e832428"/>
        <function-ref name="gett0" scoped="" ref="0x7e832248"/>
        <function-ref name="isRunning" scoped="" ref="0x7e833650"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e834d00"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e833d30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e833010"/>
        <function-ref name="stop" scoped="" ref="0x7e833290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e8305a8" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="LEDControllerC.IntervalTimer1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e8305a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e828ed0"/>
        <function-ref name="fired" scoped="" ref="0x7e8282f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e828890"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e8286b0"/>
        <function-ref name="getdt" scoped="" ref="0x7e8272b8"/>
        <function-ref name="gett0" scoped="" ref="0x7e8270d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7e8284d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e830bd0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e828bb0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e830e50"/>
        <function-ref name="stop" scoped="" ref="0x7e828110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e826010" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="LEDControllerC.IntervalTimer2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e826010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e824928"/>
        <function-ref name="fired" scoped="" ref="0x7e826d18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e8242e8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e824108"/>
        <function-ref name="getdt" scoped="" ref="0x7e824ce8"/>
        <function-ref name="gett0" scoped="" ref="0x7e824b08"/>
        <function-ref name="isRunning" scoped="" ref="0x7e826ef8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e826638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e824608"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e8268b8"/>
        <function-ref name="stop" scoped="" ref="0x7e826b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e8239e8" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="LEDControllerC.IntervalTimer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e8239e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e820330"/>
        <function-ref name="fired" scoped="" ref="0x7e822728"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e822cc8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e822ae8"/>
        <function-ref name="getdt" scoped="" ref="0x7e8206f0"/>
        <function-ref name="gett0" scoped="" ref="0x7e820510"/>
        <function-ref name="isRunning" scoped="" ref="0x7e822908"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e822048"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e820010"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e8222c8"/>
        <function-ref name="stop" scoped="" ref="0x7e822548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LCDSetter" ref="0x7e7861c8" loc="23:LCDSetterC.nc">
      <component-ref qname="LCDSetterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LCDSetter" scoped="" ref="0x7e7861c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCDSetter"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e7863a0"/>
        <function-ref name="setLCD" scoped="" ref="0x7e786480"/>
        <function-ref name="setLCD2" scoped="" ref="0x7e786560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LCDSetter" ref="0x7e7842d8" loc="22:LCDSetterM.nc">
      <component-ref qname="LCDSetterM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LCDSetter" scoped="" ref="0x7e7842d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCDSetter"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e7844b0"/>
        <function-ref name="setLCD" scoped="" ref="0x7e784590"/>
        <function-ref name="setLCD2" scoped="" ref="0x7e784670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Interaction" ref="0x7e773308" loc="28:LCDSetterM.nc">
      <component-ref qname="LCDSetterM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interaction" scoped="" ref="0x7e773308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Interaction"/>
      </instance>
      <interface-functions>
        <function-ref name="StartDoneConfiguration" scoped="" ref="0x7e7734e0"/>
        <function-ref name="getSensorDataDone" scoped="" ref="0x7e7735c0"/>
        <function-ref name="Urgency_Data" scoped="" ref="0x7e7736a0"/>
        <function-ref name="Process_CMD" scoped="" ref="0x7e773780"/>
        <function-ref name="SetSamplingTime" scoped="" ref="0x7e773860"/>
        <function-ref name="getSensorData" scoped="" ref="0x7e773940"/>
        <function-ref name="StartConfiguration" scoped="" ref="0x7e773a20"/>
        <function-ref name="Send_LongData" scoped="" ref="0x7e773b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCSuartDBGstd" ref="0x7e770338" loc="29:LCDSetterM.nc">
      <component-ref qname="LCDSetterM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCSuartDBGstd" scoped="" ref="0x7e770338"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e770510"/>
        <function-ref name="stop" scoped="" ref="0x7e7705f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TryToSetTimer" ref="0x7e764640" loc="52:LCDSetterM.nc">
      <component-ref qname="LCDSetterM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TryToSetTimer" scoped="" ref="0x7e764640"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e764818"/>
        <function-ref name="runTask" scoped="" ref="0x7e7648f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TryToConfigure" ref="0x7e7667d0" loc="51:LCDSetterM.nc">
      <component-ref qname="LCDSetterM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TryToConfigure" scoped="" ref="0x7e7667d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e7669a8"/>
        <function-ref name="runTask" scoped="" ref="0x7e766a88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCSuartDBG" ref="0x7e7689a8" loc="30:LCDSetterM.nc">
      <component-ref qname="LCDSetterM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCSuartDBG" scoped="" ref="0x7e7689a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SCSuartDBG"/>
      </instance>
      <interface-functions>
        <function-ref name="UARTSend" scoped="" ref="0x7e768b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7e784890" loc="26:LCDSetterM.nc">
      <component-ref qname="LCDSetterM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e784890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e7811a8"/>
        <function-ref name="fired" scoped="" ref="0x7e7835b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e783b50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e783970"/>
        <function-ref name="getdt" scoped="" ref="0x7e781568"/>
        <function-ref name="gett0" scoped="" ref="0x7e781388"/>
        <function-ref name="isRunning" scoped="" ref="0x7e783790"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e784eb8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e783e70"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e783150"/>
        <function-ref name="stop" scoped="" ref="0x7e7833d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e7402e0" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="LCDSetterC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e7402e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e738bf0"/>
        <function-ref name="fired" scoped="" ref="0x7e738010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e7385b0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e7383d0"/>
        <function-ref name="getdt" scoped="" ref="0x7e737010"/>
        <function-ref name="gett0" scoped="" ref="0x7e738dd0"/>
        <function-ref name="isRunning" scoped="" ref="0x7e7381f0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e740908"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e7388d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e740b88"/>
        <function-ref name="stop" scoped="" ref="0x7e740e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interaction" ref="0x7e7310b0" loc="23:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionC.nc">
      <component-ref qname="InteractionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interaction" scoped="" ref="0x7e7310b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Interaction"/>
      </instance>
      <interface-functions>
        <function-ref name="StartDoneConfiguration" scoped="" ref="0x7e731288"/>
        <function-ref name="getSensorDataDone" scoped="" ref="0x7e731368"/>
        <function-ref name="Urgency_Data" scoped="" ref="0x7e731448"/>
        <function-ref name="Process_CMD" scoped="" ref="0x7e731528"/>
        <function-ref name="SetSamplingTime" scoped="" ref="0x7e731608"/>
        <function-ref name="getSensorData" scoped="" ref="0x7e7316e8"/>
        <function-ref name="StartConfiguration" scoped="" ref="0x7e7317c8"/>
        <function-ref name="Send_LongData" scoped="" ref="0x7e7318a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SensorCheckTimer" ref="0x7e722e60" loc="28:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SensorCheckTimer" scoped="" ref="0x7e722e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e720830"/>
        <function-ref name="fired" scoped="" ref="0x7e721b98"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e7201f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e720010"/>
        <function-ref name="getdt" scoped="" ref="0x7e720bf0"/>
        <function-ref name="gett0" scoped="" ref="0x7e720a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7e721d78"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e7214b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e720510"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e721738"/>
        <function-ref name="stop" scoped="" ref="0x7e7219b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBasicSensor" ref="0x7e696f28" loc="339:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBasicSensor" scoped="" ref="0x7e696f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e694110"/>
        <function-ref name="runTask" scoped="" ref="0x7e6941f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event_Urgency_Data" ref="0x7e6d8080" loc="134:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Event_Urgency_Data" scoped="" ref="0x7e6d8080"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e6d8258"/>
        <function-ref name="runTask" scoped="" ref="0x7e6d8338"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="C328_Reset_Timer" ref="0x7e720e60" loc="29:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="C328_Reset_Timer" scoped="" ref="0x7e720e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e717830"/>
        <function-ref name="fired" scoped="" ref="0x7e718b98"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e7171f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e717010"/>
        <function-ref name="getdt" scoped="" ref="0x7e717bf0"/>
        <function-ref name="gett0" scoped="" ref="0x7e717a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7e718d78"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e7184b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e717510"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e718738"/>
        <function-ref name="stop" scoped="" ref="0x7e7189b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read_Humi" ref="0x7e712938" loc="32:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read_Humi" scoped="" ref="0x7e712938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e714010"/>
        <function-ref name="readDone" scoped="" ref="0x7e7141f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProcessCMD" ref="0x7e6a77c8" loc="293:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProcessCMD" scoped="" ref="0x7e6a77c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e6a79a0"/>
        <function-ref name="runTask" scoped="" ref="0x7e6a7a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read_Ultrared" ref="0x7e713d20" loc="35:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read_Ultrared" scoped="" ref="0x7e713d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e710370"/>
        <function-ref name="readDone" scoped="" ref="0x7e710550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interaction" ref="0x7e726830" loc="22:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interaction" scoped="" ref="0x7e726830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Interaction"/>
      </instance>
      <interface-functions>
        <function-ref name="StartDoneConfiguration" scoped="" ref="0x7e726a08"/>
        <function-ref name="getSensorDataDone" scoped="" ref="0x7e726ae8"/>
        <function-ref name="Urgency_Data" scoped="" ref="0x7e726bc8"/>
        <function-ref name="Process_CMD" scoped="" ref="0x7e726ca8"/>
        <function-ref name="SetSamplingTime" scoped="" ref="0x7e726d88"/>
        <function-ref name="getSensorData" scoped="" ref="0x7e726e68"/>
        <function-ref name="StartConfiguration" scoped="" ref="0x7e725010"/>
        <function-ref name="Send_LongData" scoped="" ref="0x7e7250f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read_Photo" ref="0x7e713168" loc="34:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read_Photo" scoped="" ref="0x7e713168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e713790"/>
        <function-ref name="readDone" scoped="" ref="0x7e713970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Set_C328_Restart_Timer_START" ref="0x7e6f3668" loc="66:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Set_C328_Restart_Timer_START" scoped="" ref="0x7e6f3668"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e6f3840"/>
        <function-ref name="runTask" scoped="" ref="0x7e6f3920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CommunicationWithOPT" ref="0x7e700998" loc="37:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CommunicationWithOPT" scoped="" ref="0x7e700998"/></type-interface>
      <instance>
        <interfacedef-ref qname="CommunicationWithOPT"/>
      </instance>
      <interface-functions>
        <function-ref name="parsing_config" scoped="" ref="0x7e707470"/>
        <function-ref name="RequestLongMSG" scoped="" ref="0x7e700c50"/>
        <function-ref name="SpecialControlMSG" scoped="" ref="0x7e700d30"/>
        <function-ref name="parsing_control" scoped="" ref="0x7e700e10"/>
        <function-ref name="parsing_longDT" scoped="" ref="0x7e700ef0"/>
        <function-ref name="RequestSensorMSG" scoped="" ref="0x7e707010"/>
        <function-ref name="SendConfigureMSG" scoped="" ref="0x7e7070f0"/>
        <function-ref name="SendLongMSG" scoped="" ref="0x7e7071d0"/>
        <function-ref name="start" scoped="" ref="0x7e7072b0"/>
        <function-ref name="SendControlMSG" scoped="" ref="0x7e707390"/>
        <function-ref name="parsing_sensor" scoped="" ref="0x7e700b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TaskStartDoneConfiguration" ref="0x7e6f7768" loc="56:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskStartDoneConfiguration" scoped="" ref="0x7e6f7768"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e6f7940"/>
        <function-ref name="runTask" scoped="" ref="0x7e6f7a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TryToGetSensorData" ref="0x7e6c1a78" loc="211:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TryToGetSensorData" scoped="" ref="0x7e6c1a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e6c1c50"/>
        <function-ref name="runTask" scoped="" ref="0x7e6c1d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e725278" loc="26:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e725278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e725450"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e725530"/>
        <function-ref name="led1On" scoped="" ref="0x7e725610"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e7256f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e7257d0"/>
        <function-ref name="get" scoped="" ref="0x7e7258b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7e725990"/>
        <function-ref name="led2Off" scoped="" ref="0x7e725d10"/>
        <function-ref name="set" scoped="" ref="0x7e725a70"/>
        <function-ref name="led0On" scoped="" ref="0x7e725b50"/>
        <function-ref name="led2On" scoped="" ref="0x7e725c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TaskGetSensorDataDone" ref="0x7e6f6788" loc="57:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskGetSensorDataDone" scoped="" ref="0x7e6f6788"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e6f69e0"/>
        <function-ref name="runTask" scoped="" ref="0x7e6f6ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfigTimeout" ref="0x7e725f20" loc="27:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigTimeout" scoped="" ref="0x7e725f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e722830"/>
        <function-ref name="fired" scoped="" ref="0x7e724c40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e7221f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e722010"/>
        <function-ref name="getdt" scoped="" ref="0x7e722bf0"/>
        <function-ref name="gett0" scoped="" ref="0x7e722a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7e724e20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e724560"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e722510"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e7247e0"/>
        <function-ref name="stop" scoped="" ref="0x7e724a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read_Temp" ref="0x7e7145a0" loc="33:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read_Temp" scoped="" ref="0x7e7145a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e714bc8"/>
        <function-ref name="readDone" scoped="" ref="0x7e714da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCSuartDBG" ref="0x7e7075c0" loc="38:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/InteractionM.nc">
      <component-ref qname="InteractionM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCSuartDBG" scoped="" ref="0x7e7075c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SCSuartDBG"/>
      </instance>
      <interface-functions>
        <function-ref name="UARTSend" scoped="" ref="0x7e707798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e67a5a8" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="InteractionC.ConfigTimeout"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e67a5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e679ed0"/>
        <function-ref name="fired" scoped="" ref="0x7e6792f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e679890"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e6796b0"/>
        <function-ref name="getdt" scoped="" ref="0x7e6782b8"/>
        <function-ref name="gett0" scoped="" ref="0x7e6780d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7e6794d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e67abd0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e679bb0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e67ae50"/>
        <function-ref name="stop" scoped="" ref="0x7e679110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e677010" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="InteractionC.SensorCheckTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e677010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e675928"/>
        <function-ref name="fired" scoped="" ref="0x7e677d18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e6752e8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e675108"/>
        <function-ref name="getdt" scoped="" ref="0x7e675ce8"/>
        <function-ref name="gett0" scoped="" ref="0x7e675b08"/>
        <function-ref name="isRunning" scoped="" ref="0x7e677ef8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e677638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e675608"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e6778b8"/>
        <function-ref name="stop" scoped="" ref="0x7e677b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e6749f0" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="InteractionC.C328_Reset_TimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e6749f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e671330"/>
        <function-ref name="fired" scoped="" ref="0x7e673728"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e673cc8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e673ae8"/>
        <function-ref name="getdt" scoped="" ref="0x7e6716f0"/>
        <function-ref name="gett0" scoped="" ref="0x7e671510"/>
        <function-ref name="isRunning" scoped="" ref="0x7e673908"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e673048"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e671010"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e6732c8"/>
        <function-ref name="stop" scoped="" ref="0x7e673548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7e4b70c0" loc="47:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11C.nc">
      <component-ref qname="InteractionC.SensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x7e4b70c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e4b76e8"/>
        <function-ref name="readDone" scoped="" ref="0x7e4b78c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7e4b84f0" loc="46:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11C.nc">
      <component-ref qname="InteractionC.SensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x7e4b84f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e4b8b18"/>
        <function-ref name="readDone" scoped="" ref="0x7e4b8cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Hum" ref="0x7d9d1080" loc="50:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="InteractionC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sht11Hum" scoped="" ref="0x7d9d1080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7d9d1258"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7d9d1338"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7d9d1418"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7d9d14f8"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7d9d15d8"/>
        <function-ref name="reset" scoped="" ref="0x7d9d16b8"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7d9d1798"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7d9d1878"/>
        <function-ref name="resetDone" scoped="" ref="0x7d9d1958"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7d9d1a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7d9d4bc0" loc="45:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="InteractionC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x7d9d4bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d9d3218"/>
        <function-ref name="readDone" scoped="" ref="0x7d9d33f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempResource" ref="0x7d9d3710" loc="47:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="InteractionC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempResource" scoped="" ref="0x7d9d3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d9d38e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d9d39c8"/>
        <function-ref name="request" scoped="" ref="0x7d9d3aa8"/>
        <function-ref name="granted" scoped="" ref="0x7d9d3b88"/>
        <function-ref name="isOwner" scoped="" ref="0x7d9d3c68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Temp" ref="0x7d9d2510" loc="49:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="InteractionC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sht11Temp" scoped="" ref="0x7d9d2510"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7d9d26e8"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7d9d27c8"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7d9d28a8"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7d9d2988"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7d9d2a68"/>
        <function-ref name="reset" scoped="" ref="0x7d9d2b48"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7d9d2c28"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7d9d2d08"/>
        <function-ref name="resetDone" scoped="" ref="0x7d9d2de8"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7d9d2ec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumResource" ref="0x7d9d3de8" loc="48:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="InteractionC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HumResource" scoped="" ref="0x7d9d3de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d9d2010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d9d20f0"/>
        <function-ref name="request" scoped="" ref="0x7d9d21d0"/>
        <function-ref name="granted" scoped="" ref="0x7d9d22b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7d9d2390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7d9d4010" loc="44:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="InteractionC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x7d9d4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d9d4638"/>
        <function-ref name="readDone" scoped="" ref="0x7d9d4818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x7e626ad0" loc="45:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SensirionSht11" scoped="" ref="0x7e626ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7e626ca8"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7e626d88"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7e626e68"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7e625010"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7e6250f0"/>
        <function-ref name="reset" scoped="" ref="0x7e6251d0"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7e6252b0"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7e625390"/>
        <function-ref name="resetDone" scoped="" ref="0x7e625470"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7e625550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e626178" loc="44:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e626178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e626350"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e626430"/>
        <function-ref name="request" scoped="" ref="0x7e626510"/>
        <function-ref name="granted" scoped="" ref="0x7e6265f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7e6266d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptDATA" ref="0x7e5c8358" loc="58:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptDATA" scoped="" ref="0x7e5c8358"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e5c8530"/>
        <function-ref name="disable" scoped="" ref="0x7e5c8610"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e5c86f0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e5c87d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readSensor" ref="0x7e5c4948" loc="102:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readSensor" scoped="" ref="0x7e5c4948"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e5c4b20"/>
        <function-ref name="runTask" scoped="" ref="0x7e5c4c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalStatusDone" ref="0x7e5c4510" loc="103:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalStatusDone" scoped="" ref="0x7e5c4510"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e5c46e8"/>
        <function-ref name="runTask" scoped="" ref="0x7e5c47c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CLOCK" ref="0x7e5c99c8" loc="57:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CLOCK" scoped="" ref="0x7e5c99c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e5c9ba0"/>
        <function-ref name="isInput" scoped="" ref="0x7e5c9c80"/>
        <function-ref name="toggle" scoped="" ref="0x7e5c9d60"/>
        <function-ref name="isOutput" scoped="" ref="0x7e5c9e40"/>
        <function-ref name="get" scoped="" ref="0x7e5c9f20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e5c8018"/>
        <function-ref name="set" scoped="" ref="0x7e5c80f8"/>
        <function-ref name="clr" scoped="" ref="0x7e5c81d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x7e5ca4d8" loc="54:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SensirionSht11" scoped="" ref="0x7e5ca4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7e5ca6c0"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7e5ca7a0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7e5ca880"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7e5ca960"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7e5caa40"/>
        <function-ref name="reset" scoped="" ref="0x7e5cab20"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7e5cac00"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7e5cace0"/>
        <function-ref name="resetDone" scoped="" ref="0x7e5cadc0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7e5caea0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x7e5c9050" loc="56:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x7e5c9050"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e5c9228"/>
        <function-ref name="isInput" scoped="" ref="0x7e5c9308"/>
        <function-ref name="toggle" scoped="" ref="0x7e5c93e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7e5c94c8"/>
        <function-ref name="get" scoped="" ref="0x7e5c95a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e5c9688"/>
        <function-ref name="set" scoped="" ref="0x7e5c9768"/>
        <function-ref name="clr" scoped="" ref="0x7e5c9848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e5c58a8" loc="62:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e5c58a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e5c5a80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e5c5b60"/>
        <function-ref name="led1On" scoped="" ref="0x7e5c5c40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e5c5d20"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e5c5e00"/>
        <function-ref name="get" scoped="" ref="0x7e5c5ee0"/>
        <function-ref name="led1Off" scoped="" ref="0x7e5c4010"/>
        <function-ref name="led2On" scoped="" ref="0x7e5c4390"/>
        <function-ref name="set" scoped="" ref="0x7e5c41d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7e5c40f0"/>
        <function-ref name="led0On" scoped="" ref="0x7e5c42b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7e5c89c0" loc="60:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e5c89c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e5c5330"/>
        <function-ref name="fired" scoped="" ref="0x7e5c76f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e5c7c90"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e5c7ab0"/>
        <function-ref name="getdt" scoped="" ref="0x7e5c56f0"/>
        <function-ref name="gett0" scoped="" ref="0x7e5c5510"/>
        <function-ref name="isRunning" scoped="" ref="0x7e5c78d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e5c7010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e5c5010"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e5c7290"/>
        <function-ref name="stop" scoped="" ref="0x7e5c7510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptDATA" ref="0x7e5b9d00" loc="47:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptDATA" scoped="" ref="0x7e5b9d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e5b9ed8"/>
        <function-ref name="disable" scoped="" ref="0x7e5b8010"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e5b80f0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e5b81d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCK" ref="0x7e5b9368" loc="46:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7e5b9368"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e5b9540"/>
        <function-ref name="isInput" scoped="" ref="0x7e5b9620"/>
        <function-ref name="toggle" scoped="" ref="0x7e5b9700"/>
        <function-ref name="isOutput" scoped="" ref="0x7e5b97e0"/>
        <function-ref name="get" scoped="" ref="0x7e5b98c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e5b99a0"/>
        <function-ref name="set" scoped="" ref="0x7e5b9a80"/>
        <function-ref name="clr" scoped="" ref="0x7e5b9b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DATA" ref="0x7e5ba9c0" loc="45:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x7e5ba9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e5bab98"/>
        <function-ref name="isInput" scoped="" ref="0x7e5bac78"/>
        <function-ref name="toggle" scoped="" ref="0x7e5bad58"/>
        <function-ref name="isOutput" scoped="" ref="0x7e5bae38"/>
        <function-ref name="get" scoped="" ref="0x7e5baf18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e5b9010"/>
        <function-ref name="set" scoped="" ref="0x7e5b90f0"/>
        <function-ref name="clr" scoped="" ref="0x7e5b91d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e5ba2d0" loc="44:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e5ba2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e5ba4a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e5ba588"/>
        <function-ref name="request" scoped="" ref="0x7e5ba668"/>
        <function-ref name="granted" scoped="" ref="0x7e5ba748"/>
        <function-ref name="isOwner" scoped="" ref="0x7e5ba828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7e5a9290" loc="43:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e5a9290"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e5a9468"/>
        <function-ref name="stopDone" scoped="" ref="0x7e5a9548"/>
        <function-ref name="start" scoped="" ref="0x7e5a9628"/>
        <function-ref name="stop" scoped="" ref="0x7e5a9708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7e5a6010" loc="49:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7e5a6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e5a61e8"/>
        <function-ref name="runTask" scoped="" ref="0x7e5a62c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7e5a7288" loc="46:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7e5a7288"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e5a7460"/>
        <function-ref name="isInput" scoped="" ref="0x7e5a7540"/>
        <function-ref name="toggle" scoped="" ref="0x7e5a7620"/>
        <function-ref name="isOutput" scoped="" ref="0x7e5a7700"/>
        <function-ref name="get" scoped="" ref="0x7e5a77e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e5a78c0"/>
        <function-ref name="set" scoped="" ref="0x7e5a79a0"/>
        <function-ref name="clr" scoped="" ref="0x7e5a7a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x7e5ab8e0" loc="45:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x7e5ab8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e5abab8"/>
        <function-ref name="isInput" scoped="" ref="0x7e5abb98"/>
        <function-ref name="toggle" scoped="" ref="0x7e5abc78"/>
        <function-ref name="isOutput" scoped="" ref="0x7e5abd58"/>
        <function-ref name="get" scoped="" ref="0x7e5abe38"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e5abf18"/>
        <function-ref name="set" scoped="" ref="0x7e5a7010"/>
        <function-ref name="clr" scoped="" ref="0x7e5a70f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7e5a9908" loc="44:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e5a9908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e5ab330"/>
        <function-ref name="fired" scoped="" ref="0x7e5b06f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e5b0c90"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e5b0ab0"/>
        <function-ref name="getdt" scoped="" ref="0x7e5ab6f0"/>
        <function-ref name="gett0" scoped="" ref="0x7e5ab510"/>
        <function-ref name="isRunning" scoped="" ref="0x7e5b08d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e5b0010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e5ab010"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e5b0290"/>
        <function-ref name="stop" scoped="" ref="0x7e5b0510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e5b4d40" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="HplSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e5b4d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e5a1650"/>
        <function-ref name="fired" scoped="" ref="0x7e5a2a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e5a1010"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e5a2e20"/>
        <function-ref name="getdt" scoped="" ref="0x7e5a1a10"/>
        <function-ref name="gett0" scoped="" ref="0x7e5a1830"/>
        <function-ref name="isRunning" scoped="" ref="0x7e5a2c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e5a2380"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e5a1330"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e5a2600"/>
        <function-ref name="stop" scoped="" ref="0x7e5a2880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x7e5917c8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x7e5917c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e5919a0"/>
        <function-ref name="fired" scoped="" ref="0x7e591a80"/>
        <function-ref name="disable" scoped="" ref="0x7e591b60"/>
        <function-ref name="edge" scoped="" ref="0x7e591c40"/>
        <function-ref name="enable" scoped="" ref="0x7e591d20"/>
        <function-ref name="getValue" scoped="" ref="0x7e591e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7e595010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7e595010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e5951e8"/>
        <function-ref name="fired" scoped="" ref="0x7e5952c8"/>
        <function-ref name="disable" scoped="" ref="0x7e5953a8"/>
        <function-ref name="edge" scoped="" ref="0x7e595488"/>
        <function-ref name="enable" scoped="" ref="0x7e595568"/>
        <function-ref name="getValue" scoped="" ref="0x7e595648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x7e5947c8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x7e5947c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e5949a0"/>
        <function-ref name="fired" scoped="" ref="0x7e594a80"/>
        <function-ref name="disable" scoped="" ref="0x7e594b60"/>
        <function-ref name="edge" scoped="" ref="0x7e594c40"/>
        <function-ref name="enable" scoped="" ref="0x7e594d20"/>
        <function-ref name="getValue" scoped="" ref="0x7e594e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x7e590010" loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x7e590010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e5901e8"/>
        <function-ref name="fired" scoped="" ref="0x7e5902c8"/>
        <function-ref name="disable" scoped="" ref="0x7e5903a8"/>
        <function-ref name="edge" scoped="" ref="0x7e590488"/>
        <function-ref name="enable" scoped="" ref="0x7e590568"/>
        <function-ref name="getValue" scoped="" ref="0x7e590648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7e5957c8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7e5957c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e5959a0"/>
        <function-ref name="fired" scoped="" ref="0x7e595a80"/>
        <function-ref name="disable" scoped="" ref="0x7e595b60"/>
        <function-ref name="edge" scoped="" ref="0x7e595c40"/>
        <function-ref name="enable" scoped="" ref="0x7e595d20"/>
        <function-ref name="getValue" scoped="" ref="0x7e595e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x7e591010" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x7e591010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e5911e8"/>
        <function-ref name="fired" scoped="" ref="0x7e5912c8"/>
        <function-ref name="disable" scoped="" ref="0x7e5913a8"/>
        <function-ref name="edge" scoped="" ref="0x7e591488"/>
        <function-ref name="enable" scoped="" ref="0x7e591568"/>
        <function-ref name="getValue" scoped="" ref="0x7e591648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7e5927f0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7e5927f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e5929c8"/>
        <function-ref name="fired" scoped="" ref="0x7e592aa8"/>
        <function-ref name="disable" scoped="" ref="0x7e592b88"/>
        <function-ref name="edge" scoped="" ref="0x7e592c68"/>
        <function-ref name="enable" scoped="" ref="0x7e592d48"/>
        <function-ref name="getValue" scoped="" ref="0x7e592e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7e594010" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7e594010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e5941e8"/>
        <function-ref name="fired" scoped="" ref="0x7e5942c8"/>
        <function-ref name="disable" scoped="" ref="0x7e5943a8"/>
        <function-ref name="edge" scoped="" ref="0x7e594488"/>
        <function-ref name="enable" scoped="" ref="0x7e594568"/>
        <function-ref name="getValue" scoped="" ref="0x7e594648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x7e586ce8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x7e586ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e586ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x7e584b80" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x7e584b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e584d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x7e5865f8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x7e5865f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e5867d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x7e585088" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x7e585088"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e585260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x7e584ef8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x7e584ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e5860e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x7e586970" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x7e586970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e586b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x7e584808" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x7e584808"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e5849e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x7e586280" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x7e586280"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e586458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e573228" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e573228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e573400"/>
        <function-ref name="fired" scoped="" ref="0x7e5734e0"/>
        <function-ref name="disable" scoped="" ref="0x7e5735c0"/>
        <function-ref name="edge" scoped="" ref="0x7e5736a0"/>
        <function-ref name="enable" scoped="" ref="0x7e573780"/>
        <function-ref name="getValue" scoped="" ref="0x7e573860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e5739e0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e5739e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e573bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e563228" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e563228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e563400"/>
        <function-ref name="fired" scoped="" ref="0x7e5634e0"/>
        <function-ref name="disable" scoped="" ref="0x7e5635c0"/>
        <function-ref name="edge" scoped="" ref="0x7e5636a0"/>
        <function-ref name="enable" scoped="" ref="0x7e563780"/>
        <function-ref name="getValue" scoped="" ref="0x7e563860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e5639e0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e5639e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e563bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e561228" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e561228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e561400"/>
        <function-ref name="fired" scoped="" ref="0x7e5614e0"/>
        <function-ref name="disable" scoped="" ref="0x7e5615c0"/>
        <function-ref name="edge" scoped="" ref="0x7e5616a0"/>
        <function-ref name="enable" scoped="" ref="0x7e561780"/>
        <function-ref name="getValue" scoped="" ref="0x7e561860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e5619e0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e5619e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e561bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e55c228" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e55c228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e55c400"/>
        <function-ref name="fired" scoped="" ref="0x7e55c4e0"/>
        <function-ref name="disable" scoped="" ref="0x7e55c5c0"/>
        <function-ref name="edge" scoped="" ref="0x7e55c6a0"/>
        <function-ref name="enable" scoped="" ref="0x7e55c780"/>
        <function-ref name="getValue" scoped="" ref="0x7e55c860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e55c9e0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e55c9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e55cbb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e5592d0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e5592d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e5594a8"/>
        <function-ref name="fired" scoped="" ref="0x7e559588"/>
        <function-ref name="disable" scoped="" ref="0x7e559668"/>
        <function-ref name="edge" scoped="" ref="0x7e559748"/>
        <function-ref name="enable" scoped="" ref="0x7e559828"/>
        <function-ref name="getValue" scoped="" ref="0x7e559908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e559a88" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e559a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e559c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e5573b0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e5573b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e557588"/>
        <function-ref name="fired" scoped="" ref="0x7e557668"/>
        <function-ref name="disable" scoped="" ref="0x7e557748"/>
        <function-ref name="edge" scoped="" ref="0x7e557828"/>
        <function-ref name="enable" scoped="" ref="0x7e557908"/>
        <function-ref name="getValue" scoped="" ref="0x7e5579e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e557b68" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e557b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e557d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e555538" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e555538"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e555710"/>
        <function-ref name="fired" scoped="" ref="0x7e5557f0"/>
        <function-ref name="disable" scoped="" ref="0x7e5558d0"/>
        <function-ref name="edge" scoped="" ref="0x7e5559b0"/>
        <function-ref name="enable" scoped="" ref="0x7e555a90"/>
        <function-ref name="getValue" scoped="" ref="0x7e555b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e555cf0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e555cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e555ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e5535e0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e5535e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e5537b8"/>
        <function-ref name="fired" scoped="" ref="0x7e553898"/>
        <function-ref name="disable" scoped="" ref="0x7e553978"/>
        <function-ref name="edge" scoped="" ref="0x7e553a58"/>
        <function-ref name="enable" scoped="" ref="0x7e553b38"/>
        <function-ref name="getValue" scoped="" ref="0x7e553c18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e553d98" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e553d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e552010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7e549050" loc="9:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7e549050"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e549228"/>
        <function-ref name="fired" scoped="" ref="0x7e549308"/>
        <function-ref name="disable" scoped="" ref="0x7e5493e8"/>
        <function-ref name="edge" scoped="" ref="0x7e5494c8"/>
        <function-ref name="enable" scoped="" ref="0x7e5495a8"/>
        <function-ref name="getValue" scoped="" ref="0x7e549688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7e54aa28" loc="8:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7e54aa28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e54ac00"/>
        <function-ref name="disable" scoped="" ref="0x7e54ace0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e54adc0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e54aea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7e53cc20" loc="82:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7e53cc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7e53ce08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7e53cee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7e4e6b88" loc="86:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7e4e6b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7e4e6d70"/>
        <function-ref name="configure" scoped="" ref="0x7e4e6e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceController" ref="0x7e4e6040" loc="83:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceController" scoped="" ref="0x7e4e6040"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceController"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e4e6218"/>
        <function-ref name="requested" scoped="" ref="0x7e4e62f8"/>
        <function-ref name="granted" scoped="" ref="0x7e4e63d8"/>
        <function-ref name="isOwner" scoped="" ref="0x7e4e64b8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7e4e6598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e53c4e0" loc="81:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e53c4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e53c6c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e53c7a8"/>
        <function-ref name="request" scoped="" ref="0x7e53c888"/>
        <function-ref name="granted" scoped="" ref="0x7e53c968"/>
        <function-ref name="isOwner" scoped="" ref="0x7e53ca48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7e4e66d8" loc="84:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7e4e66d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7e4e68b0"/>
        <function-ref name="userId" scoped="" ref="0x7e4e6990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d960a30" loc="34:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d960a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d960c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7d960d68" loc="35:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7d960d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7d95d010"/>
        <function-ref name="isEmpty" scoped="" ref="0x7d95d0f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7d95d1d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7d95d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7d95c750" loc="54:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7d95c750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7d95c938"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7d95ca18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7d95b6f0" loc="59:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7d95b6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7d95b8d8"/>
        <function-ref name="configure" scoped="" ref="0x7d95b9b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7d95bb18" loc="60:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7d95bb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7d95bcf0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7d95bdd0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7d95beb0"/>
        <function-ref name="dequeue" scoped="" ref="0x7d959010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceController" ref="0x7d95cb58" loc="55:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceController" scoped="" ref="0x7d95cb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceController"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d95cd30"/>
        <function-ref name="requested" scoped="" ref="0x7d95ce10"/>
        <function-ref name="granted" scoped="" ref="0x7d95cef0"/>
        <function-ref name="isOwner" scoped="" ref="0x7d95b010"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7d95b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7d959150" loc="61:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7d959150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7d959328"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7d959408"/>
        <function-ref name="led1On" scoped="" ref="0x7d9594e8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7d9595c8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7d9596a8"/>
        <function-ref name="get" scoped="" ref="0x7d959788"/>
        <function-ref name="led1Off" scoped="" ref="0x7d959868"/>
        <function-ref name="led0On" scoped="" ref="0x7d959be8"/>
        <function-ref name="set" scoped="" ref="0x7d959a28"/>
        <function-ref name="led2On" scoped="" ref="0x7d959948"/>
        <function-ref name="led2Off" scoped="" ref="0x7d959b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7d95c010" loc="53:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7d95c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d95c1f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d95c2d8"/>
        <function-ref name="request" scoped="" ref="0x7d95c3b8"/>
        <function-ref name="granted" scoped="" ref="0x7d95c498"/>
        <function-ref name="isOwner" scoped="" ref="0x7d95c578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7d95b230" loc="56:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7d95b230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7d95b408"/>
        <function-ref name="userId" scoped="" ref="0x7d95b4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7d959d68" loc="73:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7d959d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d958010"/>
        <function-ref name="runTask" scoped="" ref="0x7d9580f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7e4e2980" loc="59:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e4e2980"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e4e2b58"/>
        <function-ref name="stopDone" scoped="" ref="0x7e4e2c38"/>
        <function-ref name="start" scoped="" ref="0x7e4e2d18"/>
        <function-ref name="stop" scoped="" ref="0x7e4e2df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7e4e1010" loc="61:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7e4e1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7e4e11e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceController" ref="0x7e4e1328" loc="62:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceController" scoped="" ref="0x7e4e1328"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceController"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e4e1500"/>
        <function-ref name="requested" scoped="" ref="0x7e4e15e0"/>
        <function-ref name="granted" scoped="" ref="0x7e4e16c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7e4e17a0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7e4e1880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7e4e19c0" loc="63:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7e4e19c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7e4e1b98"/>
        <function-ref name="userId" scoped="" ref="0x7e4e1c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7d941ef8" loc="51:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7d941ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7d93f0e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7d93f1c0"/>
        <function-ref name="start" scoped="" ref="0x7d93f2a0"/>
        <function-ref name="stop" scoped="" ref="0x7d93f380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7d93f4c0" loc="53:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7d93f4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7d93f698"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7d93e2d0" loc="68:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7d93e2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d93e4a8"/>
        <function-ref name="runTask" scoped="" ref="0x7d93e588"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceController" ref="0x7d93f7d8" loc="54:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceController" scoped="" ref="0x7d93f7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceController"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d93f9b0"/>
        <function-ref name="requested" scoped="" ref="0x7d93fa90"/>
        <function-ref name="granted" scoped="" ref="0x7d93fb70"/>
        <function-ref name="isOwner" scoped="" ref="0x7d93fc50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7d93fd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7d93e708" loc="63:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7d93e708"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d93e8e0"/>
        <function-ref name="runTask" scoped="" ref="0x7d93e9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7d941b00" loc="50:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7d941b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d941cd8"/>
        <function-ref name="stop" scoped="" ref="0x7d941db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7d93fe70" loc="55:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7d93fe70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7d93e070"/>
        <function-ref name="userId" scoped="" ref="0x7d93e150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e4c05d8" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="HalSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e4c05d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e4bded0"/>
        <function-ref name="fired" scoped="" ref="0x7e4bd2f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e4bd890"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e4bd6b0"/>
        <function-ref name="getdt" scoped="" ref="0x7e4bb2b8"/>
        <function-ref name="gett0" scoped="" ref="0x7e4bb0d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7e4bd4d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e4c0c00"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e4bdbb0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e4c0e80"/>
        <function-ref name="stop" scoped="" ref="0x7e4bd110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7e4acac8" loc="21:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoSensorC.nc">
      <component-ref qname="InteractionC.PhotoSensorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7e4acac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e4b3108"/>
        <function-ref name="readDone" scoped="" ref="0x7e4b32e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7d932120" loc="28:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoC.nc">
      <component-ref qname="InteractionC.PhotoSensorC.DemoChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7d932120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d932748"/>
        <function-ref name="readDone" scoped="" ref="0x7d932928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7d930890" loc="28:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc">
      <component-ref qname="InteractionC.PhotoSensorC.DemoChannel.ADC_ShiftM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7d930890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d930eb8"/>
        <function-ref name="readDone" scoped="" ref="0x7d92e0b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="subRead" ref="0x7d92e460" loc="29:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc">
      <component-ref qname="InteractionC.PhotoSensorC.DemoChannel.ADC_ShiftM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="subRead" scoped="" ref="0x7d92e460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d92ea88"/>
        <function-ref name="readDone" scoped="" ref="0x7d92ec68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7d92d8c0" loc="27:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoProC.nc">
      <component-ref qname="InteractionC.PhotoSensorC.DemoChannel.PhotoProC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7d92d8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d92dee8"/>
        <function-ref name="readDone" scoped="" ref="0x7d92c0d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7d929e28" loc="25:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="InteractionC.PhotoSensorC.DemoChannel.PhotoProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7d929e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7d928050"/>
        <function-ref name="configure" scoped="" ref="0x7d928130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7d92be30" loc="22:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="InteractionC.PhotoSensorC.DemoChannel.PhotoProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7d92be30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d929468"/>
        <function-ref name="readDone" scoped="" ref="0x7d929648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7d929950" loc="24:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="InteractionC.PhotoSensorC.DemoChannel.PhotoProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d929950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7d929b28"/>
        <function-ref name="getChannel" scoped="" ref="0x7d929c08"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7d929ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7e48b800" loc="18:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7e48b800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e48be28"/>
        <function-ref name="readDone" scoped="" ref="0x7e48a048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7e484390" loc="19:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7e484390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e4849d8"/>
        <function-ref name="readDone" scoped="" ref="0x7e484bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7e4871a8" loc="22:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e4871a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7e487380"/>
        <function-ref name="getChannel" scoped="" ref="0x7e487460"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7e487540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7e487920" loc="23:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e487920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e487af8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e487bd8"/>
        <function-ref name="request" scoped="" ref="0x7e487cb8"/>
        <function-ref name="granted" scoped="" ref="0x7e487d98"/>
        <function-ref name="isOwner" scoped="" ref="0x7e487e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7e479100" loc="49:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7e479100"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7e4792d8"/>
        <function-ref name="configure" scoped="" ref="0x7e4793b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x7e4719c0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7e4719c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7e471b98"/>
        <function-ref name="dataReady" scoped="" ref="0x7e471c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x7e476568" loc="46:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7e476568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7e476740"/>
        <function-ref name="cancel" scoped="" ref="0x7e476820"/>
        <function-ref name="dataReady" scoped="" ref="0x7e476900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e4806e8" loc="45:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e4806e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e4808c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e4809a0"/>
        <function-ref name="request" scoped="" ref="0x7e480a80"/>
        <function-ref name="granted" scoped="" ref="0x7e480b60"/>
        <function-ref name="isOwner" scoped="" ref="0x7e480c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e46bd30" loc="65:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e46bd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e46bf08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x7e468040" loc="68:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7e468040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7e468218"/>
        <function-ref name="dataReady" scoped="" ref="0x7e4682f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x7e466b18" loc="67:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7e466b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7e466cf0"/>
        <function-ref name="cancel" scoped="" ref="0x7e466dd0"/>
        <function-ref name="dataReady" scoped="" ref="0x7e466eb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x7e45a468" loc="71:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7e45a468"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7e45a640"/>
        <function-ref name="getAdmux" scoped="" ref="0x7e45a720"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7e45a800"/>
        <function-ref name="isEnabled" scoped="" ref="0x7e45a8e0"/>
        <function-ref name="enableAdc" scoped="" ref="0x7e45a9c0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7e45aaa0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7e45ab80"/>
        <function-ref name="isComplete" scoped="" ref="0x7e45ac60"/>
        <function-ref name="cancel" scoped="" ref="0x7e45ad40"/>
        <function-ref name="disableAdc" scoped="" ref="0x7e45ae20"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7e45af00"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7e465010"/>
        <function-ref name="startConversion" scoped="" ref="0x7e4650f0"/>
        <function-ref name="isStarted" scoped="" ref="0x7e465250"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7e465330"/>
        <function-ref name="setContinuous" scoped="" ref="0x7e465410"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7e4654f0"/>
        <function-ref name="getValue" scoped="" ref="0x7e4655d0"/>
        <function-ref name="dataReady" scoped="" ref="0x7e4656b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7e466710" loc="66:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7e466710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e4668e8"/>
        <function-ref name="stop" scoped="" ref="0x7e4669c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7e465800" loc="72:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7e465800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7e4659d8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7e465ab8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7e465b98"/>
        <function-ref name="actualMicro" scoped="" ref="0x7e465c78"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7e465d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x7e43d468" loc="36:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7e43d468"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7e43d640"/>
        <function-ref name="getAdmux" scoped="" ref="0x7e43d720"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7e43d800"/>
        <function-ref name="isEnabled" scoped="" ref="0x7e43d8e0"/>
        <function-ref name="enableAdc" scoped="" ref="0x7e43d9c0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7e43daa0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7e43db80"/>
        <function-ref name="isComplete" scoped="" ref="0x7e43dc60"/>
        <function-ref name="cancel" scoped="" ref="0x7e43dd40"/>
        <function-ref name="disableAdc" scoped="" ref="0x7e43de20"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7e43df00"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7e43c010"/>
        <function-ref name="startConversion" scoped="" ref="0x7e43c0f0"/>
        <function-ref name="isStarted" scoped="" ref="0x7e43c250"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7e43c330"/>
        <function-ref name="setContinuous" scoped="" ref="0x7e43c410"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7e43c4f0"/>
        <function-ref name="getValue" scoped="" ref="0x7e43c5d0"/>
        <function-ref name="dataReady" scoped="" ref="0x7e43c6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x7e438c70" loc="36:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7e438c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7e438e48"/>
        <function-ref name="getAdmux" scoped="" ref="0x7e438f28"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7e437018"/>
        <function-ref name="isEnabled" scoped="" ref="0x7e4370f8"/>
        <function-ref name="enableAdc" scoped="" ref="0x7e4371d8"/>
        <function-ref name="setAdmux" scoped="" ref="0x7e4372b8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7e437398"/>
        <function-ref name="isComplete" scoped="" ref="0x7e437478"/>
        <function-ref name="cancel" scoped="" ref="0x7e437558"/>
        <function-ref name="disableAdc" scoped="" ref="0x7e437638"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7e437718"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7e4377f8"/>
        <function-ref name="startConversion" scoped="" ref="0x7e4378d8"/>
        <function-ref name="isStarted" scoped="" ref="0x7e437a38"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7e437b18"/>
        <function-ref name="setContinuous" scoped="" ref="0x7e437bf8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7e437cd8"/>
        <function-ref name="getValue" scoped="" ref="0x7e437db8"/>
        <function-ref name="dataReady" scoped="" ref="0x7e437e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7e436040" loc="37:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7e436040"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7e436218"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7e3fd808" loc="82:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7e3fd808"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7e3fd9f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7e3fdad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7e3fc7c0" loc="86:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7e3fc7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7e3fc9a8"/>
        <function-ref name="configure" scoped="" ref="0x7e3fca88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceController" ref="0x7e3fdc10" loc="83:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceController" scoped="" ref="0x7e3fdc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceController"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e3fdde8"/>
        <function-ref name="requested" scoped="" ref="0x7e3fdec8"/>
        <function-ref name="granted" scoped="" ref="0x7e3fc010"/>
        <function-ref name="isOwner" scoped="" ref="0x7e3fc0f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7e3fc1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e3fd0c8" loc="81:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e3fd0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e3fd2b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e3fd390"/>
        <function-ref name="request" scoped="" ref="0x7e3fd470"/>
        <function-ref name="granted" scoped="" ref="0x7e3fd550"/>
        <function-ref name="isOwner" scoped="" ref="0x7e3fd630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7e3fc310" loc="84:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7e3fc310"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7e3fc4e8"/>
        <function-ref name="userId" scoped="" ref="0x7e3fc5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d921d90" loc="34:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d921d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d91f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7d91f170" loc="35:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7d91f170"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7d91f348"/>
        <function-ref name="isEmpty" scoped="" ref="0x7d91f428"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7d91f508"/>
        <function-ref name="dequeue" scoped="" ref="0x7d91f5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7d91da28" loc="54:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7d91da28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7d91dc10"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7d91dcf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7d91c9d0" loc="59:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7d91c9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7d91cbb8"/>
        <function-ref name="configure" scoped="" ref="0x7d91cc98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7d91cdf8" loc="60:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7d91cdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7d91b010"/>
        <function-ref name="isEmpty" scoped="" ref="0x7d91b0f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7d91b1d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7d91b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceController" ref="0x7d91de30" loc="55:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceController" scoped="" ref="0x7d91de30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceController"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d91c050"/>
        <function-ref name="requested" scoped="" ref="0x7d91c130"/>
        <function-ref name="granted" scoped="" ref="0x7d91c210"/>
        <function-ref name="isOwner" scoped="" ref="0x7d91c2f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7d91c3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7d91b3f0" loc="61:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7d91b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7d91b5c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7d91b6a8"/>
        <function-ref name="led1On" scoped="" ref="0x7d91b788"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7d91b868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7d91b948"/>
        <function-ref name="get" scoped="" ref="0x7d91ba28"/>
        <function-ref name="led1Off" scoped="" ref="0x7d91bb08"/>
        <function-ref name="led0On" scoped="" ref="0x7d91be88"/>
        <function-ref name="set" scoped="" ref="0x7d91bcc8"/>
        <function-ref name="led2On" scoped="" ref="0x7d91bbe8"/>
        <function-ref name="led2Off" scoped="" ref="0x7d91bda8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7d91d2e8" loc="53:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7d91d2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d91d4d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d91d5b0"/>
        <function-ref name="request" scoped="" ref="0x7d91d690"/>
        <function-ref name="granted" scoped="" ref="0x7d91d770"/>
        <function-ref name="isOwner" scoped="" ref="0x7d91d850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7d91c510" loc="56:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7d91c510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7d91c6e8"/>
        <function-ref name="userId" scoped="" ref="0x7d91c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7d91a030" loc="73:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7d91a030"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d91a208"/>
        <function-ref name="runTask" scoped="" ref="0x7d91a2e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7e3f8230" loc="62:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7e3f8230"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7e3f8408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceController" ref="0x7e3f8548" loc="63:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceController" scoped="" ref="0x7e3f8548"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceController"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e3f8720"/>
        <function-ref name="requested" scoped="" ref="0x7e3f8800"/>
        <function-ref name="granted" scoped="" ref="0x7e3f88e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7e3f89c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7e3f8aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7e3f9da8" loc="60:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7e3f9da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e3f8010"/>
        <function-ref name="stop" scoped="" ref="0x7e3f80f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7e3f8be0" loc="64:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7e3f8be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7e3f8db8"/>
        <function-ref name="userId" scoped="" ref="0x7e3f8e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7d900408" loc="52:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7d900408"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7d9005e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceController" ref="0x7d900720" loc="53:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceController" scoped="" ref="0x7d900720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceController"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d9008f8"/>
        <function-ref name="requested" scoped="" ref="0x7d9009d8"/>
        <function-ref name="granted" scoped="" ref="0x7d900ab8"/>
        <function-ref name="isOwner" scoped="" ref="0x7d900b98"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7d900c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7d900010" loc="50:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7d900010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d9001e8"/>
        <function-ref name="stop" scoped="" ref="0x7d9002c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7d900db8" loc="54:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7d900db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7d8ff010"/>
        <function-ref name="userId" scoped="" ref="0x7d8ff0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7e3e5700" loc="48:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7e3e5700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e3e5d28"/>
        <function-ref name="readDone" scoped="" ref="0x7e3e5f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7e3e4530" loc="49:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7e3e4530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e3e4b78"/>
        <function-ref name="readDone" scoped="" ref="0x7e3e4d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7e3e3838" loc="53:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e3e3838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7e3e3a10"/>
        <function-ref name="getChannel" scoped="" ref="0x7e3e3af0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7e3e3bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x7e3e30c0" loc="52:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7e3e30c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7e3e3298"/>
        <function-ref name="cancel" scoped="" ref="0x7e3e3378"/>
        <function-ref name="dataReady" scoped="" ref="0x7e3e3458"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x7e3dad10" loc="103:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x7e3dad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e3daee8"/>
        <function-ref name="runTask" scoped="" ref="0x7e3d8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7e3cd670" loc="24:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7e3cd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e3cdca8"/>
        <function-ref name="readDone" scoped="" ref="0x7e3cde98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7e3cc318" loc="26:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7e3cc318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e3cc950"/>
        <function-ref name="readDone" scoped="" ref="0x7e3ccb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7e3ccec0" loc="27:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e3ccec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e3be0c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e3be1a0"/>
        <function-ref name="request" scoped="" ref="0x7e3be280"/>
        <function-ref name="granted" scoped="" ref="0x7e3be360"/>
        <function-ref name="isOwner" scoped="" ref="0x7e3be440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7e3b7690" loc="31:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoDeviceP.nc">
      <component-ref qname="PhotoDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7e3b7690"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7e3b7868"/>
        <function-ref name="configure" scoped="" ref="0x7e3b7948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x7e3b7a98" loc="32:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoDeviceP.nc">
      <component-ref qname="PhotoDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e3b7a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7e3b7c70"/>
        <function-ref name="getChannel" scoped="" ref="0x7e3b7d50"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7e3b7e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7e3b6d80" loc="30:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoP.nc">
      <component-ref qname="PhotoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7e3b6d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7e3b2010"/>
        <function-ref name="configure" scoped="" ref="0x7e3b20f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoPin" ref="0x7e3b2798" loc="34:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoP.nc">
      <component-ref qname="PhotoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoPin" scoped="" ref="0x7e3b2798"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e3b2970"/>
        <function-ref name="isInput" scoped="" ref="0x7e3b2a50"/>
        <function-ref name="toggle" scoped="" ref="0x7e3b2b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7e3b2c10"/>
        <function-ref name="get" scoped="" ref="0x7e3b2cf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e3b2dd0"/>
        <function-ref name="set" scoped="" ref="0x7e3b2eb0"/>
        <function-ref name="clr" scoped="" ref="0x7e3b1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x7e3b2240" loc="31:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoP.nc">
      <component-ref qname="PhotoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e3b2240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7e3b2418"/>
        <function-ref name="getChannel" scoped="" ref="0x7e3b24f8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7e3b25d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e3ad410" loc="36:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoP.nc">
      <component-ref qname="PhotoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e3ad410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e3ad5e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e3ad6c8"/>
        <function-ref name="led1On" scoped="" ref="0x7e3ad7a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e3ad888"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e3ad968"/>
        <function-ref name="get" scoped="" ref="0x7e3ada48"/>
        <function-ref name="led1Off" scoped="" ref="0x7e3adb28"/>
        <function-ref name="led2Off" scoped="" ref="0x7e3adea8"/>
        <function-ref name="set" scoped="" ref="0x7e3adc08"/>
        <function-ref name="led0On" scoped="" ref="0x7e3adce8"/>
        <function-ref name="led2On" scoped="" ref="0x7e3addc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoAdc" ref="0x7e3ad0f0" loc="35:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/PhotoP.nc">
      <component-ref qname="PhotoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoAdc" scoped="" ref="0x7e3ad0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e3ad2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x7e3a3e78" loc="40:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x7e3a3e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e3a2070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW3" ref="0x7e3a6428" loc="32:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW3" scoped="" ref="0x7e3a6428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e3a6600"/>
        <function-ref name="isInput" scoped="" ref="0x7e3a66e0"/>
        <function-ref name="toggle" scoped="" ref="0x7e3a67c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e3a68a0"/>
        <function-ref name="get" scoped="" ref="0x7e3a6980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e3a6a60"/>
        <function-ref name="set" scoped="" ref="0x7e3a6b40"/>
        <function-ref name="clr" scoped="" ref="0x7e3a6c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW6" ref="0x7e3a4188" loc="35:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW6" scoped="" ref="0x7e3a4188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e3a4360"/>
        <function-ref name="isInput" scoped="" ref="0x7e3a4440"/>
        <function-ref name="toggle" scoped="" ref="0x7e3a4520"/>
        <function-ref name="isOutput" scoped="" ref="0x7e3a4600"/>
        <function-ref name="get" scoped="" ref="0x7e3a46e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e3a47c0"/>
        <function-ref name="set" scoped="" ref="0x7e3a48a0"/>
        <function-ref name="clr" scoped="" ref="0x7e3a4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x7e3a2888" loc="43:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x7e3a2888"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e3a2ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x7e3a1010" loc="45:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x7e3a1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e3a11e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW1" ref="0x7e3a7088" loc="30:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW1" scoped="" ref="0x7e3a7088"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e3a7260"/>
        <function-ref name="isInput" scoped="" ref="0x7e3a7340"/>
        <function-ref name="toggle" scoped="" ref="0x7e3a7420"/>
        <function-ref name="isOutput" scoped="" ref="0x7e3a7500"/>
        <function-ref name="get" scoped="" ref="0x7e3a75e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e3a76c0"/>
        <function-ref name="set" scoped="" ref="0x7e3a77a0"/>
        <function-ref name="clr" scoped="" ref="0x7e3a7880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW4" ref="0x7e3a6d98" loc="33:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW4" scoped="" ref="0x7e3a6d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e3a5010"/>
        <function-ref name="isInput" scoped="" ref="0x7e3a50f0"/>
        <function-ref name="toggle" scoped="" ref="0x7e3a51d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e3a52b0"/>
        <function-ref name="get" scoped="" ref="0x7e3a5390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e3a5470"/>
        <function-ref name="set" scoped="" ref="0x7e3a5550"/>
        <function-ref name="clr" scoped="" ref="0x7e3a5630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7e3a3508" loc="37:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7e3a3508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e3a36e0"/>
        <function-ref name="isInput" scoped="" ref="0x7e3a37c0"/>
        <function-ref name="toggle" scoped="" ref="0x7e3a38a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e3a3980"/>
        <function-ref name="get" scoped="" ref="0x7e3a3a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e3a3b40"/>
        <function-ref name="set" scoped="" ref="0x7e3a3c20"/>
        <function-ref name="clr" scoped="" ref="0x7e3a3d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x7e3a21e8" loc="41:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x7e3a21e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e3a23c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW7" ref="0x7e3a4af8" loc="36:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW7" scoped="" ref="0x7e3a4af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e3a4cd0"/>
        <function-ref name="isInput" scoped="" ref="0x7e3a4db0"/>
        <function-ref name="toggle" scoped="" ref="0x7e3a4e90"/>
        <function-ref name="isOutput" scoped="" ref="0x7e3a3010"/>
        <function-ref name="get" scoped="" ref="0x7e3a30f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e3a31d0"/>
        <function-ref name="set" scoped="" ref="0x7e3a32b0"/>
        <function-ref name="clr" scoped="" ref="0x7e3a3390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x7e3a1360" loc="46:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x7e3a1360"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e3a1538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW2" ref="0x7e3a79f8" loc="31:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW2" scoped="" ref="0x7e3a79f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e3a7bd0"/>
        <function-ref name="isInput" scoped="" ref="0x7e3a7cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7e3a7d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7e3a7e70"/>
        <function-ref name="get" scoped="" ref="0x7e3a6010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e3a60f0"/>
        <function-ref name="set" scoped="" ref="0x7e3a61d0"/>
        <function-ref name="clr" scoped="" ref="0x7e3a62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW5" ref="0x7e3a57a8" loc="34:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW5" scoped="" ref="0x7e3a57a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e3a5980"/>
        <function-ref name="isInput" scoped="" ref="0x7e3a5a60"/>
        <function-ref name="toggle" scoped="" ref="0x7e3a5b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7e3a5c20"/>
        <function-ref name="get" scoped="" ref="0x7e3a5d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e3a5de0"/>
        <function-ref name="set" scoped="" ref="0x7e3a5ec0"/>
        <function-ref name="clr" scoped="" ref="0x7e3a4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x7e3a2538" loc="42:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x7e3a2538"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e3a2710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x7e3a2c58" loc="44:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x7e3a2c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e3a2e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x7e3a16b0" loc="47:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x7e3a16b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e3a1888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW0" ref="0x7e3a86e8" loc="29:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW0" scoped="" ref="0x7e3a86e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e3a88c0"/>
        <function-ref name="isInput" scoped="" ref="0x7e3a89a0"/>
        <function-ref name="toggle" scoped="" ref="0x7e3a8a80"/>
        <function-ref name="isOutput" scoped="" ref="0x7e3a8b60"/>
        <function-ref name="get" scoped="" ref="0x7e3a8c40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e3a8d20"/>
        <function-ref name="set" scoped="" ref="0x7e3a8e00"/>
        <function-ref name="clr" scoped="" ref="0x7e3a8ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x7e39e908" loc="29:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusP.nc">
      <component-ref qname="ZigbexBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x7e39e908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e39eae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x7e39b360" loc="32:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusP.nc">
      <component-ref qname="ZigbexBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x7e39b360"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e39b538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x7e39ba00" loc="34:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusP.nc">
      <component-ref qname="ZigbexBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x7e39ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e39bbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x7e39ec58" loc="30:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusP.nc">
      <component-ref qname="ZigbexBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x7e39ec58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e39ee30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x7e39bd50" loc="35:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusP.nc">
      <component-ref qname="ZigbexBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x7e39bd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e39bf28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x7e39b010" loc="31:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusP.nc">
      <component-ref qname="ZigbexBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x7e39b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e39b1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x7e39b6b0" loc="33:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusP.nc">
      <component-ref qname="ZigbexBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x7e39b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e39b888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x7e39a0b0" loc="36:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusP.nc">
      <component-ref qname="ZigbexBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x7e39a0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e39a288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7e3b8990" loc="21:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredSensorC.nc">
      <component-ref qname="InteractionC.UltraredSensorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7e3b8990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e391010"/>
        <function-ref name="readDone" scoped="" ref="0x7e3911f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7d8f57a8" loc="28:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredC.nc">
      <component-ref qname="InteractionC.UltraredSensorC.DemoChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7d8f57a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d8f5dd0"/>
        <function-ref name="readDone" scoped="" ref="0x7d8f4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7d8f3010" loc="28:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc">
      <component-ref qname="InteractionC.UltraredSensorC.DemoChannel.ADC_ShiftM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7d8f3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d8f3638"/>
        <function-ref name="readDone" scoped="" ref="0x7d8f3818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="subRead" ref="0x7d8f3bc0" loc="29:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc">
      <component-ref qname="InteractionC.UltraredSensorC.DemoChannel.ADC_ShiftM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="subRead" scoped="" ref="0x7d8f3bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d8f1218"/>
        <function-ref name="readDone" scoped="" ref="0x7d8f13f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7d8f0010" loc="30:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredProC.nc">
      <component-ref qname="InteractionC.UltraredSensorC.DemoChannel.UltraredProC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7d8f0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d8f0638"/>
        <function-ref name="readDone" scoped="" ref="0x7d8f0818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7d8eb598" loc="25:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="InteractionC.UltraredSensorC.DemoChannel.UltraredProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7d8eb598"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7d8eb770"/>
        <function-ref name="configure" scoped="" ref="0x7d8eb850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7d8ec588" loc="22:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="InteractionC.UltraredSensorC.DemoChannel.UltraredProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7d8ec588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d8ecbb0"/>
        <function-ref name="readDone" scoped="" ref="0x7d8ecd90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7d8eb0c0" loc="24:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="InteractionC.UltraredSensorC.DemoChannel.UltraredProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d8eb0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7d8eb298"/>
        <function-ref name="getChannel" scoped="" ref="0x7d8eb378"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7d8eb458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7e37b060" loc="31:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredDeviceP.nc">
      <component-ref qname="UltraredDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7e37b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7e37b238"/>
        <function-ref name="configure" scoped="" ref="0x7e37b318"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x7e37b468" loc="32:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredDeviceP.nc">
      <component-ref qname="UltraredDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e37b468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7e37b640"/>
        <function-ref name="getChannel" scoped="" ref="0x7e37b720"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7e37b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7e377758" loc="30:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredP.nc">
      <component-ref qname="UltraredP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7e377758"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7e377930"/>
        <function-ref name="configure" scoped="" ref="0x7e377a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UltraredAdc" ref="0x7e376a58" loc="35:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredP.nc">
      <component-ref qname="UltraredP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UltraredAdc" scoped="" ref="0x7e376a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e376c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UltraredPin" ref="0x7e3760e0" loc="34:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredP.nc">
      <component-ref qname="UltraredP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UltraredPin" scoped="" ref="0x7e3760e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e3762b8"/>
        <function-ref name="isInput" scoped="" ref="0x7e376398"/>
        <function-ref name="toggle" scoped="" ref="0x7e376478"/>
        <function-ref name="isOutput" scoped="" ref="0x7e376558"/>
        <function-ref name="get" scoped="" ref="0x7e376638"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e376718"/>
        <function-ref name="set" scoped="" ref="0x7e3767f8"/>
        <function-ref name="clr" scoped="" ref="0x7e3768d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x7e377b60" loc="31:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredP.nc">
      <component-ref qname="UltraredP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e377b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7e377d38"/>
        <function-ref name="getChannel" scoped="" ref="0x7e377e18"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7e377ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CommunicationWithOPT" ref="0x7e37cb58" loc="23:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTC.nc">
      <component-ref qname="CommunicationWithOPTC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CommunicationWithOPT" scoped="" ref="0x7e37cb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CommunicationWithOPT"/>
      </instance>
      <interface-functions>
        <function-ref name="parsing_config" scoped="" ref="0x7e370630"/>
        <function-ref name="RequestLongMSG" scoped="" ref="0x7e37ce10"/>
        <function-ref name="SpecialControlMSG" scoped="" ref="0x7e37cef0"/>
        <function-ref name="parsing_control" scoped="" ref="0x7e370010"/>
        <function-ref name="parsing_longDT" scoped="" ref="0x7e3700f0"/>
        <function-ref name="RequestSensorMSG" scoped="" ref="0x7e3701d0"/>
        <function-ref name="SendConfigureMSG" scoped="" ref="0x7e3702b0"/>
        <function-ref name="SendLongMSG" scoped="" ref="0x7e370390"/>
        <function-ref name="start" scoped="" ref="0x7e370470"/>
        <function-ref name="SendControlMSG" scoped="" ref="0x7e370550"/>
        <function-ref name="parsing_sensor" scoped="" ref="0x7e37cd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HPLUART" ref="0x7e3649c8" loc="25:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTM.nc">
      <component-ref qname="CommunicationWithOPTM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HPLUART" scoped="" ref="0x7e3649c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7e364ba0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7e364c80"/>
        <function-ref name="rxDone" scoped="" ref="0x7e364d60"/>
        <function-ref name="txDone" scoped="" ref="0x7e364e40"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7e364f20"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7e368018"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7e3680f8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7e3681d8"/>
        <function-ref name="tx" scoped="" ref="0x7e3682b8"/>
        <function-ref name="rx" scoped="" ref="0x7e368398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x7e36b2a8" loc="23:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTM.nc">
      <component-ref qname="CommunicationWithOPTM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x7e36b2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e36b480"/>
        <function-ref name="stop" scoped="" ref="0x7e36b560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CommunicationWithOPT" ref="0x7e36c5e8" loc="21:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTM.nc">
      <component-ref qname="CommunicationWithOPTM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CommunicationWithOPT" scoped="" ref="0x7e36c5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CommunicationWithOPT"/>
      </instance>
      <interface-functions>
        <function-ref name="parsing_config" scoped="" ref="0x7e36b0f0"/>
        <function-ref name="RequestLongMSG" scoped="" ref="0x7e36c8a0"/>
        <function-ref name="SpecialControlMSG" scoped="" ref="0x7e36c980"/>
        <function-ref name="parsing_control" scoped="" ref="0x7e36ca60"/>
        <function-ref name="parsing_longDT" scoped="" ref="0x7e36cb40"/>
        <function-ref name="RequestSensorMSG" scoped="" ref="0x7e36cc20"/>
        <function-ref name="SendConfigureMSG" scoped="" ref="0x7e36cd00"/>
        <function-ref name="SendLongMSG" scoped="" ref="0x7e36cde0"/>
        <function-ref name="start" scoped="" ref="0x7e36cec0"/>
        <function-ref name="SendControlMSG" scoped="" ref="0x7e36b010"/>
        <function-ref name="parsing_sensor" scoped="" ref="0x7e36c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x7e36b6e8" loc="24:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTM.nc">
      <component-ref qname="CommunicationWithOPTM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x7e36b6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e36b8c0"/>
        <function-ref name="stop" scoped="" ref="0x7e36b9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCSuartDBG" ref="0x7e3684e8" loc="26:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Interaction/CommunicationWithOPTM.nc">
      <component-ref qname="CommunicationWithOPTM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCSuartDBG" scoped="" ref="0x7e3684e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SCSuartDBG"/>
      </instance>
      <interface-functions>
        <function-ref name="UARTSend" scoped="" ref="0x7e3686c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7e310b90" loc="40:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7e310b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7e310d68"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7e310e48"/>
        <function-ref name="rxDone" scoped="" ref="0x7e310f28"/>
        <function-ref name="txDone" scoped="" ref="0x7e30f018"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7e30f0f8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7e30f1d8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7e30f2b8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7e30f398"/>
        <function-ref name="tx" scoped="" ref="0x7e30f478"/>
        <function-ref name="rx" scoped="" ref="0x7e30f558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7e30e010" loc="44:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7e30e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7e30e1e8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7e30e2c8"/>
        <function-ref name="rxDone" scoped="" ref="0x7e30e3a8"/>
        <function-ref name="txDone" scoped="" ref="0x7e30e488"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7e30e568"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7e30e648"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7e30e728"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7e30e808"/>
        <function-ref name="tx" scoped="" ref="0x7e30e8e8"/>
        <function-ref name="rx" scoped="" ref="0x7e30e9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7e310758" loc="39:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7e310758"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e310930"/>
        <function-ref name="stop" scoped="" ref="0x7e310a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7e30f6d8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7e30f6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e30f8b0"/>
        <function-ref name="stop" scoped="" ref="0x7e30f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7e30fb10" loc="43:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7e30fb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e30fce8"/>
        <function-ref name="stop" scoped="" ref="0x7e30fdc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7e310320" loc="38:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7e310320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e3104f8"/>
        <function-ref name="stop" scoped="" ref="0x7e3105d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x7e30cdc8" loc="71:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x7e30cdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e309010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7e309a60" loc="74:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7e309a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7e309c38"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7e309d18"/>
        <function-ref name="rxDone" scoped="" ref="0x7e309df8"/>
        <function-ref name="txDone" scoped="" ref="0x7e309ed8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7e308010"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7e3080f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7e3081d0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7e3082b0"/>
        <function-ref name="tx" scoped="" ref="0x7e308390"/>
        <function-ref name="rx" scoped="" ref="0x7e308470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x7e308608" loc="76:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x7e308608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e3087e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7e307290" loc="79:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7e307290"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7e307468"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7e307548"/>
        <function-ref name="rxDone" scoped="" ref="0x7e307628"/>
        <function-ref name="txDone" scoped="" ref="0x7e307708"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7e3077e8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7e3078c8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7e3079a8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7e307a88"/>
        <function-ref name="tx" scoped="" ref="0x7e307b68"/>
        <function-ref name="rx" scoped="" ref="0x7e307c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7e309608" loc="73:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7e309608"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e3097e0"/>
        <function-ref name="stop" scoped="" ref="0x7e3098c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7e308980" loc="77:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7e308980"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e308b58"/>
        <function-ref name="stop" scoped="" ref="0x7e308c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7e308dd8" loc="78:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7e308dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e307010"/>
        <function-ref name="stop" scoped="" ref="0x7e3070f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7e307db8" loc="81:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7e307db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7e306010"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7e3060f0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7e3061d0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7e3062b0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7e306390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7e306500" loc="82:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7e306500"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7e3066d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7e3091b0" loc="72:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7e3091b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e309388"/>
        <function-ref name="stop" scoped="" ref="0x7e309468"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7e2a5010" loc="3:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/NoSCSuartDBGC.nc">
      <component-ref qname="NoSCSuartDBGC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7e2a5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e2a51e8"/>
        <function-ref name="stop" scoped="" ref="0x7e2a52c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCSuartDBG" ref="0x7e2a5438" loc="4:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/NoSCSuartDBGC.nc">
      <component-ref qname="NoSCSuartDBGC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCSuartDBG" scoped="" ref="0x7e2a5438"/></type-interface>
      <instance>
        <interfacedef-ref qname="SCSuartDBG"/>
      </instance>
      <interface-functions>
        <function-ref name="UARTSend" scoped="" ref="0x7e2a5610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCSuartDBGRecv" ref="0x7e28bbd8" loc="31:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGC.nc">
      <component-ref qname="SCSuartDBGC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCSuartDBGRecv" scoped="" ref="0x7e28bbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SCSuartDBGRecv"/>
      </instance>
      <interface-functions>
        <function-ref name="UARTRecv" scoped="" ref="0x7e28bdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCSuartDBG" ref="0x7e28f7e0" loc="30:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGC.nc">
      <component-ref qname="SCSuartDBGC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCSuartDBG" scoped="" ref="0x7e28f7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SCSuartDBG"/>
      </instance>
      <interface-functions>
        <function-ref name="UARTSend" scoped="" ref="0x7e28f9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7e28bf20" loc="32:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGC.nc">
      <component-ref qname="SCSuartDBGC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7e28bf20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e28d110"/>
        <function-ref name="stop" scoped="" ref="0x7e28d1f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x7e287010" loc="36:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGM.nc">
      <component-ref qname="SCSuartDBGM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x7e287010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e2871e8"/>
        <function-ref name="stop" scoped="" ref="0x7e2872c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HPLUART" ref="0x7e287440" loc="37:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGM.nc">
      <component-ref qname="SCSuartDBGM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HPLUART" scoped="" ref="0x7e287440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7e287618"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7e2876f8"/>
        <function-ref name="rxDone" scoped="" ref="0x7e2877d8"/>
        <function-ref name="txDone" scoped="" ref="0x7e2878b8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7e287998"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7e287a78"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7e287b58"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7e287c38"/>
        <function-ref name="tx" scoped="" ref="0x7e287d18"/>
        <function-ref name="rx" scoped="" ref="0x7e287df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x7e288ba0" loc="35:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGM.nc">
      <component-ref qname="SCSuartDBGM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x7e288ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e288d78"/>
        <function-ref name="stop" scoped="" ref="0x7e288e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCSuartDBGRecv" ref="0x7e288408" loc="32:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGM.nc">
      <component-ref qname="SCSuartDBGM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCSuartDBGRecv" scoped="" ref="0x7e288408"/></type-interface>
      <instance>
        <interfacedef-ref qname="SCSuartDBGRecv"/>
      </instance>
      <interface-functions>
        <function-ref name="UARTRecv" scoped="" ref="0x7e2885e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCSuartDBG" ref="0x7e2880e0" loc="31:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGM.nc">
      <component-ref qname="SCSuartDBGM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCSuartDBG" scoped="" ref="0x7e2880e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SCSuartDBG"/>
      </instance>
      <interface-functions>
        <function-ref name="UARTSend" scoped="" ref="0x7e2882b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7e288730" loc="33:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGM.nc">
      <component-ref qname="SCSuartDBGM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7e288730"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e288908"/>
        <function-ref name="stop" scoped="" ref="0x7e2889e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TempSensor" ref="0x7e26b1d8" loc="21:TempSensorC.nc">
      <component-ref qname="TempSensorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempSensor" scoped="" ref="0x7e26b1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TempSensor"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7e26b3b0"/>
        <function-ref name="start" scoped="" ref="0x7e26b490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read_UR" ref="0x7e2653b8" loc="31:TempSensorM.nc">
      <component-ref qname="TempSensorM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read_UR" scoped="" ref="0x7e2653b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e2659e0"/>
        <function-ref name="readDone" scoped="" ref="0x7e265bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TempSensor" ref="0x7e267600" loc="26:TempSensorM.nc">
      <component-ref qname="TempSensorM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempSensor" scoped="" ref="0x7e267600"/></type-interface>
      <instance>
        <interfacedef-ref qname="TempSensor"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7e2677d8"/>
        <function-ref name="start" scoped="" ref="0x7e2678b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read_Humidity" ref="0x7e267b10" loc="29:TempSensorM.nc">
      <component-ref qname="TempSensorM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read_Humidity" scoped="" ref="0x7e267b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e2661e0"/>
        <function-ref name="readDone" scoped="" ref="0x7e2663c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read_Temp" ref="0x7e266770" loc="30:TempSensorM.nc">
      <component-ref qname="TempSensorM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read_Temp" scoped="" ref="0x7e266770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e266d98"/>
        <function-ref name="readDone" scoped="" ref="0x7e265010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e2690a0" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="TempSensorC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e2690a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e268a10"/>
        <function-ref name="fired" scoped="" ref="0x7e269da8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e2683d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e2681f0"/>
        <function-ref name="getdt" scoped="" ref="0x7e268dd0"/>
        <function-ref name="gett0" scoped="" ref="0x7e268bf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7e268010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e2696c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e2686f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e269948"/>
        <function-ref name="stop" scoped="" ref="0x7e269bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7e246768" loc="47:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11C.nc">
      <component-ref qname="TempSensorC.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x7e246768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e246d90"/>
        <function-ref name="readDone" scoped="" ref="0x7e245010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7e247b50" loc="46:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11C.nc">
      <component-ref qname="TempSensorC.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x7e247b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e2461e0"/>
        <function-ref name="readDone" scoped="" ref="0x7e2463c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Hum" ref="0x7d8dee88" loc="50:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="TempSensorC.Sensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sht11Hum" scoped="" ref="0x7d8dee88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7d8dd070"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7d8dd150"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7d8dd230"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7d8dd310"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7d8dd3f0"/>
        <function-ref name="reset" scoped="" ref="0x7d8dd4d0"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7d8dd5b0"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7d8dd690"/>
        <function-ref name="resetDone" scoped="" ref="0x7d8dd770"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7d8dd850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7d8e09d0" loc="45:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="TempSensorC.Sensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x7d8e09d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d8df010"/>
        <function-ref name="readDone" scoped="" ref="0x7d8df1f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempResource" ref="0x7d8df508" loc="47:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="TempSensorC.Sensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempResource" scoped="" ref="0x7d8df508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d8df6e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d8df7c0"/>
        <function-ref name="request" scoped="" ref="0x7d8df8a0"/>
        <function-ref name="granted" scoped="" ref="0x7d8df980"/>
        <function-ref name="isOwner" scoped="" ref="0x7d8dfa60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Temp" ref="0x7d8de350" loc="49:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="TempSensorC.Sensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sht11Temp" scoped="" ref="0x7d8de350"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7d8de528"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7d8de608"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7d8de6e8"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7d8de7c8"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7d8de8a8"/>
        <function-ref name="reset" scoped="" ref="0x7d8de988"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7d8dea68"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7d8deb48"/>
        <function-ref name="resetDone" scoped="" ref="0x7d8dec28"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7d8ded08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumResource" ref="0x7d8dfbe0" loc="48:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="TempSensorC.Sensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HumResource" scoped="" ref="0x7d8dfbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d8dfdb8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d8dfe98"/>
        <function-ref name="request" scoped="" ref="0x7d8de010"/>
        <function-ref name="granted" scoped="" ref="0x7d8de0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7d8de1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7d8e1e10" loc="44:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="TempSensorC.Sensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x7d8e1e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d8e0448"/>
        <function-ref name="readDone" scoped="" ref="0x7d8e0628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7e244030" loc="21:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredSensorC.nc">
      <component-ref qname="TempSensorC.URSensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7e244030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e244658"/>
        <function-ref name="readDone" scoped="" ref="0x7e244838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7d8be010" loc="28:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredC.nc">
      <component-ref qname="TempSensorC.URSensor.DemoChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7d8be010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d8be638"/>
        <function-ref name="readDone" scoped="" ref="0x7d8be818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7d8bd780" loc="28:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc">
      <component-ref qname="TempSensorC.URSensor.DemoChannel.ADC_ShiftM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7d8bd780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d8bdda8"/>
        <function-ref name="readDone" scoped="" ref="0x7d8bb010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="subRead" ref="0x7d8bb3b8" loc="29:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/ADC_ShiftM.nc">
      <component-ref qname="TempSensorC.URSensor.DemoChannel.ADC_ShiftM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="subRead" scoped="" ref="0x7d8bb3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d8bb9e0"/>
        <function-ref name="readDone" scoped="" ref="0x7d8bbbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7d8ba778" loc="30:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/UltraredProC.nc">
      <component-ref qname="TempSensorC.URSensor.DemoChannel.UltraredProC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7d8ba778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d8bada0"/>
        <function-ref name="readDone" scoped="" ref="0x7d8b9010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7d8b6d80" loc="25:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TempSensorC.URSensor.DemoChannel.UltraredProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7d8b6d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7d8b5010"/>
        <function-ref name="configure" scoped="" ref="0x7d8b50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7d8b8d50" loc="22:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TempSensorC.URSensor.DemoChannel.UltraredProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7d8b8d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d8b63c0"/>
        <function-ref name="readDone" scoped="" ref="0x7d8b65a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7d8b68a8" loc="24:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TempSensorC.URSensor.DemoChannel.UltraredProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d8b68a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7d8b6a80"/>
        <function-ref name="getChannel" scoped="" ref="0x7d8b6b60"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7d8b6c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ComSat" ref="0x7e2415b0" loc="2:ComSatC.nc">
      <component-ref qname="ComSatC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ComSat" scoped="" ref="0x7e2415b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ComSat"/>
      </instance>
      <interface-functions>
        <function-ref name="initDone" scoped="" ref="0x7e241788"/>
        <function-ref name="init" scoped="" ref="0x7e241868"/>
        <function-ref name="sendData" scoped="" ref="0x7e241948"/>
        <function-ref name="received" scoped="" ref="0x7e241a28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ElapsedTimer" ref="0x7e22e340" loc="8:ComSatM.nc">
      <component-ref qname="ComSatM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ElapsedTimer" scoped="" ref="0x7e22e340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e22dc48"/>
        <function-ref name="fired" scoped="" ref="0x7e22d068"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e22d608"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e22d428"/>
        <function-ref name="getdt" scoped="" ref="0x7e22b048"/>
        <function-ref name="gett0" scoped="" ref="0x7e22de28"/>
        <function-ref name="isRunning" scoped="" ref="0x7e22d248"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e22e968"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e22d928"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e22ebe8"/>
        <function-ref name="stop" scoped="" ref="0x7e22ee68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7e22b220" loc="9:ComSatM.nc">
      <component-ref qname="ComSatM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x7e22b220"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e22b3f8"/>
        <function-ref name="stopDone" scoped="" ref="0x7e22b4d8"/>
        <function-ref name="start" scoped="" ref="0x7e22b5b8"/>
        <function-ref name="stop" scoped="" ref="0x7e22b698"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7e1e7850" loc="10:ComSatM.nc">
      <component-ref qname="ComSatM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7e1e7850"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e1e7a28"/>
        <function-ref name="getPayload" scoped="" ref="0x7e1e7b08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e1e7be8"/>
        <function-ref name="cancel" scoped="" ref="0x7e1e7cc8"/>
        <function-ref name="sendDone" scoped="" ref="0x7e1e7da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LEDController" ref="0x7e1e5320" loc="12:ComSatM.nc">
      <component-ref qname="ComSatM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LEDController" scoped="" ref="0x7e1e5320"/></type-interface>
      <instance>
        <interfacedef-ref qname="LEDController"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e1e54f8"/>
        <function-ref name="BlinkLed1" scoped="" ref="0x7e1e55d8"/>
        <function-ref name="IntervalBlinkLed0" scoped="" ref="0x7e1e56b8"/>
        <function-ref name="BlinkLed2" scoped="" ref="0x7e1e5798"/>
        <function-ref name="IntervalBlinkLed1" scoped="" ref="0x7e1e5878"/>
        <function-ref name="BlinkLed0" scoped="" ref="0x7e1e5958"/>
        <function-ref name="IntervalBlinkLed2" scoped="" ref="0x7e1e5a38"/>
        <function-ref name="BlinkDone" scoped="" ref="0x7e1e5b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ComSat" ref="0x7e22fbd0" loc="5:ComSatM.nc">
      <component-ref qname="ComSatM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ComSat" scoped="" ref="0x7e22fbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ComSat"/>
      </instance>
      <interface-functions>
        <function-ref name="initDone" scoped="" ref="0x7e22fda8"/>
        <function-ref name="init" scoped="" ref="0x7e22fe88"/>
        <function-ref name="sendData" scoped="" ref="0x7e22e010"/>
        <function-ref name="received" scoped="" ref="0x7e22e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7e1e2d68" loc="11:ComSatM.nc">
      <component-ref qname="ComSatM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e1e2d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e1e5010"/>
        <function-ref name="receive" scoped="" ref="0x7e1e50f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e1e51d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LCDSetter" ref="0x7e1e5c68" loc="13:ComSatM.nc">
      <component-ref qname="ComSatM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LCDSetter" scoped="" ref="0x7e1e5c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCDSetter"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e1e5e40"/>
        <function-ref name="setLCD" scoped="" ref="0x7e1e5f20"/>
        <function-ref name="setLCD2" scoped="" ref="0x7e1e4018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDataTask" ref="0x7e1c13a8" loc="39:ComSatM.nc">
      <component-ref qname="ComSatM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDataTask" scoped="" ref="0x7e1c13a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e1c1580"/>
        <function-ref name="runTask" scoped="" ref="0x7e1c1660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="start" ref="0x7e1e0c48" loc="37:ComSatM.nc">
      <component-ref qname="ComSatM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="start" scoped="" ref="0x7e1e0c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e1e0e20"/>
        <function-ref name="runTask" scoped="" ref="0x7e1e0f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7e19e010" loc="49:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e19e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e19e1e8"/>
        <function-ref name="stopDone" scoped="" ref="0x7e19e2c8"/>
        <function-ref name="start" scoped="" ref="0x7e19e3a8"/>
        <function-ref name="stop" scoped="" ref="0x7e19e488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7e19e860" loc="51:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7e19e860"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e19ea38"/>
        <function-ref name="getPayload" scoped="" ref="0x7e19eb18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e19ebf8"/>
        <function-ref name="cancel" scoped="" ref="0x7e19ecd8"/>
        <function-ref name="sendDone" scoped="" ref="0x7e19edb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7e19d940" loc="53:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7e19d940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e19db18"/>
        <function-ref name="receive" scoped="" ref="0x7e19dbf8"/>
        <function-ref name="getPayload" scoped="" ref="0x7e19dcd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7e195188" loc="55:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7e195188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e195360"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e195440"/>
        <function-ref name="getPayload" scoped="" ref="0x7e195520"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e195600"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e1956e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e19d1a8" loc="52:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e19d1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e19d380"/>
        <function-ref name="receive" scoped="" ref="0x7e19d460"/>
        <function-ref name="getPayload" scoped="" ref="0x7e19d540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7e17c188" loc="57:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e17c188"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7e17c360"/>
        <function-ref name="noAck" scoped="" ref="0x7e17c440"/>
        <function-ref name="wasAcked" scoped="" ref="0x7e17c520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7e180558" loc="56:/opt/tinyos-2.x/tos/platforms/zigbex/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e180558"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7e180730"/>
        <function-ref name="address" scoped="" ref="0x7e180810"/>
        <function-ref name="destination" scoped="" ref="0x7e1808f0"/>
        <function-ref name="setSource" scoped="" ref="0x7e1809d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7e180ab0"/>
        <function-ref name="type" scoped="" ref="0x7e180b90"/>
        <function-ref name="setType" scoped="" ref="0x7e180c70"/>
        <function-ref name="isForMe" scoped="" ref="0x7e180d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7e17aae0" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e17aae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e17acb8"/>
        <function-ref name="stopDone" scoped="" ref="0x7e17ad98"/>
        <function-ref name="start" scoped="" ref="0x7e17ae78"/>
        <function-ref name="stop" scoped="" ref="0x7e179010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7e1793e8" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7e1793e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7e2008d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e1795c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e1796a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e179780"/>
        <function-ref name="cancel" scoped="" ref="0x7e179860"/>
        <function-ref name="sendDone" scoped="" ref="0x7e179940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7e1774f0" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7e1774f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7e2008d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e1776c8"/>
        <function-ref name="receive" scoped="" ref="0x7e1777a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7e177888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7e1763f8" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7e1763f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e1765d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e1766b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e176790"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e176870"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e176950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7e174010" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7e174010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7e1741e8"/>
        <function-ref name="getRssi" scoped="" ref="0x7e1742c8"/>
        <function-ref name="getPower" scoped="" ref="0x7e1743a8"/>
        <function-ref name="getLqi" scoped="" ref="0x7e174488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e179d18" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e179d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7e2008d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e179ef0"/>
        <function-ref name="receive" scoped="" ref="0x7e177010"/>
        <function-ref name="getPayload" scoped="" ref="0x7e1770f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7e1745e0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e1745e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7e1747b8"/>
        <function-ref name="noAck" scoped="" ref="0x7e174898"/>
        <function-ref name="wasAcked" scoped="" ref="0x7e174978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7e1779d8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e1779d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7e177bb0"/>
        <function-ref name="address" scoped="" ref="0x7e177c90"/>
        <function-ref name="destination" scoped="" ref="0x7e177d70"/>
        <function-ref name="setSource" scoped="" ref="0x7e177e50"/>
        <function-ref name="setDestination" scoped="" ref="0x7e176010"/>
        <function-ref name="type" scoped="" ref="0x7e1760f0"/>
        <function-ref name="setType" scoped="" ref="0x7e1761d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7e1762b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7e155b68" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7e155b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e155d40"/>
        <function-ref name="getPayload" scoped="" ref="0x7e155e20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e155f00"/>
        <function-ref name="cancel" scoped="" ref="0x7e15a010"/>
        <function-ref name="sendDone" scoped="" ref="0x7e15a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7e15a268" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7e15a268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e15a440"/>
        <function-ref name="receive" scoped="" ref="0x7e15a520"/>
        <function-ref name="getPayload" scoped="" ref="0x7e15a600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7e161cb8" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7e161cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7e2008d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e161e90"/>
        <function-ref name="getPayload" scoped="" ref="0x7e15e010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e15e0f0"/>
        <function-ref name="cancel" scoped="" ref="0x7e15e1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7e15e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7e15ee20" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7e15ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7e2008d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e15d010"/>
        <function-ref name="receive" scoped="" ref="0x7e15d0f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e15d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7e15dc60" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7e15dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e15de38"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e15df18"/>
        <function-ref name="getPayload" scoped="" ref="0x7e15c010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e15c0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e15c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e15e688" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e15e688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7e2008d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e15e860"/>
        <function-ref name="receive" scoped="" ref="0x7e15e940"/>
        <function-ref name="getPayload" scoped="" ref="0x7e15ea20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7e15d320" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e15d320"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7e15d4f8"/>
        <function-ref name="address" scoped="" ref="0x7e15d5d8"/>
        <function-ref name="destination" scoped="" ref="0x7e15d6b8"/>
        <function-ref name="setSource" scoped="" ref="0x7e15d798"/>
        <function-ref name="setDestination" scoped="" ref="0x7e15d878"/>
        <function-ref name="type" scoped="" ref="0x7e15d958"/>
        <function-ref name="setType" scoped="" ref="0x7e15da38"/>
        <function-ref name="isForMe" scoped="" ref="0x7e15db18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7e102178" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e102178"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e102350"/>
        <function-ref name="stopDone" scoped="" ref="0x7e102430"/>
        <function-ref name="start" scoped="" ref="0x7e102510"/>
        <function-ref name="stop" scoped="" ref="0x7e1025f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7e102758" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7e102758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e102930"/>
        <function-ref name="getPayload" scoped="" ref="0x7e102a10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e102af0"/>
        <function-ref name="cancel" scoped="" ref="0x7e102bd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7e102cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e102e18" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e102e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e101010"/>
        <function-ref name="receive" scoped="" ref="0x7e1010f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e1011d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7e101340" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e101340"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7e101518"/>
        <function-ref name="address" scoped="" ref="0x7e1015f8"/>
        <function-ref name="destination" scoped="" ref="0x7e1016d8"/>
        <function-ref name="setSource" scoped="" ref="0x7e1017b8"/>
        <function-ref name="setDestination" scoped="" ref="0x7e101898"/>
        <function-ref name="type" scoped="" ref="0x7e101978"/>
        <function-ref name="setType" scoped="" ref="0x7e101a58"/>
        <function-ref name="isForMe" scoped="" ref="0x7e101b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7e0ffd88" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e0ffd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e0fc010"/>
        <function-ref name="stopDone" scoped="" ref="0x7e0fc0f0"/>
        <function-ref name="start" scoped="" ref="0x7e0fc1d0"/>
        <function-ref name="stop" scoped="" ref="0x7e0fc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7e0f4010" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x7e0f4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e0f41e8"/>
        <function-ref name="cancel" scoped="" ref="0x7e0f42c8"/>
        <function-ref name="modify" scoped="" ref="0x7e0f43a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7e0f4488"/>
        <function-ref name="resendCCA" scoped="" ref="0x7e0f4568"/>
        <function-ref name="resend" scoped="" ref="0x7e0f4648"/>
        <function-ref name="sendCCA" scoped="" ref="0x7e0f4728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7e0fc418" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7e0fc418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e0fc5f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e0fc6d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e0fc7b0"/>
        <function-ref name="cancel" scoped="" ref="0x7e0fc890"/>
        <function-ref name="sendDone" scoped="" ref="0x7e0fc970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7e0dc840" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7e0dc840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7e0dca18"/>
        <function-ref name="rand32" scoped="" ref="0x7e0dcaf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e0ffa40" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e0ffa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e0ffc18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7e0f96f0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7e0f96f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e0f98c8"/>
        <function-ref name="stop" scoped="" ref="0x7e0f99a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7e0f6cb0" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7e0f6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7e0f6e88"/>
        <function-ref name="rfOff" scoped="" ref="0x7e0f9010"/>
        <function-ref name="rxOn" scoped="" ref="0x7e0f90f0"/>
        <function-ref name="startVReg" scoped="" ref="0x7e0f91d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7e0f92b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7e0f9390"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7e0f9470"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7e0f9550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e0e05e0" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e0e05e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e0e07b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e0e0898"/>
        <function-ref name="led1On" scoped="" ref="0x7e0e0978"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e0e0a58"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e0e0b38"/>
        <function-ref name="get" scoped="" ref="0x7e0e0c18"/>
        <function-ref name="led1Off" scoped="" ref="0x7e0e0cf8"/>
        <function-ref name="led2Off" scoped="" ref="0x7e0dd0f0"/>
        <function-ref name="set" scoped="" ref="0x7e0e0dd8"/>
        <function-ref name="led0On" scoped="" ref="0x7e0e0eb8"/>
        <function-ref name="led2On" scoped="" ref="0x7e0dd010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7e0fcae0" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e0fcae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e0fccb8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e0fcd98"/>
        <function-ref name="request" scoped="" ref="0x7e0fce78"/>
        <function-ref name="granted" scoped="" ref="0x7e0fb010"/>
        <function-ref name="isOwner" scoped="" ref="0x7e0fb0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CsmaBackoff" ref="0x7e0de0a8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaBackoff" scoped="" ref="0x7e0de0a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="congestion" scoped="" ref="0x7e0de280"/>
        <function-ref name="initial" scoped="" ref="0x7e0de360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7e0dcc68" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e0dcc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7e0dce40"/>
        <function-ref name="address" scoped="" ref="0x7e0dcf20"/>
        <function-ref name="destination" scoped="" ref="0x7e0e0018"/>
        <function-ref name="setSource" scoped="" ref="0x7e0e00f8"/>
        <function-ref name="setDestination" scoped="" ref="0x7e0e01d8"/>
        <function-ref name="type" scoped="" ref="0x7e0e02b8"/>
        <function-ref name="setType" scoped="" ref="0x7e0e0398"/>
        <function-ref name="isForMe" scoped="" ref="0x7e0e0478"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7e0da840" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x7e0da840"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e0daa18"/>
        <function-ref name="runTask" scoped="" ref="0x7e0daaf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7e0da010" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x7e0da010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e0da268"/>
        <function-ref name="runTask" scoped="" ref="0x7e0da348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7e0db800" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x7e0db800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e0db9d8"/>
        <function-ref name="runTask" scoped="" ref="0x7e0dbab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7e09bdd8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7e09bdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x7e09f010"/>
        <function-ref name="setChannel" scoped="" ref="0x7e09f0f0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7e09f1d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7e09f2b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7e09f390"/>
        <function-ref name="sync" scoped="" ref="0x7e09f470"/>
        <function-ref name="getChannel" scoped="" ref="0x7e09f550"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7e09f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e0a2578" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e0a2578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e0a2750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7e09f7a0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7e09f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7e09f978"/>
        <function-ref name="rfOff" scoped="" ref="0x7e09fa58"/>
        <function-ref name="rxOn" scoped="" ref="0x7e09fb38"/>
        <function-ref name="startVReg" scoped="" ref="0x7e09fc18"/>
        <function-ref name="stopVReg" scoped="" ref="0x7e09fcf8"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7e09fdd8"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7e09feb8"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7e09e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e0a28c0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e0a28c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e0a2a98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e0a2b78"/>
        <function-ref name="request" scoped="" ref="0x7e0a2c58"/>
        <function-ref name="granted" scoped="" ref="0x7e0a2d38"/>
        <function-ref name="isOwner" scoped="" ref="0x7e0a2e18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7e09e180" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e09e180"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7e09e358"/>
        <function-ref name="address" scoped="" ref="0x7e09e438"/>
        <function-ref name="destination" scoped="" ref="0x7e09e518"/>
        <function-ref name="setSource" scoped="" ref="0x7e09e5f8"/>
        <function-ref name="setDestination" scoped="" ref="0x7e09e6d8"/>
        <function-ref name="type" scoped="" ref="0x7e09e7b8"/>
        <function-ref name="setType" scoped="" ref="0x7e09e898"/>
        <function-ref name="isForMe" scoped="" ref="0x7e09e978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7e096728" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7e096728"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x7e096900"/>
        <function-ref name="setChannel" scoped="" ref="0x7e0969e0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7e096ac0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7e096ba0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7e096c80"/>
        <function-ref name="sync" scoped="" ref="0x7e096d60"/>
        <function-ref name="getChannel" scoped="" ref="0x7e096e40"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7e096f20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7e095b70" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x7e095b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120ce0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e093ee8"/>
        <function-ref name="fired" scoped="" ref="0x7e0937a8"/>
        <function-ref name="startAt" scoped="" ref="0x7e093ba8"/>
        <function-ref name="isRunning" scoped="" ref="0x7e0939a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e0920f8"/>
        <function-ref name="start" scoped="" ref="0x7e093308"/>
        <function-ref name="stop" scoped="" ref="0x7e0935a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7e080030" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7e080030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e080208"/>
        <function-ref name="write" scoped="" ref="0x7e0802e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7e092c78" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7e092c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e092e50"/>
        <function-ref name="isInput" scoped="" ref="0x7e091010"/>
        <function-ref name="toggle" scoped="" ref="0x7e0910f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e0911d0"/>
        <function-ref name="get" scoped="" ref="0x7e0912b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e091390"/>
        <function-ref name="set" scoped="" ref="0x7e091470"/>
        <function-ref name="clr" scoped="" ref="0x7e091550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7e07a6e0" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7e07a6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e07a938"/>
        <function-ref name="write" scoped="" ref="0x7e07aa18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7e0922e8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7e0922e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e0924c0"/>
        <function-ref name="isInput" scoped="" ref="0x7e0925a0"/>
        <function-ref name="toggle" scoped="" ref="0x7e092680"/>
        <function-ref name="isOutput" scoped="" ref="0x7e092760"/>
        <function-ref name="get" scoped="" ref="0x7e092840"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e092920"/>
        <function-ref name="set" scoped="" ref="0x7e092a00"/>
        <function-ref name="clr" scoped="" ref="0x7e092ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7e0916e8" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x7e0916e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e0918c0"/>
        <function-ref name="isInput" scoped="" ref="0x7e0919a0"/>
        <function-ref name="toggle" scoped="" ref="0x7e091a80"/>
        <function-ref name="isOutput" scoped="" ref="0x7e091b60"/>
        <function-ref name="get" scoped="" ref="0x7e091c40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e091d20"/>
        <function-ref name="set" scoped="" ref="0x7e091e00"/>
        <function-ref name="clr" scoped="" ref="0x7e091ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e097ce8" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e097ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e097ec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7e080488" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7e080488"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e080660"/>
        <function-ref name="write" scoped="" ref="0x7e080740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7e0906a8" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7e0906a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e090880"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e090960"/>
        <function-ref name="request" scoped="" ref="0x7e090a40"/>
        <function-ref name="granted" scoped="" ref="0x7e090b20"/>
        <function-ref name="isOwner" scoped="" ref="0x7e090c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7e079580" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7e079580"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e079758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7e0798f0" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7e0798f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e079ac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7e078610" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x7e078610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e0787e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e0788c8"/>
        <function-ref name="request" scoped="" ref="0x7e0789a8"/>
        <function-ref name="granted" scoped="" ref="0x7e078a88"/>
        <function-ref name="isOwner" scoped="" ref="0x7e078b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7e0950a8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7e0950a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7e095280"/>
        <function-ref name="rfOff" scoped="" ref="0x7e095360"/>
        <function-ref name="rxOn" scoped="" ref="0x7e095440"/>
        <function-ref name="startVReg" scoped="" ref="0x7e095520"/>
        <function-ref name="stopVReg" scoped="" ref="0x7e095600"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7e0956e0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7e0957c0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7e0958a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7e07a290" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7e07a290"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e07a468"/>
        <function-ref name="write" scoped="" ref="0x7e07a548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7e07abb0" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7e07abb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e07ad88"/>
        <function-ref name="write" scoped="" ref="0x7e07ae68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e096060" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e096060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e096238"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e096318"/>
        <function-ref name="request" scoped="" ref="0x7e0963f8"/>
        <function-ref name="granted" scoped="" ref="0x7e0964d8"/>
        <function-ref name="isOwner" scoped="" ref="0x7e0965b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7e07d0b0" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7e07d0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e07d288"/>
        <function-ref name="write" scoped="" ref="0x7e07d368"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7e077e80" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7e077e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e079070"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7e090090" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x7e090090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e090268"/>
        <function-ref name="disable" scoped="" ref="0x7e090348"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e090428"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e090508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7e079c38" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e079c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7e079e10"/>
        <function-ref name="address" scoped="" ref="0x7e079ef0"/>
        <function-ref name="destination" scoped="" ref="0x7e078010"/>
        <function-ref name="setSource" scoped="" ref="0x7e0780f0"/>
        <function-ref name="setDestination" scoped="" ref="0x7e0781d0"/>
        <function-ref name="type" scoped="" ref="0x7e0782b0"/>
        <function-ref name="setType" scoped="" ref="0x7e078390"/>
        <function-ref name="isForMe" scoped="" ref="0x7e078470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e078cd0" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e078cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e078ea8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e076010"/>
        <function-ref name="led1On" scoped="" ref="0x7e0760f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e0761d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e0762b0"/>
        <function-ref name="get" scoped="" ref="0x7e076390"/>
        <function-ref name="led1Off" scoped="" ref="0x7e076470"/>
        <function-ref name="led2Off" scoped="" ref="0x7e0767f0"/>
        <function-ref name="set" scoped="" ref="0x7e076550"/>
        <function-ref name="led0On" scoped="" ref="0x7e076630"/>
        <function-ref name="led2On" scoped="" ref="0x7e076710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7e079208" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7e079208"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e0793e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone_task" ref="0x7e073260" loc="86:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone_task" scoped="" ref="0x7e073260"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e073438"/>
        <function-ref name="runTask" scoped="" ref="0x7e073518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e036b10" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e036b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e036ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7e035010" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x7e035010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120ce0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e034350"/>
        <function-ref name="fired" scoped="" ref="0x7e035c00"/>
        <function-ref name="startAt" scoped="" ref="0x7e034010"/>
        <function-ref name="isRunning" scoped="" ref="0x7e035e00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e034550"/>
        <function-ref name="start" scoped="" ref="0x7e035760"/>
        <function-ref name="stop" scoped="" ref="0x7e035a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7e031358" loc="67:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7e031358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120ce0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7dede750"/>
        <function-ref name="fired" scoped="" ref="0x7dede010"/>
        <function-ref name="startAt" scoped="" ref="0x7dede410"/>
        <function-ref name="isRunning" scoped="" ref="0x7dede210"/>
        <function-ref name="getAlarm" scoped="" ref="0x7dede950"/>
        <function-ref name="start" scoped="" ref="0x7e031aa8"/>
        <function-ref name="stop" scoped="" ref="0x7e031d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dedeb08" loc="68:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dedeb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dedece0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7d8a6920" loc="28:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7d8a6920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120ce0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d8a5c68"/>
        <function-ref name="fired" scoped="" ref="0x7d8a5528"/>
        <function-ref name="startAt" scoped="" ref="0x7d8a5928"/>
        <function-ref name="isRunning" scoped="" ref="0x7d8a5728"/>
        <function-ref name="getAlarm" scoped="" ref="0x7d8a5e68"/>
        <function-ref name="start" scoped="" ref="0x7d8a5088"/>
        <function-ref name="stop" scoped="" ref="0x7d8a5328"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7d8a2448" loc="30:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7d8a2448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="TOne" ref="0x7f081ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d8a1788"/>
        <function-ref name="fired" scoped="" ref="0x7d8a1048"/>
        <function-ref name="startAt" scoped="" ref="0x7d8a1448"/>
        <function-ref name="isRunning" scoped="" ref="0x7d8a1248"/>
        <function-ref name="getAlarm" scoped="" ref="0x7d8a1988"/>
        <function-ref name="start" scoped="" ref="0x7d8a2b98"/>
        <function-ref name="stop" scoped="" ref="0x7d8a2e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7dffab98" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7dffab98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7dffad70"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7dffae50"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7dfff010"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7dfff0f0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7dfff1d0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7dfff2b0"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7dfff390"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7dfff470"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7dfff550"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7dfff630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7dff4b48" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7dff4b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7dff3410"/>
        <function-ref name="test" scoped="" ref="0x7dff3010"/>
        <function-ref name="get" scoped="" ref="0x7dff9200"/>
        <function-ref name="captured" scoped="" ref="0x7dff96a0"/>
        <function-ref name="reset" scoped="" ref="0x7dff9940"/>
        <function-ref name="isOn" scoped="" ref="0x7dff3210"/>
        <function-ref name="set" scoped="" ref="0x7dff9400"/>
        <function-ref name="start" scoped="" ref="0x7dff9b40"/>
        <function-ref name="stop" scoped="" ref="0x7dff9d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7dff39b8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7dff39b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7dff2cb0"/>
        <function-ref name="fired" scoped="" ref="0x7dff24b0"/>
        <function-ref name="get" scoped="" ref="0x7dff2010"/>
        <function-ref name="reset" scoped="" ref="0x7dff26b0"/>
        <function-ref name="isOn" scoped="" ref="0x7dff2eb0"/>
        <function-ref name="set" scoped="" ref="0x7dff2210"/>
        <function-ref name="start" scoped="" ref="0x7dff28b0"/>
        <function-ref name="stop" scoped="" ref="0x7dff2ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e003368" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e003368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e002a68"/>
        <function-ref name="test" scoped="" ref="0x7e002668"/>
        <function-ref name="get" scoped="" ref="0x7e0039b0"/>
        <function-ref name="setScale" scoped="" ref="0x7e002c68"/>
        <function-ref name="getScale" scoped="" ref="0x7e002f08"/>
        <function-ref name="reset" scoped="" ref="0x7e002068"/>
        <function-ref name="overflow" scoped="" ref="0x7e003e50"/>
        <function-ref name="isOn" scoped="" ref="0x7e002868"/>
        <function-ref name="set" scoped="" ref="0x7e003bb0"/>
        <function-ref name="start" scoped="" ref="0x7e002268"/>
        <function-ref name="stop" scoped="" ref="0x7e002468"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7dfde370" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7dfde370"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7dfde548"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7dfde628"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7dfde708"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7dfde7e8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7dfde8c8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7dfde9a8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7dfdea88"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7dfdeb68"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7dfdec48"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7dfded28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x7dfd4220" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x7dfd4220"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7dfd43f8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7dfd44d8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7dfd45b8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7dfd4698"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7dfd4778"/>
        <function-ref name="setControl" scoped="" ref="0x7dfd4858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7dfdbb30" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7dfdbb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7dfdaea0"/>
        <function-ref name="fired" scoped="" ref="0x7dfda6a0"/>
        <function-ref name="get" scoped="" ref="0x7dfda200"/>
        <function-ref name="reset" scoped="" ref="0x7dfda8a0"/>
        <function-ref name="isOn" scoped="" ref="0x7dfd80b8"/>
        <function-ref name="set" scoped="" ref="0x7dfda400"/>
        <function-ref name="start" scoped="" ref="0x7dfdaaa0"/>
        <function-ref name="stop" scoped="" ref="0x7dfdaca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7dfdc010" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7dfdc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7dfdb810"/>
        <function-ref name="test" scoped="" ref="0x7dfdb410"/>
        <function-ref name="get" scoped="" ref="0x7dfdc658"/>
        <function-ref name="captured" scoped="" ref="0x7dfdcaf8"/>
        <function-ref name="reset" scoped="" ref="0x7dfdcd98"/>
        <function-ref name="isOn" scoped="" ref="0x7dfdb610"/>
        <function-ref name="set" scoped="" ref="0x7dfdc858"/>
        <function-ref name="start" scoped="" ref="0x7dfdb010"/>
        <function-ref name="stop" scoped="" ref="0x7dfdb210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7dfd8338" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7dfd8338"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7dfd7648"/>
        <function-ref name="fired" scoped="" ref="0x7dfd8e20"/>
        <function-ref name="get" scoped="" ref="0x7dfd8980"/>
        <function-ref name="reset" scoped="" ref="0x7dfd7048"/>
        <function-ref name="isOn" scoped="" ref="0x7dfd7848"/>
        <function-ref name="set" scoped="" ref="0x7dfd8b80"/>
        <function-ref name="start" scoped="" ref="0x7dfd7248"/>
        <function-ref name="stop" scoped="" ref="0x7dfd7448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7dfd7ac8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7dfd7ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7dfd6dc8"/>
        <function-ref name="fired" scoped="" ref="0x7dfd65c8"/>
        <function-ref name="get" scoped="" ref="0x7dfd6128"/>
        <function-ref name="reset" scoped="" ref="0x7dfd67c8"/>
        <function-ref name="isOn" scoped="" ref="0x7dfd4010"/>
        <function-ref name="set" scoped="" ref="0x7dfd6328"/>
        <function-ref name="start" scoped="" ref="0x7dfd69c8"/>
        <function-ref name="stop" scoped="" ref="0x7dfd6bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7dfe05d8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7dfe05d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7dfdfcd8"/>
        <function-ref name="test" scoped="" ref="0x7dfdf8d8"/>
        <function-ref name="get" scoped="" ref="0x7dfe0c20"/>
        <function-ref name="setScale" scoped="" ref="0x7dfdfed8"/>
        <function-ref name="getScale" scoped="" ref="0x7dfde190"/>
        <function-ref name="reset" scoped="" ref="0x7dfdf2d8"/>
        <function-ref name="overflow" scoped="" ref="0x7dfdf0d8"/>
        <function-ref name="isOn" scoped="" ref="0x7dfdfad8"/>
        <function-ref name="set" scoped="" ref="0x7dfe0e20"/>
        <function-ref name="start" scoped="" ref="0x7dfdf4d8"/>
        <function-ref name="stop" scoped="" ref="0x7dfdf6d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7df5cf28" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7df5cf28"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f2500e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f2500e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7df5b110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7df5b320" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7df5b320"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7df59a48"/>
        <function-ref name="test" scoped="" ref="0x7df59648"/>
        <function-ref name="get" scoped="" ref="0x7df5b968"/>
        <function-ref name="setScale" scoped="" ref="0x7df59c48"/>
        <function-ref name="getScale" scoped="" ref="0x7df59ee8"/>
        <function-ref name="reset" scoped="" ref="0x7df59048"/>
        <function-ref name="overflow" scoped="" ref="0x7df5be08"/>
        <function-ref name="isOn" scoped="" ref="0x7df59848"/>
        <function-ref name="set" scoped="" ref="0x7df5bb68"/>
        <function-ref name="start" scoped="" ref="0x7df59248"/>
        <function-ref name="stop" scoped="" ref="0x7df59448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7d897810" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7d897810"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7f251f28"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7f251f28"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="TOne" ref="0x7f081ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d896bf0"/>
        <function-ref name="fired" scoped="" ref="0x7d8964b0"/>
        <function-ref name="startAt" scoped="" ref="0x7d8968b0"/>
        <function-ref name="isRunning" scoped="" ref="0x7d8966b0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7d896df0"/>
        <function-ref name="start" scoped="" ref="0x7d896010"/>
        <function-ref name="stop" scoped="" ref="0x7d8962b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7d893ef8" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7d893ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d890248"/>
        <function-ref name="fired" scoped="" ref="0x7d892a18"/>
        <function-ref name="get" scoped="" ref="0x7d892578"/>
        <function-ref name="reset" scoped="" ref="0x7d892c18"/>
        <function-ref name="isOn" scoped="" ref="0x7d890448"/>
        <function-ref name="set" scoped="" ref="0x7d892778"/>
        <function-ref name="start" scoped="" ref="0x7d892e18"/>
        <function-ref name="stop" scoped="" ref="0x7d890048"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7d894058" loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7d894058"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7d893810"/>
        <function-ref name="test" scoped="" ref="0x7d893410"/>
        <function-ref name="get" scoped="" ref="0x7d8946a0"/>
        <function-ref name="setScale" scoped="" ref="0x7d893a10"/>
        <function-ref name="getScale" scoped="" ref="0x7d893cb0"/>
        <function-ref name="reset" scoped="" ref="0x7d894d40"/>
        <function-ref name="overflow" scoped="" ref="0x7d894b40"/>
        <function-ref name="isOn" scoped="" ref="0x7d893610"/>
        <function-ref name="set" scoped="" ref="0x7d8948a0"/>
        <function-ref name="start" scoped="" ref="0x7d893010"/>
        <function-ref name="stop" scoped="" ref="0x7d893210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7df3fdb0" loc="24:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7df3fdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120ce0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7df3e518"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7df3e918"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7df3e718"/>
        <function-ref name="overflow" scoped="" ref="0x7df3eb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7df39150" loc="24:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7df39150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="TOne" ref="0x7f081ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7df398a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7df39ca0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7df39aa0"/>
        <function-ref name="overflow" scoped="" ref="0x7df39ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7df37e88" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7df37e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="TOne" ref="0x7f081ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7df36600"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7df36a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7df36800"/>
        <function-ref name="overflow" scoped="" ref="0x7df36c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7df36e68" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7df36e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7df33610"/>
        <function-ref name="test" scoped="" ref="0x7df33210"/>
        <function-ref name="get" scoped="" ref="0x7df344d8"/>
        <function-ref name="setScale" scoped="" ref="0x7df33810"/>
        <function-ref name="getScale" scoped="" ref="0x7df33ab0"/>
        <function-ref name="reset" scoped="" ref="0x7df34b78"/>
        <function-ref name="overflow" scoped="" ref="0x7df34978"/>
        <function-ref name="isOn" scoped="" ref="0x7df33410"/>
        <function-ref name="set" scoped="" ref="0x7df346d8"/>
        <function-ref name="start" scoped="" ref="0x7df34d78"/>
        <function-ref name="stop" scoped="" ref="0x7df33010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7df30620" loc="52:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7df30620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120ce0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7df30d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7df16210"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7df16010"/>
        <function-ref name="overflow" scoped="" ref="0x7df16410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7df315c0" loc="51:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7df315c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120ce0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7df31d10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7df30128"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7df31f10"/>
        <function-ref name="overflow" scoped="" ref="0x7df30328"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7d89fb58" loc="50:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7d89fb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120ce0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d89eee8"/>
        <function-ref name="fired" scoped="" ref="0x7d89e7a8"/>
        <function-ref name="startAt" scoped="" ref="0x7d89eba8"/>
        <function-ref name="isRunning" scoped="" ref="0x7d89e9a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7d89d0f8"/>
        <function-ref name="start" scoped="" ref="0x7d89e308"/>
        <function-ref name="stop" scoped="" ref="0x7d89e5a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7d89c430" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x7d89c430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="TOne" ref="0x7f081ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d89a788"/>
        <function-ref name="fired" scoped="" ref="0x7d89a048"/>
        <function-ref name="startAt" scoped="" ref="0x7d89a448"/>
        <function-ref name="isRunning" scoped="" ref="0x7d89a248"/>
        <function-ref name="getAlarm" scoped="" ref="0x7d89a988"/>
        <function-ref name="start" scoped="" ref="0x7d89cb80"/>
        <function-ref name="stop" scoped="" ref="0x7d89ce20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7d89d3d0" loc="57:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7d89d3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120ce0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7d89db20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7d89df20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7d89dd20"/>
        <function-ref name="overflow" scoped="" ref="0x7d89c138"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dedd280" loc="18:/opt/tinyos-2.x/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dedd280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dedd458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7ded8268" loc="68:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x7ded8268"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ded8440"/>
        <function-ref name="isInput" scoped="" ref="0x7ded8520"/>
        <function-ref name="toggle" scoped="" ref="0x7ded8600"/>
        <function-ref name="isOutput" scoped="" ref="0x7ded86e0"/>
        <function-ref name="get" scoped="" ref="0x7ded87c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ded88a0"/>
        <function-ref name="set" scoped="" ref="0x7ded8980"/>
        <function-ref name="clr" scoped="" ref="0x7ded8a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7ded8bd8" loc="69:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x7ded8bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ded8db0"/>
        <function-ref name="isInput" scoped="" ref="0x7ded8e90"/>
        <function-ref name="toggle" scoped="" ref="0x7ded7010"/>
        <function-ref name="isOutput" scoped="" ref="0x7ded70f0"/>
        <function-ref name="get" scoped="" ref="0x7ded71d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ded72b0"/>
        <function-ref name="set" scoped="" ref="0x7ded7390"/>
        <function-ref name="clr" scoped="" ref="0x7ded7470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7ded75e8" loc="70:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7ded75e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ded77c0"/>
        <function-ref name="isInput" scoped="" ref="0x7ded78a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ded7980"/>
        <function-ref name="isOutput" scoped="" ref="0x7ded7a60"/>
        <function-ref name="get" scoped="" ref="0x7ded7b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ded7c20"/>
        <function-ref name="set" scoped="" ref="0x7ded7d00"/>
        <function-ref name="clr" scoped="" ref="0x7ded7de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7ded9818" loc="67:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7ded9818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ded99f0"/>
        <function-ref name="isInput" scoped="" ref="0x7ded9ad0"/>
        <function-ref name="toggle" scoped="" ref="0x7ded9bb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ded9c90"/>
        <function-ref name="get" scoped="" ref="0x7ded9d70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ded9e50"/>
        <function-ref name="set" scoped="" ref="0x7ded8010"/>
        <function-ref name="clr" scoped="" ref="0x7ded80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7ded6980" loc="72:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x7ded6980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ded6b58"/>
        <function-ref name="isInput" scoped="" ref="0x7ded6c38"/>
        <function-ref name="toggle" scoped="" ref="0x7ded6d18"/>
        <function-ref name="isOutput" scoped="" ref="0x7ded6df8"/>
        <function-ref name="get" scoped="" ref="0x7ded6ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ded5010"/>
        <function-ref name="set" scoped="" ref="0x7ded50f0"/>
        <function-ref name="clr" scoped="" ref="0x7ded51d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7e038e90" loc="66:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7e038e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ded9080"/>
        <function-ref name="isInput" scoped="" ref="0x7ded9160"/>
        <function-ref name="toggle" scoped="" ref="0x7ded9240"/>
        <function-ref name="isOutput" scoped="" ref="0x7ded9320"/>
        <function-ref name="get" scoped="" ref="0x7ded9400"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ded94e0"/>
        <function-ref name="set" scoped="" ref="0x7ded95c0"/>
        <function-ref name="clr" scoped="" ref="0x7ded96a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7ded6010" loc="71:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x7ded6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ded61e8"/>
        <function-ref name="isInput" scoped="" ref="0x7ded62c8"/>
        <function-ref name="toggle" scoped="" ref="0x7ded63a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ded6488"/>
        <function-ref name="get" scoped="" ref="0x7ded6568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ded6648"/>
        <function-ref name="set" scoped="" ref="0x7ded6728"/>
        <function-ref name="clr" scoped="" ref="0x7ded6808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7dec1ed0" loc="39:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x7dec1ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7dec30c0"/>
        <function-ref name="disable" scoped="" ref="0x7dec31a0"/>
        <function-ref name="captured" scoped="" ref="0x7dec3280"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7dec3360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7dec3500" loc="40:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x7dec3500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7dec36d8"/>
        <function-ref name="disable" scoped="" ref="0x7dec37b8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7dec3898"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7dec3978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7dec3b18" loc="41:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7dec3b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7dec3cf0"/>
        <function-ref name="disable" scoped="" ref="0x7dec3dd0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7dec3eb0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7dec2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7debe690" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7debe690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7debe868"/>
        <function-ref name="disable" scoped="" ref="0x7debe948"/>
        <function-ref name="captured" scoped="" ref="0x7debea28"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7debeb08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x7debed18" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x7debed18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7deb44d8"/>
        <function-ref name="test" scoped="" ref="0x7deb40d8"/>
        <function-ref name="get" scoped="" ref="0x7debd370"/>
        <function-ref name="captured" scoped="" ref="0x7debd810"/>
        <function-ref name="reset" scoped="" ref="0x7debdab0"/>
        <function-ref name="isOn" scoped="" ref="0x7deb42d8"/>
        <function-ref name="set" scoped="" ref="0x7debd570"/>
        <function-ref name="start" scoped="" ref="0x7debdcb0"/>
        <function-ref name="stop" scoped="" ref="0x7debdeb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7deb3cb0" loc="9:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7deb3cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7deb3e88"/>
        <function-ref name="fired" scoped="" ref="0x7deb2010"/>
        <function-ref name="disable" scoped="" ref="0x7deb20f0"/>
        <function-ref name="edge" scoped="" ref="0x7deb21d0"/>
        <function-ref name="enable" scoped="" ref="0x7deb22b0"/>
        <function-ref name="getValue" scoped="" ref="0x7deb2390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7deb36b8" loc="8:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7deb36b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7deb3890"/>
        <function-ref name="disable" scoped="" ref="0x7deb3970"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7deb3a50"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7deb3b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATimer" ref="0x7dea2300" loc="71:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATimer" scoped="" ref="0x7dea2300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7dea0c28"/>
        <function-ref name="fired" scoped="" ref="0x7dea0048"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7dea05e8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7dea0408"/>
        <function-ref name="getdt" scoped="" ref="0x7de9f010"/>
        <function-ref name="gett0" scoped="" ref="0x7dea0e08"/>
        <function-ref name="isRunning" scoped="" ref="0x7dea0228"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7dea2928"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7dea0908"/>
        <function-ref name="startOneShot" scoped="" ref="0x7dea2ba8"/>
        <function-ref name="stop" scoped="" ref="0x7dea2e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7de9bd70" loc="113:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7de9bd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7de9a010"/>
        <function-ref name="runTask" scoped="" ref="0x7de9a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x7dea3870" loc="70:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x7dea3870"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dea3a48"/>
        <function-ref name="isInput" scoped="" ref="0x7dea3b28"/>
        <function-ref name="toggle" scoped="" ref="0x7dea3c08"/>
        <function-ref name="isOutput" scoped="" ref="0x7dea3ce8"/>
        <function-ref name="get" scoped="" ref="0x7dea3dc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dea3ea8"/>
        <function-ref name="set" scoped="" ref="0x7dea2010"/>
        <function-ref name="clr" scoped="" ref="0x7dea20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7dea3240" loc="67:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7dea3240"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7dea3418"/>
        <function-ref name="disable" scoped="" ref="0x7dea34f8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7dea35d8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7dea36b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x7de9fd70" loc="87:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x7de9fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7de9e010"/>
        <function-ref name="runTask" scoped="" ref="0x7de9e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7dea4a78" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="HplCC2420InterruptsC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7dea4a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7de93388"/>
        <function-ref name="fired" scoped="" ref="0x7de94798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7de94d38"/>
        <function-ref name="isOneShot" scoped="" ref="0x7de94b58"/>
        <function-ref name="getdt" scoped="" ref="0x7de93748"/>
        <function-ref name="gett0" scoped="" ref="0x7de93568"/>
        <function-ref name="isRunning" scoped="" ref="0x7de94978"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7de940b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7de93068"/>
        <function-ref name="startOneShot" scoped="" ref="0x7de94338"/>
        <function-ref name="stop" scoped="" ref="0x7de945b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7dd469a8" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7dd469a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd46b80"/>
        <function-ref name="write" scoped="" ref="0x7dd46c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7dd50260" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7dd50260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd50438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7dd45270" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7dd45270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd45448"/>
        <function-ref name="write" scoped="" ref="0x7dd45528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7dd44368" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dd44368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd44540"/>
        <function-ref name="write" scoped="" ref="0x7dd44620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7dd460b8" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7dd460b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd46290"/>
        <function-ref name="write" scoped="" ref="0x7dd46370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7dd51190" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7dd51190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd51368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7dd50910" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7dd50910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd50ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7dd46de0" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7dd46de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd45010"/>
        <function-ref name="write" scoped="" ref="0x7dd450f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7dd505b8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7dd505b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd50790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7dd45f18" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7dd45f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd44108"/>
        <function-ref name="write" scoped="" ref="0x7dd441e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7dd514e8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7dd514e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd516c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7dd447a0" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7dd447a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dd44978"/>
        <function-ref name="writeDone" scoped="" ref="0x7dd44a58"/>
        <function-ref name="write" scoped="" ref="0x7dd44b38"/>
        <function-ref name="beginRead" scoped="" ref="0x7dd44c18"/>
        <function-ref name="readDone" scoped="" ref="0x7dd44cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7dd464f0" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7dd464f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd46748"/>
        <function-ref name="write" scoped="" ref="0x7dd46828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7dd50c68" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7dd50c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd50e40"/>
        <function-ref name="write" scoped="" ref="0x7dd50f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7dd51840" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7dd51840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd51a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7dd526e8" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7dd526e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dd528c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dd529a0"/>
        <function-ref name="request" scoped="" ref="0x7dd52a80"/>
        <function-ref name="granted" scoped="" ref="0x7dd52b60"/>
        <function-ref name="isOwner" scoped="" ref="0x7dd52c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7dd45ae0" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7dd45ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd45cb8"/>
        <function-ref name="write" scoped="" ref="0x7dd45d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7dd456a8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7dd456a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd45880"/>
        <function-ref name="write" scoped="" ref="0x7dd45960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7dd52dc0" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7dd52dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd51010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7dd51ef0" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7dd51ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd500e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7dd51b98" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7dd51b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd51d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7dd44e78" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7dd44e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dd43070"/>
        <function-ref name="writeDone" scoped="" ref="0x7dd43150"/>
        <function-ref name="write" scoped="" ref="0x7dd43230"/>
        <function-ref name="beginRead" scoped="" ref="0x7dd43310"/>
        <function-ref name="readDone" scoped="" ref="0x7dd433f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7de73c50" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x7de73c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7de73e28"/>
        <function-ref name="writeDone" scoped="" ref="0x7de73f08"/>
        <function-ref name="write" scoped="" ref="0x7de72010"/>
        <function-ref name="beginRead" scoped="" ref="0x7de720f0"/>
        <function-ref name="readDone" scoped="" ref="0x7de721d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7de72600" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x7de72600"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7de727d8"/>
        <function-ref name="write" scoped="" ref="0x7de728b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7de72ce0" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x7de72ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7de72eb8"/>
        <function-ref name="write" scoped="" ref="0x7de70010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7de732d0" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7de732d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7de734a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7de73588"/>
        <function-ref name="request" scoped="" ref="0x7de73668"/>
        <function-ref name="granted" scoped="" ref="0x7de73748"/>
        <function-ref name="isOwner" scoped="" ref="0x7de73828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7de70438" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x7de70438"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7de70610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7de57c08" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7de57c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7de57de0"/>
        <function-ref name="sendDone" scoped="" ref="0x7de57ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7de61158" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x7de61158"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7de61330"/>
        <function-ref name="writeDone" scoped="" ref="0x7de61410"/>
        <function-ref name="write" scoped="" ref="0x7de614f0"/>
        <function-ref name="beginRead" scoped="" ref="0x7de615d0"/>
        <function-ref name="readDone" scoped="" ref="0x7de616b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7de5a438" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7de5a438"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7de5a610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7de60c40" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7de60c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7de60e18"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7de60ef8"/>
        <function-ref name="request" scoped="" ref="0x7de5e010"/>
        <function-ref name="granted" scoped="" ref="0x7de5e0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7de5e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7de61ae0" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x7de61ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7de61cb8"/>
        <function-ref name="write" scoped="" ref="0x7de61d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7de601e8" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x7de601e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7de603c0"/>
        <function-ref name="write" scoped="" ref="0x7de604a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7de5b040" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7de5b040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7de5b218"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7de5b2f8"/>
        <function-ref name="led1On" scoped="" ref="0x7de5b3d8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7de5b4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7de5b598"/>
        <function-ref name="get" scoped="" ref="0x7de5b678"/>
        <function-ref name="led1Off" scoped="" ref="0x7de5b758"/>
        <function-ref name="led2Off" scoped="" ref="0x7de5bad8"/>
        <function-ref name="set" scoped="" ref="0x7de5b838"/>
        <function-ref name="led0On" scoped="" ref="0x7de5b918"/>
        <function-ref name="led2On" scoped="" ref="0x7de5b9f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7de627b0" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7de627b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7de62988"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7de62a68"/>
        <function-ref name="request" scoped="" ref="0x7de62b48"/>
        <function-ref name="granted" scoped="" ref="0x7de62c28"/>
        <function-ref name="isOwner" scoped="" ref="0x7de62d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7de608c8" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x7de608c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7de60aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7de20a80" loc="43:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiP.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7de20a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7de20c58"/>
        <function-ref name="sendDone" scoped="" ref="0x7de20d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7de20748" loc="42:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiP.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7de20748"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7de20920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7de21d28" loc="39:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiP.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7de21d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7de21f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7de20090" loc="40:/opt/tinyos-2.x/tos/platforms/zigbex/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiP.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7de20090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7de20268"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7de20348"/>
        <function-ref name="request" scoped="" ref="0x7de20428"/>
        <function-ref name="granted" scoped="" ref="0x7de20508"/>
        <function-ref name="isOwner" scoped="" ref="0x7de205e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7de1a4c0" loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7de1a4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7de1a698"/>
        <function-ref name="sendDone" scoped="" ref="0x7de1a778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7de1a178" loc="67:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7de1a178"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7de1a350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7de1edd0" loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7de1edd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7de1a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7de1ab78" loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7de1ab78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7de1ad50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7de1ae30"/>
        <function-ref name="request" scoped="" ref="0x7de1af10"/>
        <function-ref name="granted" scoped="" ref="0x7de19010"/>
        <function-ref name="isOwner" scoped="" ref="0x7de190f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7de159d8" loc="79:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7de159d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7de15bb0"/>
        <function-ref name="sendDone" scoped="" ref="0x7de15c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x7de10500" loc="84:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x7de10500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7de106d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7de107b8"/>
        <function-ref name="request" scoped="" ref="0x7de10898"/>
        <function-ref name="granted" scoped="" ref="0x7de10978"/>
        <function-ref name="isOwner" scoped="" ref="0x7de10a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7de156b0" loc="78:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7de156b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7de15888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7de15390" loc="77:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7de15390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7de15568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7ddfa998" loc="83:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7ddfa998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7ddfab70"/>
        <function-ref name="sleep" scoped="" ref="0x7de10010"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7ddfad30"/>
        <function-ref name="dataReady" scoped="" ref="0x7de100f0"/>
        <function-ref name="initMaster" scoped="" ref="0x7ddfaef0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7de11010"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7de110f0"/>
        <function-ref name="read" scoped="" ref="0x7de111d0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7de112b0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7de11390"/>
        <function-ref name="setClock" scoped="" ref="0x7de11470"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7de11550"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7de11630"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7de11790"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7de11870"/>
        <function-ref name="write" scoped="" ref="0x7de11950"/>
        <function-ref name="enableSpi" scoped="" ref="0x7de11a30"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7de11b10"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7de11bf0"/>
        <function-ref name="getClock" scoped="" ref="0x7de11cd0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7de11db0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7ddfac50"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7ddfae10"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7de11e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7de13100" loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7de13100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7de132d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7de133b8"/>
        <function-ref name="request" scoped="" ref="0x7de13498"/>
        <function-ref name="granted" scoped="" ref="0x7de13578"/>
        <function-ref name="isOwner" scoped="" ref="0x7de13658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7ddf9010" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7ddf9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7ddf91e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7de10ba8" loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7de10ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7de10d80"/>
        <function-ref name="userId" scoped="" ref="0x7de10e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7ddd10f0" loc="59:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7ddd10f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7ddd12c8"/>
        <function-ref name="sleep" scoped="" ref="0x7ddd0710"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7ddd1488"/>
        <function-ref name="dataReady" scoped="" ref="0x7ddd07f0"/>
        <function-ref name="initMaster" scoped="" ref="0x7ddd1648"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7ddd1728"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7ddd1808"/>
        <function-ref name="read" scoped="" ref="0x7ddd18e8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7ddd19c8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7ddd1aa8"/>
        <function-ref name="setClock" scoped="" ref="0x7ddd1b88"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ddd1c68"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7ddd1d48"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7ddd1ea8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7ddd0010"/>
        <function-ref name="write" scoped="" ref="0x7ddd00f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7ddd01d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7ddd02b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7ddd0390"/>
        <function-ref name="getClock" scoped="" ref="0x7ddd0470"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7ddd0550"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7ddd13a8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7ddd1568"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7ddd0630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7ddbf808" loc="64:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7ddbf808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ddbf9e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ddbfac0"/>
        <function-ref name="toggle" scoped="" ref="0x7ddbfba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ddbfc80"/>
        <function-ref name="get" scoped="" ref="0x7ddbfd60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ddbfe40"/>
        <function-ref name="set" scoped="" ref="0x7ddbff20"/>
        <function-ref name="clr" scoped="" ref="0x7ddbe018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7ddc0508" loc="62:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7ddc0508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ddc06e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ddc07c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ddc08a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ddc0980"/>
        <function-ref name="get" scoped="" ref="0x7ddc0a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ddc0b40"/>
        <function-ref name="set" scoped="" ref="0x7ddc0c20"/>
        <function-ref name="clr" scoped="" ref="0x7ddc0d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7ddc1b20" loc="61:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7ddc1b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ddc1cf8"/>
        <function-ref name="isInput" scoped="" ref="0x7ddc1dd8"/>
        <function-ref name="toggle" scoped="" ref="0x7ddc1eb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ddc0010"/>
        <function-ref name="get" scoped="" ref="0x7ddc00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ddc01d0"/>
        <function-ref name="set" scoped="" ref="0x7ddc02b0"/>
        <function-ref name="clr" scoped="" ref="0x7ddc0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7ddc16c0" loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7ddc16c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ddc1898"/>
        <function-ref name="stop" scoped="" ref="0x7ddc1978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7ddbe190" loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7ddbe190"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7ddbe368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7ddc3db8" loc="57:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7ddc3db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7ddc2010"/>
        <function-ref name="sleep" scoped="" ref="0x7ddc1470"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7ddc21d0"/>
        <function-ref name="dataReady" scoped="" ref="0x7ddc1550"/>
        <function-ref name="initMaster" scoped="" ref="0x7ddc2390"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7ddc2470"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7ddc2550"/>
        <function-ref name="read" scoped="" ref="0x7ddc2630"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7ddc2710"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7ddc27f0"/>
        <function-ref name="setClock" scoped="" ref="0x7ddc28d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ddc29b0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7ddc2a90"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7ddc2bf0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7ddc2cd0"/>
        <function-ref name="write" scoped="" ref="0x7ddc2db0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7ddc2e90"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7ddc1010"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7ddc10f0"/>
        <function-ref name="getClock" scoped="" ref="0x7ddc11d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7ddc12b0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7ddc20f0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7ddc22b0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7ddc1390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7ddc0e78" loc="63:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7ddc0e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ddbf070"/>
        <function-ref name="isInput" scoped="" ref="0x7ddbf150"/>
        <function-ref name="toggle" scoped="" ref="0x7ddbf230"/>
        <function-ref name="isOutput" scoped="" ref="0x7ddbf310"/>
        <function-ref name="get" scoped="" ref="0x7ddbf3f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ddbf4d0"/>
        <function-ref name="set" scoped="" ref="0x7ddbf5b0"/>
        <function-ref name="clr" scoped="" ref="0x7ddbf690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7dd86750" loc="76:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7dd86750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7dd86938"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7dd86a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7dd5a030" loc="79:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7dd5a030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7dd5a218"/>
        <function-ref name="configure" scoped="" ref="0x7dd5a2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7dd86010" loc="75:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7dd86010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dd861f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dd862d8"/>
        <function-ref name="request" scoped="" ref="0x7dd863b8"/>
        <function-ref name="granted" scoped="" ref="0x7dd86498"/>
        <function-ref name="isOwner" scoped="" ref="0x7dd86578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7dd86b58" loc="77:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7dd86b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7dd86d30"/>
        <function-ref name="userId" scoped="" ref="0x7dd86e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d851200" loc="34:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d851200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d8513d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7d851538" loc="35:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7d851538"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7d851710"/>
        <function-ref name="isEmpty" scoped="" ref="0x7d8517f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7d8518d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7d8519b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7d850cb8" loc="54:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7d850cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7d850ea0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7d84f010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7d84f610" loc="58:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7d84f610"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7d84f7f8"/>
        <function-ref name="configure" scoped="" ref="0x7d84f8d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7d84fa38" loc="59:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7d84fa38"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7d84fc10"/>
        <function-ref name="isEmpty" scoped="" ref="0x7d84fcf0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7d84fdd0"/>
        <function-ref name="dequeue" scoped="" ref="0x7d84feb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7d850578" loc="53:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7d850578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d850760"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d850840"/>
        <function-ref name="request" scoped="" ref="0x7d850920"/>
        <function-ref name="granted" scoped="" ref="0x7d850a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7d850ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7d84f150" loc="55:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7d84f150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7d84f328"/>
        <function-ref name="userId" scoped="" ref="0x7d84f408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7d84e050" loc="71:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7d84e050"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d84e228"/>
        <function-ref name="runTask" scoped="" ref="0x7d84e308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7dd3c0b0" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7dd3c0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd3c288"/>
        <function-ref name="write" scoped="" ref="0x7dd3c368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7dd3e880" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7dd3e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd3ea58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7dd3c920" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7dd3c920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd3caf8"/>
        <function-ref name="write" scoped="" ref="0x7dd3cbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7dd3bae0" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dd3bae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd3bcb8"/>
        <function-ref name="write" scoped="" ref="0x7dd3bd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7dd3d7a0" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7dd3d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd3d978"/>
        <function-ref name="write" scoped="" ref="0x7dd3da58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7dd40788" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7dd40788"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd40960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7dd3d010" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7dd3d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd3d1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7dd3c4e8" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7dd3c4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd3c6c0"/>
        <function-ref name="write" scoped="" ref="0x7dd3c7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7dd3ebd8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7dd3ebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd3edb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7dd3b6a8" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7dd3b6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd3b880"/>
        <function-ref name="write" scoped="" ref="0x7dd3b960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7dd40ae0" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7dd40ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd40cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7dd3bf18" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7dd3bf18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dd3a108"/>
        <function-ref name="writeDone" scoped="" ref="0x7dd3a1e8"/>
        <function-ref name="write" scoped="" ref="0x7dd3a2c8"/>
        <function-ref name="beginRead" scoped="" ref="0x7dd3a3a8"/>
        <function-ref name="readDone" scoped="" ref="0x7dd3a488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7dd3dbd8" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7dd3dbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd3de30"/>
        <function-ref name="write" scoped="" ref="0x7dd3df10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7dd3d368" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7dd3d368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd3d540"/>
        <function-ref name="write" scoped="" ref="0x7dd3d620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7dd40e38" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7dd40e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd3e050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7dd41d28" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7dd41d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dd41f00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dd40010"/>
        <function-ref name="request" scoped="" ref="0x7dd400f0"/>
        <function-ref name="granted" scoped="" ref="0x7dd401d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7dd402b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7dd3b270" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7dd3b270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd3b448"/>
        <function-ref name="write" scoped="" ref="0x7dd3b528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7dd3cd58" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7dd3cd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd3b010"/>
        <function-ref name="write" scoped="" ref="0x7dd3b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7dd40430" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7dd40430"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd40608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7dd3e528" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7dd3e528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd3e700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7dd3e1d0" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7dd3e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd3e3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7dd3a608" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7dd3a608"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dd3a7e0"/>
        <function-ref name="writeDone" scoped="" ref="0x7dd3a8c0"/>
        <function-ref name="write" scoped="" ref="0x7dd3a9a0"/>
        <function-ref name="beginRead" scoped="" ref="0x7dd3aa80"/>
        <function-ref name="readDone" scoped="" ref="0x7dd3ab60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7dd27488" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x7dd27488"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dd27660"/>
        <function-ref name="cancel" scoped="" ref="0x7dd27740"/>
        <function-ref name="modify" scoped="" ref="0x7dd27820"/>
        <function-ref name="sendDone" scoped="" ref="0x7dd27900"/>
        <function-ref name="resendCCA" scoped="" ref="0x7dd279e0"/>
        <function-ref name="resend" scoped="" ref="0x7dd27ac0"/>
        <function-ref name="sendCCA" scoped="" ref="0x7dd27ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dd33cf0" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dd33cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dd33ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7dd27060" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7dd27060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7dd27238"/>
        <function-ref name="stop" scoped="" ref="0x7dd27318"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaBackoff" ref="0x7dd27d10" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaBackoff" scoped="" ref="0x7dd27d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="congestion" scoped="" ref="0x7dd27ee8"/>
        <function-ref name="initial" scoped="" ref="0x7dd26010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioTimeStamping" ref="0x7dd22bf8" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioTimeStamping" scoped="" ref="0x7dd22bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimeStamping"/>
      </instance>
      <interface-functions>
        <function-ref name="transmittedSFD" scoped="" ref="0x7dd22dd0"/>
        <function-ref name="receivedSFD" scoped="" ref="0x7dd22eb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7dd179b0" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7dd179b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd17b88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7dd1c810" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x7dd1c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7dd1c9e8"/>
        <function-ref name="disable" scoped="" ref="0x7dd1cac8"/>
        <function-ref name="captured" scoped="" ref="0x7dd1cba8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7dd1cc88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7dd1d0b8" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x7dd1d0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b60"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120ce0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7dd1c418"/>
        <function-ref name="fired" scoped="" ref="0x7dd1dca8"/>
        <function-ref name="startAt" scoped="" ref="0x7dd1c0d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7dd1dea8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7dd1c618"/>
        <function-ref name="start" scoped="" ref="0x7dd1d808"/>
        <function-ref name="stop" scoped="" ref="0x7dd1daa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7dd18980" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dd18980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd18bd8"/>
        <function-ref name="write" scoped="" ref="0x7dd18cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7dd1fd58" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7dd1fd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dd1e010"/>
        <function-ref name="cancel" scoped="" ref="0x7dd1e0f0"/>
        <function-ref name="modify" scoped="" ref="0x7dd1e1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7dd1e2b0"/>
        <function-ref name="resendCCA" scoped="" ref="0x7dd1e390"/>
        <function-ref name="resend" scoped="" ref="0x7dd1e470"/>
        <function-ref name="sendCCA" scoped="" ref="0x7dd1e550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7dd18e50" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7dd18e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd17050"/>
        <function-ref name="write" scoped="" ref="0x7dd17130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7dd17d28" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7dd17d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd17f00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7dd1a7c8" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7dd1a7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd1a9a0"/>
        <function-ref name="isInput" scoped="" ref="0x7dd1aa80"/>
        <function-ref name="toggle" scoped="" ref="0x7dd1ab60"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd1ac40"/>
        <function-ref name="get" scoped="" ref="0x7dd1ad20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd1ae00"/>
        <function-ref name="set" scoped="" ref="0x7dd1aee0"/>
        <function-ref name="clr" scoped="" ref="0x7dd19010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7dd12d78" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7dd12d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7dd14010"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7dd140f0"/>
        <function-ref name="sfd" scoped="" ref="0x7dd141d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dd1f5c0" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dd1f5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dd1f798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7dd19b40" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7dd19b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dd19d18"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dd19df8"/>
        <function-ref name="request" scoped="" ref="0x7dd19ed8"/>
        <function-ref name="granted" scoped="" ref="0x7dd18010"/>
        <function-ref name="isOwner" scoped="" ref="0x7dd180f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7dd1ce20" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7dd1ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd1a010"/>
        <function-ref name="isInput" scoped="" ref="0x7dd1a0f0"/>
        <function-ref name="toggle" scoped="" ref="0x7dd1a1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd1a2b0"/>
        <function-ref name="get" scoped="" ref="0x7dd1a390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd1a470"/>
        <function-ref name="set" scoped="" ref="0x7dd1a550"/>
        <function-ref name="clr" scoped="" ref="0x7dd1a630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7dd172c8" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7dd172c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd174a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7dd191a8" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x7dd191a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd19380"/>
        <function-ref name="isInput" scoped="" ref="0x7dd19460"/>
        <function-ref name="toggle" scoped="" ref="0x7dd19540"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd19620"/>
        <function-ref name="get" scoped="" ref="0x7dd19700"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd197e0"/>
        <function-ref name="set" scoped="" ref="0x7dd198c0"/>
        <function-ref name="clr" scoped="" ref="0x7dd199a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7dd14338" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7dd14338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7dd14510"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7dd145f0"/>
        <function-ref name="led1On" scoped="" ref="0x7dd146d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7dd147b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7dd14890"/>
        <function-ref name="get" scoped="" ref="0x7dd14970"/>
        <function-ref name="led1Off" scoped="" ref="0x7dd14a50"/>
        <function-ref name="led2Off" scoped="" ref="0x7dd14dd0"/>
        <function-ref name="set" scoped="" ref="0x7dd14b30"/>
        <function-ref name="led0On" scoped="" ref="0x7dd14c10"/>
        <function-ref name="led2On" scoped="" ref="0x7dd14cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7dd1f908" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7dd1f908"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7dd1fae0"/>
        <function-ref name="stop" scoped="" ref="0x7dd1fbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaBackoff" ref="0x7dd1e6c0" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaBackoff" scoped="" ref="0x7dd1e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="congestion" scoped="" ref="0x7dd1e898"/>
        <function-ref name="initial" scoped="" ref="0x7dd1e978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeStamp" ref="0x7dd1eb20" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStamp" scoped="" ref="0x7dd1eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimeStamping"/>
      </instance>
      <interface-functions>
        <function-ref name="transmittedSFD" scoped="" ref="0x7dd1ecf8"/>
        <function-ref name="receivedSFD" scoped="" ref="0x7dd1edd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7dd18288" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7dd18288"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dd18460"/>
        <function-ref name="writeDone" scoped="" ref="0x7dd18540"/>
        <function-ref name="write" scoped="" ref="0x7dd18620"/>
        <function-ref name="beginRead" scoped="" ref="0x7dd18700"/>
        <function-ref name="readDone" scoped="" ref="0x7dd187e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7dd17638" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7dd17638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd17810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7dcc10b0" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7dcc10b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dcc1288"/>
        <function-ref name="write" scoped="" ref="0x7dcc1368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7dcc4880" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7dcc4880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dcc4a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7dcc1920" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7dcc1920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dcc1af8"/>
        <function-ref name="write" scoped="" ref="0x7dcc1bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7dcc0ae0" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dcc0ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dcc0cb8"/>
        <function-ref name="write" scoped="" ref="0x7dcc0d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7dcc37a0" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7dcc37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dcc3978"/>
        <function-ref name="write" scoped="" ref="0x7dcc3a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7dcc5788" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7dcc5788"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dcc5960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7dcc3010" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7dcc3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dcc31e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7dcc14e8" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7dcc14e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dcc16c0"/>
        <function-ref name="write" scoped="" ref="0x7dcc17a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7dcc4bd8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7dcc4bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dcc4db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7dcc06a8" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7dcc06a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dcc0880"/>
        <function-ref name="write" scoped="" ref="0x7dcc0960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7dcc5ae0" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7dcc5ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dcc5cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7dcc0f18" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7dcc0f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dcbf108"/>
        <function-ref name="writeDone" scoped="" ref="0x7dcbf1e8"/>
        <function-ref name="write" scoped="" ref="0x7dcbf2c8"/>
        <function-ref name="beginRead" scoped="" ref="0x7dcbf3a8"/>
        <function-ref name="readDone" scoped="" ref="0x7dcbf488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7dcc3bd8" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7dcc3bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dcc3e30"/>
        <function-ref name="write" scoped="" ref="0x7dcc3f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7dcc3368" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7dcc3368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dcc3540"/>
        <function-ref name="write" scoped="" ref="0x7dcc3620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7dcc5e38" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7dcc5e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dcc4050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7dcc6cd8" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7dcc6cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dcc6eb0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dcc5010"/>
        <function-ref name="request" scoped="" ref="0x7dcc50f0"/>
        <function-ref name="granted" scoped="" ref="0x7dcc51d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7dcc52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7dcc0270" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7dcc0270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dcc0448"/>
        <function-ref name="write" scoped="" ref="0x7dcc0528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7dcc1d58" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7dcc1d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dcc0010"/>
        <function-ref name="write" scoped="" ref="0x7dcc00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7dcc5430" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7dcc5430"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dcc5608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7dcc4528" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7dcc4528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dcc4700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7dcc41d0" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7dcc41d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dcc43a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7dcbf608" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7dcbf608"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dcbf7e0"/>
        <function-ref name="writeDone" scoped="" ref="0x7dcbf8c0"/>
        <function-ref name="write" scoped="" ref="0x7dcbf9a0"/>
        <function-ref name="beginRead" scoped="" ref="0x7dcbfa80"/>
        <function-ref name="readDone" scoped="" ref="0x7dcbfb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7dcb9ec0" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7dcb9ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7dcb80c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7dcb81a0"/>
        <function-ref name="sfd" scoped="" ref="0x7dcb8280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dcb9750" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dcb9750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dcb9928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7dcb83e8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7dcb83e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7dcb85c0"/>
        <function-ref name="receive" scoped="" ref="0x7dcb86a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7dcb8780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7dcb9a98" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7dcb9a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7dcb9c70"/>
        <function-ref name="stop" scoped="" ref="0x7dcb9d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7dcb2288" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x7dcb2288"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dcb2460"/>
        <function-ref name="isInput" scoped="" ref="0x7dcb2540"/>
        <function-ref name="toggle" scoped="" ref="0x7dcb2620"/>
        <function-ref name="isOutput" scoped="" ref="0x7dcb2700"/>
        <function-ref name="get" scoped="" ref="0x7dcb27e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dcb28c0"/>
        <function-ref name="set" scoped="" ref="0x7dcb29a0"/>
        <function-ref name="clr" scoped="" ref="0x7dcb2a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7dca4680" loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x7dca4680"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7dca4858"/>
        <function-ref name="runTask" scoped="" ref="0x7dca4938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7dcb2c18" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x7dcb2c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dcb2df0"/>
        <function-ref name="isInput" scoped="" ref="0x7dcb2ed0"/>
        <function-ref name="toggle" scoped="" ref="0x7dcb1010"/>
        <function-ref name="isOutput" scoped="" ref="0x7dcb10f0"/>
        <function-ref name="get" scoped="" ref="0x7dcb11d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dcb12b0"/>
        <function-ref name="set" scoped="" ref="0x7dcb1390"/>
        <function-ref name="clr" scoped="" ref="0x7dcb1470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7dcb4dd8" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7dcb4dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7dcb3010"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7dcb30f0"/>
        <function-ref name="sfd" scoped="" ref="0x7dcb31d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7dca8a58" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7dca8a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dca8c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7dcb3868" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7dcb3868"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dcb3a40"/>
        <function-ref name="isInput" scoped="" ref="0x7dcb3b20"/>
        <function-ref name="toggle" scoped="" ref="0x7dcb3c00"/>
        <function-ref name="isOutput" scoped="" ref="0x7dcb3ce0"/>
        <function-ref name="get" scoped="" ref="0x7dcb3dc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dcb3ea0"/>
        <function-ref name="set" scoped="" ref="0x7dcb2010"/>
        <function-ref name="clr" scoped="" ref="0x7dcb20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dcb4668" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dcb4668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dcb4840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7dcb3338" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7dcb3338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7dcb3510"/>
        <function-ref name="receive" scoped="" ref="0x7dcb35f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7dcb36d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7dcb1c28" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7dcb1c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dcb1e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dcb1ee0"/>
        <function-ref name="request" scoped="" ref="0x7dca8010"/>
        <function-ref name="granted" scoped="" ref="0x7dca80f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7dca81d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7dca8368" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7dca8368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dca8540"/>
        <function-ref name="writeDone" scoped="" ref="0x7dca8620"/>
        <function-ref name="write" scoped="" ref="0x7dca8700"/>
        <function-ref name="beginRead" scoped="" ref="0x7dca87e0"/>
        <function-ref name="readDone" scoped="" ref="0x7dca88c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7dca7178" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7dca7178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7dca73d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7dca74b0"/>
        <function-ref name="led1On" scoped="" ref="0x7dca7590"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7dca7670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7dca7750"/>
        <function-ref name="get" scoped="" ref="0x7dca7830"/>
        <function-ref name="led1Off" scoped="" ref="0x7dca7910"/>
        <function-ref name="led2Off" scoped="" ref="0x7dca7c90"/>
        <function-ref name="set" scoped="" ref="0x7dca79f0"/>
        <function-ref name="led0On" scoped="" ref="0x7dca7ad0"/>
        <function-ref name="led2On" scoped="" ref="0x7dca7bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7dcb49b0" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7dcb49b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7dcb4b88"/>
        <function-ref name="stop" scoped="" ref="0x7dcb4c68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7dcb1610" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7dcb1610"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7dcb17e8"/>
        <function-ref name="disable" scoped="" ref="0x7dcb18c8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7dcb19a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7dcb1a88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7dca8dd0" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7dca8dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dca7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7dc79d38" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7dc79d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc79f10"/>
        <function-ref name="write" scoped="" ref="0x7dc78010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7dc7b5b8" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7dc7b5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc7b790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7dc785c8" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7dc785c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc787a0"/>
        <function-ref name="write" scoped="" ref="0x7dc78880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7dc776e8" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dc776e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc778c0"/>
        <function-ref name="write" scoped="" ref="0x7dc779a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7dc79448" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7dc79448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc79620"/>
        <function-ref name="write" scoped="" ref="0x7dc79700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7dc7c4e8" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7dc7c4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc7c6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7dc7bc68" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7dc7bc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc7be40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7dc78190" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7dc78190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc78368"/>
        <function-ref name="write" scoped="" ref="0x7dc78448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7dc7b910" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7dc7b910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc7bae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7dc772b0" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7dc772b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc77488"/>
        <function-ref name="write" scoped="" ref="0x7dc77568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7dc7c840" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7dc7c840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc7ca18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7dc77b20" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7dc77b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dc77cf8"/>
        <function-ref name="writeDone" scoped="" ref="0x7dc77dd8"/>
        <function-ref name="write" scoped="" ref="0x7dc77eb8"/>
        <function-ref name="beginRead" scoped="" ref="0x7dc76010"/>
        <function-ref name="readDone" scoped="" ref="0x7dc760f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7dc79880" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7dc79880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc79ad8"/>
        <function-ref name="write" scoped="" ref="0x7dc79bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7dc79010" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7dc79010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc791e8"/>
        <function-ref name="write" scoped="" ref="0x7dc792c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7dc7cb98" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7dc7cb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc7cd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7dcb59f8" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7dcb59f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dcb5bd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dcb5cb0"/>
        <function-ref name="request" scoped="" ref="0x7dcb5d90"/>
        <function-ref name="granted" scoped="" ref="0x7dcb5e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7dc7c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7dc78e38" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7dc78e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc77050"/>
        <function-ref name="write" scoped="" ref="0x7dc77130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7dc78a00" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7dc78a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc78bd8"/>
        <function-ref name="write" scoped="" ref="0x7dc78cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7dc7c190" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7dc7c190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc7c368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7dc7b260" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7dc7b260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc7b438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7dc7cef0" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7dc7cef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc7b0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7dc76270" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7dc76270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dc76448"/>
        <function-ref name="writeDone" scoped="" ref="0x7dc76528"/>
        <function-ref name="write" scoped="" ref="0x7dc76608"/>
        <function-ref name="beginRead" scoped="" ref="0x7dc766e8"/>
        <function-ref name="readDone" scoped="" ref="0x7dc767c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7dc5fe18" loc="35:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7dc5fe18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7dc62010"/>
        <function-ref name="rand32" scoped="" ref="0x7dc620f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7dc5f568" loc="34:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7dc5f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dc5fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dc64808" loc="33:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dc64808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dc649e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7dc5cd08" loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7dc5cd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7dc5cee0"/>
        <function-ref name="rand32" scoped="" ref="0x7dc5b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7dc5c458" loc="33:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7dc5c458"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dc5ca80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dc5c040" loc="32:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dc5c040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dc5c218"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7dc57cd8" loc="37:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7dc57cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7dc57eb0"/>
        <function-ref name="rand32" scoped="" ref="0x7dc56010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7dc57428" loc="36:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7dc57428"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dc57a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dc57010" loc="35:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dc57010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dc571e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7dc48d78" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7dc48d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7dc41010"/>
        <function-ref name="getRssi" scoped="" ref="0x7dc410f0"/>
        <function-ref name="getPower" scoped="" ref="0x7dc411d0"/>
        <function-ref name="getLqi" scoped="" ref="0x7dc412b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7dc41450" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7dc41450"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7dc41628"/>
        <function-ref name="noAck" scoped="" ref="0x7dc41708"/>
        <function-ref name="wasAcked" scoped="" ref="0x7dc417e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7dc34740" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="ComSatC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7dc34740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120878"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7dc32068"/>
        <function-ref name="fired" scoped="" ref="0x7dc33470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7dc33a10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7dc33830"/>
        <function-ref name="getdt" scoped="" ref="0x7dc32428"/>
        <function-ref name="gett0" scoped="" ref="0x7dc32248"/>
        <function-ref name="isRunning" scoped="" ref="0x7dc33650"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7dc34d68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7dc33d30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7dc33010"/>
        <function-ref name="stop" scoped="" ref="0x7dc33290"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Boot" loc="39:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10;</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7ef83018" loc="49:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="LCDSetter" loc="1:LCDSetter.nc">
      <function command="" provided="0" name="init" ref="0x7ef61bd8" loc="2:LCDSetter.nc">
        <interfacedef-ref qname="LCDSetter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setLCD" ref="0x7ef42530" loc="3:LCDSetter.nc">
        <interfacedef-ref qname="LCDSetter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7ef61ef0" loc="3:LCDSetter.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="value" ref="0x7ef42090" loc="3:LCDSetter.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
          <variable name="avg" ref="0x7ef42220" loc="3:LCDSetter.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
          <variable name="stdev" ref="0x7ef423b0" loc="3:LCDSetter.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLCD2" ref="0x7ef429b8" loc="4:LCDSetter.nc">
        <interfacedef-ref qname="LCDSetter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
              <typename><typedef-ref name="nx_uint32_t" ref="0x7f491440"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x7ef42850" loc="4:LCDSetter.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
              <typename><typedef-ref name="nx_uint32_t" ref="0x7f491440"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LEDController" loc="2:LEDController.nc">
      <function command="" provided="0" name="test" ref="0x7ef63b38" loc="3:LEDController.nc">
        <interfacedef-ref qname="LEDController"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="BlinkLed1" ref="0x7ef53140" loc="7:LEDController.nc">
        <interfacedef-ref qname="LEDController"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="IntervalBlinkLed0" ref="0x7ef538d8" loc="10:LEDController.nc">
        <interfacedef-ref qname="LEDController"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="interval" ref="0x7ef53770" loc="10:LEDController.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="BlinkLed2" ref="0x7ef53438" loc="8:LEDController.nc">
        <interfacedef-ref qname="LEDController"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="IntervalBlinkLed1" ref="0x7ef53d78" loc="11:LEDController.nc">
        <interfacedef-ref qname="LEDController"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="interval" ref="0x7ef53c10" loc="11:LEDController.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="BlinkLed0" ref="0x7ef63e30" loc="6:LEDController.nc">
        <interfacedef-ref qname="LEDController"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="IntervalBlinkLed2" ref="0x7ef51230" loc="12:LEDController.nc">
        <interfacedef-ref qname="LEDController"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="interval" ref="0x7ef510c8" loc="12:LEDController.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="BlinkDone" ref="0x7ef51528" loc="13:LEDController.nc">
        <interfacedef-ref qname="LEDController"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ComSat" loc="1:ComSat.nc">
      <function event="" provided="0" name="initDone" ref="0x7ef307e8" loc="3:ComSat.nc">
        <interfacedef-ref qname="ComSat"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="init" ref="0x7ef304f0" loc="2:ComSat.nc">
        <interfacedef-ref qname="ComSat"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sendData" ref="0x7ef30c88" loc="4:ComSat.nc">
        <interfacedef-ref qname="ComSat"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ef30b20" loc="4:ComSat.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="received" ref="0x7ef23178" loc="5:ComSat.nc">
        <interfacedef-ref qname="ComSat"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ef23010" loc="5:ComSat.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f210198" loc="56:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f2105a0" loc="64:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="TempSensor" loc="1:TempSensor.nc">
      <function event="" provided="0" name="done" ref="0x7ef333b8" loc="3:TempSensor.nc">
        <interfacedef-ref qname="TempSensor"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mytemp" ref="0x7ef50ef8" loc="3:TempSensor.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
          <variable name="myhumi" ref="0x7ef330b0" loc="3:TempSensor.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
          <variable name="myur" ref="0x7ef33240" loc="3:TempSensor.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7ef50bd8" loc="2:TempSensor.nc">
        <interfacedef-ref qname="TempSensor"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ef81660" loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ef81660"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7ef715b8" loc="125:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.&#10;</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7ef80950" loc="72:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7ef729a8" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7ef72418" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7ef725a8" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7ef720f0" loc="87:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.&#10;</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7ef71dd0" loc="140:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7ef719f8" loc="133:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7ef80d20" loc="81:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7ef81d18" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7ef81a70" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7ef71260" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7ef72cd0" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7ef72e60" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7ef80310" loc="62:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7ef80068" loc="62:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7ef80618" loc="67:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="40:/opt/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Init.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.1.2.13 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7ee90eb0" loc="51:/opt/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7ee62778" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7ee62520" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7ee70208" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.&#10;</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7ee707d8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10;</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7ee70560" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7ee70db0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10;</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7ee70b30" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7ee621b8" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10;</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10;</short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7ee20cb0" loc="33:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7ee13010" loc="34:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7ee20680" loc="31:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7ee13648" loc="36:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7ee20998" loc="32:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7ee13328" loc="35:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7ee20060" loc="29:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="clr" ref="0x7ee20370" loc="30:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.&#10;&#10;</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f230010" loc="46:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f2307f8" loc="61:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f230428" loc="54:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10;</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f0513c8" loc="59:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep. </short>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.1.2.11 2006/09/22 19:23:59 idgay Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7efe0028" loc="54:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f152338"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f001ee8" loc="44:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7eb147c0" loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7eb147c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7eb14c80" loc="50:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10;</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7eaf1450" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7eaf1450"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7eaf1568" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7eaf1568"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7eaf1a38" loc="53:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7eaf1568"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7eae51b0" loc="65:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7eaf1e58" loc="60:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits. </short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7eae5580" loc="71:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed. </short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10;</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7eb02388" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7eb02388"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7eb024a0" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7eb024a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7eaf52a8" loc="98:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.&#10;</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7eb024a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7eb01268" loc="67:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7eb01f08" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7eb024a0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7eb024a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7eb019e0" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7eb024a0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7eb01b70" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7eb024a0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7eb016a0" loc="77:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7eaf56e0" loc="105:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10;</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7eb024a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="start" ref="0x7eb02b60" loc="55:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7eb024a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7eb028c8" loc="55:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7eb024a0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7eb02f18" loc="62:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10;</short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x7eac3cd0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1015c0"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f101810"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7eac2d00" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0e16f0"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f0e1940"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7eac24f0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f03a8"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f0f05f8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7eac29a8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f03a8"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f0f05f8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7eac2840" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f03a8"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f0f05f8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7eac11d0" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0e16f0"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f0e1940"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7eac1068" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0e16f0"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f0e1940"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7eac2198" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1015c0"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f101810"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7eac2030" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1015c0"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f101810"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.&#10;</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7eab5778" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7eab5778"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7eab3278" loc="65:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10;</short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7eab4520" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7eab5bf0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.&#10;</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7eab5778"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="reset" ref="0x7eab4858" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7eab3600" loc="71:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10;</short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7eab41f0" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.&#10;</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7eab5778"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7eab4010" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7eab5778"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7eab4b88" loc="56:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7eab4eb8" loc="59:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.  &#10;</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7ead4010" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7ead4010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7ead10e8" loc="89:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="test" ref="0x7ead2a18" loc="78:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10;</short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7ead4470" loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.&#10;</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7ead4010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7ead1600" loc="95:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.&#10;</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7ead1428" loc="95:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7ead1998" loc="101:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.&#10;</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="reset" ref="0x7ead2010" loc="66:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7ead4cb8" loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7ead2da8" loc="84:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10;</short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7ead4970" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.&#10;</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7ead4010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7ead47b0" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7ead4010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7ead2348" loc="69:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7ead2678" loc="72:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <short>&#10; Constants for manipulating LEDs.&#10;&#10;</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7e8c2e00" loc="50:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7e8c1200" loc="56:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7e8c1570" loc="61:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7e8c1cb8" loc="72:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7e8c0788" loc="89:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7e8c0cc8" loc="106:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LED_LED0, LED_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7e8c18e0" loc="66:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7e8b73d0" loc="123:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask. </short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7e8b7030" loc="123:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7e8c2a90" loc="45:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7e8c0040" loc="78:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7e8c03b0" loc="83:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Interaction" loc="20:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
      <documentation loc="20:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
        <short>***************************************************************************</short>
      </documentation>
      <function event="" provided="0" name="StartDoneConfiguration" ref="0x7e777ce0" loc="22:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
        <interfacedef-ref qname="Interaction"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="appType" ref="0x7e7779e8" loc="22:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="optType" ref="0x7e777b70" loc="22:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getSensorDataDone" ref="0x7e776ae8" loc="26:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
        <interfacedef-ref qname="Interaction"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:67" alignment="I:1"><struct-ref name="_app_struct" ref="0x7e7b05b0"/>
                <typename><typedef-ref name="App_struct_t" ref="0x7e7b0b18"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="App_Payload" ref="0x7e7767e8" loc="26:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:67" alignment="I:1"><struct-ref name="_app_struct" ref="0x7e7b05b0"/>
                <typename><typedef-ref name="App_struct_t" ref="0x7e7b0b18"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="app_size" ref="0x7e776978" loc="26:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="Urgency_Data" ref="0x7e7747c0" loc="29:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
        <interfacedef-ref qname="Interaction"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Urgency_Payload" ref="0x7e7744c8" loc="29:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e774650" loc="29:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Process_CMD" ref="0x7e774180" loc="28:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
        <interfacedef-ref qname="Interaction"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="payload" ref="0x7e776e20" loc="28:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e774010" loc="28:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="SetSamplingTime" ref="0x7e776198" loc="24:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
        <interfacedef-ref qname="Interaction"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="SamplingInfo" ref="0x7e776030" loc="24:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSensorData" ref="0x7e776490" loc="25:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
        <interfacedef-ref qname="Interaction"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="StartConfiguration" ref="0x7e7776c0" loc="21:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
        <interfacedef-ref qname="Interaction"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:67" alignment="I:1"><struct-ref name="_app_struct" ref="0x7e7b05b0"/>
                <typename><typedef-ref name="App_struct_t" ref="0x7e7b0b18"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="App_Payload" ref="0x7e777558" loc="21:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:67" alignment="I:1"><struct-ref name="_app_struct" ref="0x7e7b05b0"/>
                <typename><typedef-ref name="App_struct_t" ref="0x7e7b0b18"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Send_LongData" ref="0x7e773190" loc="31:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
        <interfacedef-ref qname="Interaction"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="OptType" ref="0x7e774ae0" loc="31:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="Cmd1" ref="0x7e774c68" loc="31:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="Len" ref="0x7e774df0" loc="31:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="LongDataBuff" ref="0x7e773010" loc="31:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/Interaction.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="65:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7e771ca0" loc="73:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.&#10;&#10;</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e770180" loc="82:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10;</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="SCSuartDBG" loc="29:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBG.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBG.nc">
        <short>***************************************************************************</short>
      </documentation>
      <function command="" provided="0" name="UARTSend" ref="0x7e768830" loc="30:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBG.nc">
        <interfacedef-ref qname="SCSuartDBG"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e768538" loc="30:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBG.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e7686c0" loc="30:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBG.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
      <documentation loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7e715b08" loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7e715b08"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7e712010" loc="55:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.&#10; &#10;</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7e7126e0" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().&#10;&#10;</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7e715b08"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7e712330" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7e7124b8" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7e715b08"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CommunicationWithOPT" loc="20:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
      <documentation loc="20:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
        <short>***************************************************************************</short>
      </documentation>
      <function event="" provided="0" name="parsing_sensor" ref="0x7e702e70" loc="30:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
        <interfacedef-ref qname="CommunicationWithOPT"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="RecvMsg" ref="0x7e702d08" loc="30:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="RequestLongMSG" ref="0x7e703790" loc="26:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
        <interfacedef-ref qname="CommunicationWithOPT"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="OptType" ref="0x7e703498" loc="26:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="Seq" ref="0x7e703620" loc="26:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="SpecialControlMSG" ref="0x7e7024e0" loc="27:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
        <interfacedef-ref qname="CommunicationWithOPT"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="TXpacketType" ref="0x7e703ac0" loc="27:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="OptType" ref="0x7e703c48" loc="27:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="Cmd1" ref="0x7e703dd0" loc="27:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="Cmd2" ref="0x7e702010" loc="27:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="SetDataBuff" ref="0x7e7021c0" loc="27:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="RXpacketType" ref="0x7e702350" loc="27:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="parsing_control" ref="0x7e700358" loc="31:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
        <interfacedef-ref qname="CommunicationWithOPT"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="RecvMsg" ref="0x7e7001f0" loc="31:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="parsing_longDT" ref="0x7e700820" loc="32:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
        <interfacedef-ref qname="CommunicationWithOPT"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="RecvMsg" ref="0x7e7006b8" loc="32:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="RequestSensorMSG" ref="0x7e703178" loc="25:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
        <interfacedef-ref qname="CommunicationWithOPT"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="OptType" ref="0x7e703010" loc="25:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="SendConfigureMSG" ref="0x7e705958" loc="22:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
        <interfacedef-ref qname="CommunicationWithOPT"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="SendLongMSG" ref="0x7e704340" loc="23:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
        <interfacedef-ref qname="CommunicationWithOPT"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="OptType" ref="0x7e705c78" loc="23:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="Cmd1" ref="0x7e705e00" loc="23:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="Len" ref="0x7e704010" loc="23:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="LongDataBuff" ref="0x7e7041c0" loc="23:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7e705658" loc="21:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
        <interfacedef-ref qname="CommunicationWithOPT"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="SendControlMSG" ref="0x7e704ca0" loc="24:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
        <interfacedef-ref qname="CommunicationWithOPT"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="OptType" ref="0x7e704660" loc="24:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="Cmd1" ref="0x7e7047e8" loc="24:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="Cmd2" ref="0x7e704970" loc="24:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="SetDataBuff" ref="0x7e704b20" loc="24:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="parsing_config" ref="0x7e7029a8" loc="29:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
        <interfacedef-ref qname="CommunicationWithOPT"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="RecvMsg" ref="0x7e702840" loc="29:/opt/tinyos-2.x/contrib/OptModuleEX/LIB_Header/CommunicationWithOPT.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SensirionSht11" loc="40:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
        <short>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor. &#10;&#10;</short>
        <long>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="measureHumidityDone" ref="0x7e64a010" loc="84:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a humidity measurement.&#10;&#10;</short>
          <long>&#10; Presents the result of a humidity measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the humidity reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7e651b70" loc="84:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7e651d00" loc="84:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readStatusReg" ref="0x7e64a408" loc="92:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
        <documentation loc="86:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Reads the current contents of the SHT11 status and control&#10; register.</short>
          <long>&#10; Reads the current contents of the SHT11 status and control&#10; register. See the datasheet for interpretation of this register.&#10;&#10; @return SUCCESS if the read will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="measureHumidity" ref="0x7e651848" loc="76:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Starts a humidity measurement.&#10;&#10;</short>
          <long>&#10; Starts a humidity measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="measureTemperature" ref="0x7e652da0" loc="61:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Starts a temperature measurement.&#10;&#10;</short>
          <long>&#10; Starts a temperature measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="writeStatusReg" ref="0x7e649078" loc="109:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Writes a new value to the SHT11 status and control register.&#10;&#10;</short>
          <long>&#10; Writes a new value to the SHT11 status and control register.&#10;&#10; @param val the new value to be written&#10;&#10; @return SUCCESS if the write will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7e64ae08" loc="109:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7e652500" loc="47:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Resets the sensor.&#10;&#10;</short>
          <long>&#10; Resets the sensor.&#10;&#10; @return SUCCESS if the sensor will be reset&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="writeStatusRegDone" ref="0x7e6495b8" loc="116:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
        <documentation loc="111:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Signals the completion of the status register write.&#10;&#10;</short>
          <long>&#10; Signals the completion of the status register write.&#10;&#10; @param result SUCCESS if the write was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7e6493a0" loc="116:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readStatusRegDone" ref="0x7e64aae0" loc="100:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Presents the value of the status register.&#10;&#10;</short>
          <long>&#10; Presents the value of the status register.&#10;&#10; @param result SUCCESS if the read succeeded&#10; @param val the value of the register&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7e64a730" loc="100:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7e64a8b8" loc="100:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="resetDone" ref="0x7e652a18" loc="54:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Signals that the sensor has been reset.&#10;&#10;</short>
          <long>&#10; Signals that the sensor has been reset.&#10;&#10; @param result SUCCESS if the reset succeeded&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7e652820" loc="54:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="measureTemperatureDone" ref="0x7e6514c8" loc="69:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a temperature measurement.&#10;&#10;</short>
          <long>&#10; Presents the result of a temperature measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the temperature reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7e6510f8" loc="69:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7e651288" loc="69:/opt/tinyos-2.x/tos/sensorboards/zigbex_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
      <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.1.2.10 $&#10; @date $Date: 2006/08/15 11:50:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7e6551d0" loc="101:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.&#10;&#10;</short>
          <long>&#10; Release a shared resource you previously acquired.&#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7e656a48" loc="87:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="request" ref="0x7e656618" loc="78:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="granted" ref="0x7e656d68" loc="92:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7e6555d8" loc="109:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="103:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="32:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.1.2.3 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7e614ae0" loc="57:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.&#10;&#10;</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0x7e614738" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10;</short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7e614378" loc="43:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7e614050" loc="42:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="66:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7e5aa5d0" loc="88:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10;</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7e5aa330" loc="88:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7e5a9118" loc="110:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="104:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.&#10;&#10;</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7e5aae68" loc="110:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7e5aa010" loc="79:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents. </short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if issuing the start command was successful&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e5aab48" loc="102:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Stop the component and pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;</short>
          <long>&#10; Stop the component and pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10; Return values of SUCCESS will always result in a&#10; &#60;code>stopDone()&#60;/code> event being signalled.&#10;&#10; @return SUCCESS if issuing the stop command was successful&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10;</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7e593950" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7e592640" loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0x7e5935f8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="edge" ref="0x7e592300" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.&#10;</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7e592088" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7e5932a8" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7e593d28" loc="52:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10;</short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10;</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7e584658" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10;</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.1.2.5 $&#10; @date $Date: 2006/08/15 11:50:42 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7e5362e0" loc="43:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7e5367b8" loc="51:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7e5299b0" loc="55:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.&#10;</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="configure" ref="0x7e5295d8" loc="49:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.&#10;</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceController" loc="40:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10;</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $Revision: 1.1.2.4 $&#10; @date $Date: 2006/08/15 11:50:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7e532440" loc="56:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
          <short>&#10; Release control of the resource&#10;&#10;</short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceController"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="requested" ref="0x7e532d08" loc="73:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceController"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="granted" ref="0x7e532010" loc="46:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceController"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7e532850" loc="65:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10; </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceController"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7e531218" loc="81:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceController"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7e52cb18" loc="80:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.&#10;&#10;</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="userId" ref="0x7e52cf18" loc="88:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.&#10; &#10;</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2006/08/15 11:50:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7e51c248" loc="69:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a cleint id&#10;&#10;</short>
          <long>&#10; Enqueue a cleint id&#10;&#10; @param cleintId - the cleint id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7e525518"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7e51c010" loc="69:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7e525518"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7e520288" loc="43:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.&#10;&#10;</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7e520868" loc="52:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10;</short>
          <long>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7e525518"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7e5205e0" loc="52:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7e525518"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7e520c78" loc="60:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the cleint id of the next resource in the queue. &#10;</short>
          <long>&#10; Retreive the cleint id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The cleint id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7e525518"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="45:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7e4d9290" loc="52:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource. </short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="19:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10;</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x7e490498" loc="32:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10;</short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7e4900d0" loc="25:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.&#10;</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x7e490860" loc="39:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.&#10;</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="51:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
      <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7e485350" loc="51:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7e485350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7e4857d0" loc="57:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.&#10; &#10;</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7e485ec0" loc="65:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().&#10;&#10;</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7e485350"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7e485b10" loc="65:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7e485c98" loc="65:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7e485350"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="68:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10;&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10;&#10; from multiple channels using the ATmega128's free-running mode.&#10;&#10;</short>
        <long>&#10;&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10;&#10; from multiple channels using the ATmega128's free-running mode.&#10;&#10; &#60;p>&#10;&#10; Because of the possibility that samples may be imprecise after &#10;&#10; switching channels and/or reference voltages, and because there&#10;&#10; is a one sample delay on swithcing channels and reference voltages,&#10;&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10;&#10; &#60;ol type=&#34;A&#34;>&#10;&#10; &#60;li>Acquire N samples from channel C:&#10;&#10;    &#60;ol>&#10;&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;&#10;       (note that the choice of prescalers is very limited, so you&#10;&#10;       don't have many choices for sampling rate)&#10;&#10;    &#60;li>ignore the first dataReady event&#10;&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;&#10;       on the last one&#10;&#10;    &#60;/ol>&#10;&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;&#10;    assumes that none of these channels are differential)&#10;&#10;    &#60;ol>&#10;&#10;    &#60;li>call getData to start sampling on channel C1&#10;&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;&#10;       *newChannel&#10;&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;&#10;       (the data from the first dataReady event is ignored)&#10;&#10;    &#60;/ol>&#10;&#10; &#60;/ol>&#10;&#10;&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;&#10; @author David Gay&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7e472538" loc="91:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10;&#10; Initiates free-running ADC conversions, with the ability to switch &#10;&#10; channels and reference-voltage with a one sample delay.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Initiates free-running ADC conversions, with the ability to switch &#10;&#10; channels and reference-voltage with a one sample delay.&#10;&#10;&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;&#10;   be changed in the dataReady event, though these changes happen&#10;&#10;   with a one-sample delay (this is a hardware restriction).&#10;&#10; @param refVoltage Initial A/D reference voltage. See the&#10;&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;&#10;   the reference voltage can be changed in the dataReady event with&#10;&#10;   a one-sample delay.&#10;&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;&#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10;&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;&#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;&#10;  See the ATmega128 manual for details.&#10;&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;&#10;   imprecise (due to a change in reference voltage, or switching to a&#10;&#10;   differential input channel)&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7e4739f8" loc="91:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7e473b88" loc="91:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7e473d28" loc="92:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7e473eb8" loc="92:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7e471668" loc="110:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10;&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10;&#10; Returns the next sample in a free-running conversion. Allow the user&#10;&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10;&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10;&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;&#10;   (we assume that the second conversion after a change of reference&#10;&#10;   voltage or after switching to a differential channel is precise)&#10;&#10; @param channel Channel this sample was from.&#10;&#10; @param newChannel Change this parameter to switch to a new channel&#10;&#10;   for the second next sample.&#10;&#10; @param newRefVoltage Change this parameter to change the reference &#10;&#10;   voltage for the second next sample.&#10;&#10;&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e472a68" loc="110:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7e472bf0" loc="110:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x7e472d78" loc="110:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x7e471010" loc="111:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x7e4711c0" loc="111:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="43:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10;&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10;&#10; a single sample from a channel.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10;&#10; a single sample from a channel.&#10;&#10;&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;&#10; @author David Gay&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7e4773a0" loc="61:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10;&#10; Initiates an ADC conversion on a given channel.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Initiates an ADC conversion on a given channel.&#10;&#10;&#10;&#10; @param channel A/D conversion channel.&#10;&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10;&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;&#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10;&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;&#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;&#10;  See the ATmega128 manual for details.&#10;&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;&#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;&#10;   differential input channel)&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7e478868" loc="61:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7e4789f8" loc="61:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7e478b98" loc="62:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7e478d28" loc="62:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7e4763f0" loc="82:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10;&#10; Cancel an outstanding getData operation.</short>
          <long>&#10;&#10; Cancel an outstanding getData operation. Use with care, to&#10;&#10; avoid problems with races between the dataReady event and cancel.&#10;&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;&#10;   conversion was already complete. dataReady will be (or has&#10;&#10;   already been) signaled.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7e477d58" loc="72:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10;&#10; Indicates a sample has been recorded by the ADC as the result&#10;&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Indicates a sample has been recorded by the ADC as the result&#10;&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10;&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10;&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e4778b8" loc="72:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7e477a40" loc="72:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="39:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x7e45d758" loc="105:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x7e463a60" loc="44:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10;</short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f132540"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x7f1327f8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x7e45c8d0" loc="131:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="126:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10;</short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7e45c6b0" loc="131:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7e45db58" loc="113:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="109:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10;</short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x7e460010" loc="73:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x7e462010" loc="49:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10;</short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f132540"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x7f1327f8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x7e463da8" loc="49:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f132540"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x7f1327f8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x7e460678" loc="82:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x7e45c370" loc="124:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="119:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10;</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7e45cdc8" loc="141:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="133:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x7e460340" loc="77:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x7e460cf0" loc="90:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="87:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x7e4609b8" loc="86:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7e45d0e8" loc="97:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x7e45df08" loc="118:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="114:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10;</short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x7e4628e0" loc="60:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10;</short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1218f8"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f121ce8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x7e4626f8" loc="60:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1218f8"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f121ce8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x7e45d420" loc="101:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="98:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x7e4623b0" loc="55:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10;</short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1218f8"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f121ce8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7e462c78" loc="66:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10;</short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7e45a2f0" loc="147:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="143:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10;</short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e45a120" loc="147:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7e466128" loc="73:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.&#10;&#10;</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e466598" loc="82:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10;</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ZigbexBusAdc" loc="27:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusAdc.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusAdc.nc">
        <short>***************************************************************************</short>
      </documentation>
      <function command="" provided="0" name="getChannel" ref="0x7e3b1f28" loc="31:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusAdc.nc">
        <documentation loc="28:/opt/tinyos-2.x/tos/platforms/zigbex/ZigbexBusAdc.nc">
          <short>&#10; Return the A/D channel number to use for one of the ADCn pins.&#10;</short>
        </documentation>
        <interfacedef-ref qname="ZigbexBusAdc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10;</short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.1 $ $Date: 2006/10/10 19:18:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7e365570" loc="44:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7e366f08" loc="42:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x7e364818" loc="49:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e3646b0" loc="49:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7e364060" loc="47:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7e3668c8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7e366be8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7e365250" loc="43:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x7e365890" loc="45:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="tx" ref="0x7e365d30" loc="46:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e365bc8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7e364378" loc="48:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="SCSuartDBGRecv" loc="29:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGRecv.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGRecv.nc">
        <short>***************************************************************************</short>
      </documentation>
      <function event="" provided="0" name="UARTRecv" ref="0x7e28ba60" loc="30:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGRecv.nc">
        <interfacedef-ref qname="SCSuartDBGRecv"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="recv_Char" ref="0x7e28b8f8" loc="30:/opt/tinyos-2.x/tos/platforms/zigbex/SCSuartDBGRecv.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x7e1e9cd8" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7e200c78"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7e1e9428" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7e200c78"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7e1e95d8" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e1e9760" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7e1e76d8" loc="125:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.&#10;</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; The length of this region is maxPayloadLength(). This command&#10; behaves similarly to &#60;tt>Packet.getPayload&#60;/tt> (minus the&#10; length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e1e73c0" loc="125:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7e1e7078" loc="112:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7e1e8418" loc="85:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e1e8030" loc="85:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7e1e8c00" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e1e8760" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7e1e88e8" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.1.2.13 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="payloadLength" ref="0x7e1e2bf0" loc="89:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This call is identical&#10; to &#60;TT>Packet.payloadLength&#60;/TT>, and is included in Receive as a&#10; convenience.&#10;&#10; @param  msg      the packet&#10; @return          the length of the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e1e2970" loc="89:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x7e1e3db8" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  msg      the receied packet&#10; @param  payload  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return          a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
              <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e1e3528" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7e1e36c8" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e1e3850" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7e1e2620" loc="79:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Return point to a protocol's payload region in a packet. </short>
          <long>&#10; Return point to a protocol's payload region in a packet.  If len&#10; is not NULL, getPayload will return the length of the payload in&#10; it. This call is identical to &#60;TT>Packet.getPayload&#60;/TT>, and is&#10; included in Receive as a convenience.&#10;&#10; @param  msg      the packet&#10; @param  len      a pointer to where to store the payload length&#10; @return          a pointer to the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e1e2120" loc="79:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e1e22c8" loc="79:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7e1982b8" loc="54:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet. </short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  msg    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e198068" loc="54:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7e198928" loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  msg    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e198608" loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7e195010" loc="108:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet. </short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.  If&#10; len is not NULL, getPayload will return the length of the payload&#10; in it, which is the same as the return value from&#10; payloadLength(). If a protocol does not support variable length&#10; packets, then *len is equal to maxPayloadLength().&#10;&#10; @param msg   the packet&#10; @param len   pointer to where the current payload length should be stored.&#10; @return      a pointer to the packet's data payload for this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e197a90" loc="108:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e197c38" loc="108:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7e197748" loc="95:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7e197270" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param msg   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e198c78" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e198e00" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10;</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7e17d270" loc="48:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10;</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param msg - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e199dd0" loc="48:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7e17d908" loc="60:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10;</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param msg - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e17d5d8" loc="60:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7e17c010" loc="74:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10;</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param msg - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e17dc78" loc="74:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
      <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="source" ref="0x7e192c30" loc="77:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.&#10;</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param amsg  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7e200c78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7e1929b0" loc="77:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7e192078" loc="57:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.&#10;</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7e200c78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="destination" ref="0x7e192660" loc="67:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.&#10;</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param amsg    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7e200c78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7e1923d0" loc="67:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7e191e90" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet. </short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7e200c78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7e1918a0" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7e191a30" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7e200c78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7e191558" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet. </short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7e200c78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7e191010" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7e1911a0" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7e200c78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7e181b70" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.&#10;</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  amsg   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7e2008d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7e181928" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7e1803e0" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet. </short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  amsg    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7e2008d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7e181eb0" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7e180068" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7e2008d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7e1815e0" loc="125:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7e1811f8" loc="125:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7e171240" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e172e28" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7e171010" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7e171810" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7fdb09c0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e1715a8" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7e172ac0" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.&#10;&#10;</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e1728d0" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7e171de8" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e171b78" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/tinyos-2.x/tos/interfaces/Send.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.1.2.13 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7e157010" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   msg     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e158920" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e158aa8" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7e1559b8" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.&#10;</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; The length of this region is maxPayloadLength(). This command&#10; behaves similarly to &#60;tt>Packet.getPayload&#60;/tt> (minus the&#10; length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param   msg    the packet&#10; @return         a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e155698" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7e155350" loc="101:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7e1576e0" loc="78:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   msg    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e157358" loc="78:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7e157ed8" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param msg   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e157a28" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7e157bb0" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.6 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7e0f1228" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Send a message with CCA disabled.&#10;&#10;</short>
          <long>&#10; Send a message with CCA disabled.&#10;&#10; @param p_msg message to send.&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e0f1010" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7e0f1d68" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="72:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.&#10;&#10;</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="modify" ref="0x7e0f0e00" loc="96:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="87:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7e0f0800" loc="96:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7e0f09a8" loc="96:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e0f0b30" loc="96:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7e0f04c0" loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10;</short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e0f0120" loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7e0f02a8" loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resendCCA" ref="0x7e0f15f8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Send the previous message again with CCA enabled.&#10;&#10;</short>
          <long>&#10; Send the previous message again with CCA enabled.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="resend" ref="0x7e0f19c0" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Send the previous message again with CCA disabled.&#10;&#10;</short>
          <long>&#10; Send the previous message again with CCA disabled.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sendCCA" ref="0x7e0f2bf8" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Send a message with CCA enabled.&#10;&#10;</short>
          <long>&#10; Send a message with CCA enabled.&#10;&#10; @param p_msg message to send.&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e0f29e0" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/opt/tinyos-2.x/tos/interfaces/Random.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10;</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7e0dc6c8" loc="41:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number. &#10;</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7e0dc310" loc="35:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number. &#10;</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7e0f7d20" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7e0f6b38" loc="97:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Disable RX.&#10;&#10;</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7e0f67b8" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Enable RX.&#10;&#10;</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7e0f7240" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7e0f7928" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.&#10;&#10;</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7e0f6098" loc="76:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7e0f6438" loc="83:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Stop the oscillator.&#10;&#10;</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7e0f7590" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaBackoff" loc="29:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
        <short>&#10; Interface for MAC Backoff values from the radio stack.&#10;</short>
        <long>&#10; Interface for MAC Backoff values from the radio stack.&#10; Allows application to change the backoff on a per packet basis.&#10; Only used if congestion control is enabled.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function event="" provided="0" name="congestion" ref="0x7e0dff10" loc="43:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
          <short>&#10; Return backoff time after message m could not be send due to congestion.&#10;</short>
          <long>&#10; Return backoff time after message m could not be send due to congestion.&#10; The units are raio dependent.&#10; @return Backoff time after congestion&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e0dfcc0" loc="43:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initial" ref="0x7e0df948" loc="36:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
          <short>&#10; Return initial backoff time before attempting to send message m.</short>
          <long>&#10; Return initial backoff time before attempting to send message m. The&#10; units are radio dependent.&#10; @return Initial backoff time&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e0df710" loc="36:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.6 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="syncDone" ref="0x7e09c498" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7e09c330" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7e09cc48" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7e09cae0" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7e09b4a0" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7e09b338" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7e09bc60" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7e09baf8" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7e09b010" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sync" ref="0x7e09c010" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7e09c7c0" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
          <short>&#10; Change the channel of the radio.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7e09b7d0" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.4 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7e07baf8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.&#10;&#10;</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7e226010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e07b8d8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7e07a0e0" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.&#10; &#10;</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7e226010"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e07be48" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="36:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Strobe.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.&#10;</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7e077cd0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Strobe.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7e226010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.8 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7e07f5d8" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7e226010"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7e07f010" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7e07f1b8" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7e07f340" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7e07fee8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7e226010"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7e07f920" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7e07fac8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7e07fc50" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10;</short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7dffa528" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short> Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f082700"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f082950"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x7dffb4d0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b19f8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f0b1c48"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7dffb368" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b19f8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f0b1c48"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7dffbce0" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short> Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f090558"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f0907a8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x7dffd430" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short> Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c2b78"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f0c2dc8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7dffa1d0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f090558"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f0907a8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7dffa068" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f090558"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f0907a8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7dffa9e0" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f082700"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f082950"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7dffa878" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f082700"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f082950"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x7dffda98" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b0ae0"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f0b0d30"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x7dffd768" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b19f8"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f0b1c48"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x7dffb010" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c2b78"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f0c2dc8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7dffddf0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c2b78"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f0c2dc8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x7dffb988" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b0ae0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f0b0d30"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7dffb820" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b0ae0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f0b0d30"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.&#10;</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7dff7420" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dff7420"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7dff48f8" loc="79:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.&#10;</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7dff4710" loc="79:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7dff4050" loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10;</short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7dff7890" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.&#10;</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dff7420"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="captured" ref="0x7dff5300" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.&#10;</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dff7420"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7dff5120" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dff7420"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7dff5638" loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7dff43d8" loc="73:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10;</short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7dff7db8" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.&#10;</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dff7420"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7dff7bd0" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dff7420"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7dff5968" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7dff5c98" loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="35:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.1.2.13 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7dec14b0" loc="43:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0x7dec1d18" loc="55:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.&#10;</short>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="captured" ref="0x7dec19e8" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.&#10;&#10;</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7dec17f8" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7dec1188" loc="42:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.&#10;&#10;</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10;</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7de79198" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7de7ad00" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7de7ae88" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7de77b90" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
        <documentation loc="84:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.&#10;&#10;</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7de77610" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7de77798" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7de77920" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7de772b0" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7e226010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7de79dd0" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7de77010" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7de7a998" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7e226010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7de7a568" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7de7a6f0" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7de79a68" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.&#10;&#10;</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7de794f8" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7de79680" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7de79808" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="43:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus. </short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.1.2.1 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7de58f18" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.&#10;&#10;</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param txBuf A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param rxBuf A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7de587f8" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7de589a0" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7de58b30" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7de57a90" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.&#10;&#10;</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param txBuf The buffer used for transmission&#10; @param rxBuf The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7de57290" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7de57438" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7de575c8" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7de57760" loc="72:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7de5a2c0" loc="34:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10;</short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7de5a088" loc="34:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7de01010" loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7ddfd920" loc="109:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7ddff0f0" loc="100:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7ddfddd8" loc="111:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7ddfdc70" loc="111:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7de03be0" loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7ddffd70" loc="105:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7ddffc08" loc="105:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7de005e0" loc="96:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7de00478" loc="96:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7de016c0" loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10;</short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7ddfa7e8" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7ddfa680" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7de00908" loc="97:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7ddfc5e8" loc="114:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7ddfc480" loc="114:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7ddfcc30" loc="120:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7ddfd5f8" loc="108:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7ddfd490" loc="108:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7ddfa338" loc="124:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7ddff5a0" loc="102:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7ddff438" loc="102:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7de01bc8" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10;</short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7de019f8" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7de00db0" loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7de00c48" loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7ddfd140" loc="106:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7ddfc140" loc="112:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7ddfc908" loc="115:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7ddfa010" loc="122:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7ddff8c0" loc="103:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7de01350" loc="72:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7de00138" loc="92:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete. &#10;</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7de01f08" loc="92:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioTimeStamping" loc="33:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
        <short>&#10; Interface for receiving time stamp information from the radio.&#10;</short>
        <long>&#10; Interface for receiving time stamp information from the radio.&#10; This information is also embedded in packet metadata.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   October 10 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="transmittedSFD" ref="0x7dd223c8" loc="39:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
          <short> &#10; Provides the time at which start of frame delimiter has been&#10; transmitted: units are in terms of a 32kHz clock.&#10;</short>
        </documentation>
        <interfacedef-ref qname="RadioTimeStamping"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7dd22030" loc="39:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
          <variable name="p_msg" ref="0x7dd221e0" loc="39:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedSFD" ref="0x7dd22a80" loc="50:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
          <short> &#10; Provides the time at which start of frame delimiter was received:&#10; units are in terms of a 32kHz clock. </short>
          <long> &#10; Provides the time at which start of frame delimiter was received:&#10; units are in terms of a 32kHz clock.  &#60;b>NOTE&#60;/b> that receiving&#10; a receivedSFD() event does NOT mean that a packet will be&#10; received; the transmission may stop, become corrupted, or be&#10; filtered by the physical or link layers.  The number of rxSFD&#10; events will always be great than or equal to the number of&#10; Receive message events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioTimeStamping"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7dd22710" loc="50:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.5 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7dd12c00" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.&#10;&#10;</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7dd12828" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7dd129d8" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7e1eb0c8"/>
                <typename><typedef-ref name="message_t" ref="0x7e1eba60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7dd124f0" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7dd12130" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.&#10;&#10;</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7dd16f08" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.1.2.13 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7dc60b38" loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7dc60b38"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7dc5f310" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7dc60b38"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7dc5f010" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7dc60b38"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
