<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="28:BlinkTimer.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7dcf41e0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7e091ef0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7e091ef0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7dd04300"/></to>
    </wire>
    <wire loc="29:BlinkTimer.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7dcc4190"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7dcc15e8"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7dcc15e8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7dcb2330"/></to>
    </wire>
    <wire loc="30:BlinkTimer.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7dcf2010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7dc73a40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7dc73a40"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7dc60630"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7e0806b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dc45818"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7dd04648"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7e330970"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7e330970"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7e170960"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7dd04b78"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e0718d8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e0718d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e0438d8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7dd04ee8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7e0806b0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7e052ad8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dc00340"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7e0523e0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7dd34160"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7e042010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dd40d58"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7e043c48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dc809e8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7e043c48"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7e031610"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7e031610"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7e023af0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7e031978"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7e052ad8"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7e0032f8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7dff1af8"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7dff1af8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7ded0330"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7e003c80"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7e031978"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7df80808"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ddd1998"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7dfb3858"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7de83bf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7de83bf8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d894c78"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7dfa19d8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7de636b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7de636b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8396c0"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7df90808"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7de50ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7de50ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d7e8ac8"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7dff0e78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7dec46b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7dec46b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d9940b0"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7df91508"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7de51840"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7de51840"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d7f0718"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7dfe2190"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7dec03a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7dec03a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d9487f8"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7dfc3348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7dea1f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7dea1f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8e60f8"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7dfb15e8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7de81890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7de81890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d889ac8"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7df937a8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7de61330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7de61330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d833538"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7dff3e18"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7ded26b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7ded26b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d9a4e18"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7dfe1e78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7deb3030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7deb3030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d9436c0"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7dfc1068"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7de94ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7de94ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8e1010"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7dfa3348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7de745d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7de745d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8849e8"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7df82508"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7de43890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7de43890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d7e39e8"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7df727a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ddb33b0"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7dfa26c8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7de64330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7de64330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d842228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7ded0330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d998c08"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7dfd2bd8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7deb1c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7deb1c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d936538"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7df73428"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ddc3cb8"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7dfd0010"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7dea2bc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7dea2bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8f3d08"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7dfb2268"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7de825d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7de825d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d892718"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7dfa0428"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7de62030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7de62030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8370b0"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7df83190"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7de445d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7de445d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d7e6570"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7dfe3808"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7dec3030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7dec3030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d993a88"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7dfe2b00"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7dec0cf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7dec0cf8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d946228"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7dfc3cb8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7dea0890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7dea0890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8e5ac8"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7dfb0010"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7de80250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7de80250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d887570"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7df92188"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7de61c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7de61c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d831010"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7dff27a8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7ded1030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7ded1030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d9a27f8"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7dfd3808"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7deb3988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7deb3988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d9410b0"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7dfc19d8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7de935d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7de935d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8e09e8"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7df82e78"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7de42250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7de42250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d7e1538"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7dfc0d98"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7de832a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7de832a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8952b0"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7dfa1068"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7de64c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7de64c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d841c08"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7df91e78"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7de50250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7de50250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d7e90f8"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7df71188"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ddb06c0"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7dff0508"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7ded0c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7ded0c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d9966c0"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7dfd15e8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7deb06b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7deb06b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d934010"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7df92af8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7de53eb0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7de53eb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d7f4d08"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7dfd0980"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7dea15d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7dea15d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8e8718"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7dfb2bd8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7de82f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7de82f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8900f8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7dfa0d98"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7de62988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7de62988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d836a88"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7df83b00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7de44f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7de44f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d7e4010"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7dff34a8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7ded4d18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7ded4d18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d9a5458"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7dfe1508"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7deb46b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7deb46b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d945c08"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7dfc26c8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7de94250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7de94250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8e3570"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7dfb0980"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7de80ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7de80ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d885010"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7df73d98"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ddc0050"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7dfa3cb8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7de709c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7de709c0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8447f8"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7dfc0428"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7de93f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7de93f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8d7538"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7dff1188"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7ded1988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7ded1988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d9a0228"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7dfd2268"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7deb1330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7deb1330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d940a88"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7e3109b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7e162120"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7e151540"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7e302c20"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7dc809e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dcb2010"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7dcb1010"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7dc82cf0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7dc82cf0"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7dff27a8"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7dcb1980"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7dc816e8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7dc816e8"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7dff3e18"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7dcb0348"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7dc80088"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7dc80088"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7dff34a8"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7dc60630"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7dc45eb0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7dc45eb0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7da60da8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7dc45818"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dc30478"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7dc336f0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7da064c8"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7dc30478"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7db732f0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7da14dc0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7da93b60"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7da66b60"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7dc24070"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7dc24070"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7daf3010"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7da06de8"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7dc05e38"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7dc05e38"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7daa6848"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7db736d8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7dbe4258"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7db26458"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7dbe4258"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7db24320"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7dbd4010"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7db03960"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7dbe4258"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7daa3960"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7db56c80"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7daa4908"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7db16990"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x7da632d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7e3109b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7da11c90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7e3109b8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="45:/opt/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/system/MainC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.1.2.11 2006/09/22 19:23:59 idgay Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.1.2.11 2006/09/22 19:23:59 idgay Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.1.2.11 2006/09/22 19:23:59 idgay Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformC.nc">
      <documentation loc="15:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10;</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformP.nc">
      <documentation loc="18:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10;</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10;</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10;</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.1.2.6 2006/09/22 19:12:14 idgay Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BlinkTimerM" loc="20:BlinkTimerM.nc">
      <documentation loc="20:BlinkTimerM.nc">
        <short>***************************************************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10;</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10;</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.1.2.11 2006/09/22 19:23:59 idgay Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BlinkTimer.TimerMilliC" loc="36(BlinkTimer.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(BlinkTimer.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="22:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer. </short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmCounterMilliP.MilliInit" loc="35(AlarmCounterMilliP.MilliInit):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="35(AlarmCounterMilliP.MilliInit):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmCounterMilliP.MilliAlarm" loc="42(AlarmCounterMilliP.MilliAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="42(AlarmCounterMilliP.MilliAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10;</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmCounterMilliP.MilliCounter" loc="33(AlarmCounterMilliP.MilliCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="33(AlarmCounterMilliP.MilliCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmCounterMilliP.Transform32" loc="53(AlarmCounterMilliP.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
      <documentation loc="53(AlarmCounterMilliP.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
        <short>&#10; TransformAlarmCounterC decreases precision and/or widens an Alarm/Counter&#10; pair.</short>
        <long>&#10; TransformAlarmCounterC decreases precision and/or widens an Alarm/Counter&#10; pair. This component has a reduced interrupt overhead compared to using&#10; TransformAlarmC and TransformCounterC separately. However, it is not as &#10; useful for hardware timers with multiple compare registers.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   interfaces.&#10; @param to_size_type The type for the width of the transformed interfaces.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   interfaces.&#10; @param from_size_type The type for the width of the original interfaces.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmCounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10;</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10;</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7df60588" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7df60718" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7df608a8" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7df33988" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7df33b28" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7df33cc8" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7df33e60" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7de31868" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7de31a08" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7de31ba8" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7de31d40" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="36:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7db716a0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7db716a0"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7db71830" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10;</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7db54b48" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7db54b48"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7db54e08" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7db54e08"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x7db52010" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7db141f0" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7db141f0"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7db144b0" loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7db144b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmCounterC" loc="53:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc" abstract="">
      <documentation loc="53:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
        <short>&#10; TransformAlarmCounterC decreases precision and/or widens an Alarm/Counter&#10; pair.</short>
        <long>&#10; TransformAlarmCounterC decreases precision and/or widens an Alarm/Counter&#10; pair. This component has a reduced interrupt overhead compared to using&#10; TransformAlarmC and TransformCounterC separately. However, it is not as &#10; useful for hardware timers with multiple compare registers.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   interfaces.&#10; @param to_size_type The type for the width of the transformed interfaces.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   interfaces.&#10; @param from_size_type The type for the width of the original interfaces.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7daf2520" loc="54:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7daf2520"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7daf27e0" loc="55:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7daf27e0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7daf29a8" loc="56:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7daf29a8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7daf2c68" loc="57:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7daf2c68"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7daf2e08" loc="58:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7daf1100" loc="59:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7daf1100"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10;</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7da924f0" loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7da924f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10;</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7da62d20" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7da62d20"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7da62ea8" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7da04c68" loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7da04c68"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7e0806b0" loc="47:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7e0806b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e080888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7e091ef0" loc="46:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7e091ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7e0900e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7e052ad8" loc="43:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7e052ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e052cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e0718d8" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e0718d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e071ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7e0523e0" loc="41:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7e0523e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7e0525b8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7e052698"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7e052778"/>
        <function-ref name="actualMicro" scoped="" ref="0x7e052858"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7e052938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7e043c48" loc="36:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7e043c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e043e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e0438d8" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e0438d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e043ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7e042010" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7e042010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e0421e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7e031978" loc="18:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7e031978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e031b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7e031610" loc="17:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7e031610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e0317e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7e003c80" loc="22:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7e003c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e003e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7e0032f8" loc="21:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7e0032f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e0034d0"/>
        <function-ref name="isInput" scoped="" ref="0x7e0035b0"/>
        <function-ref name="toggle" scoped="" ref="0x7e003690"/>
        <function-ref name="isOutput" scoped="" ref="0x7e003770"/>
        <function-ref name="get" scoped="" ref="0x7e003850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e003930"/>
        <function-ref name="set" scoped="" ref="0x7e003a10"/>
        <function-ref name="clr" scoped="" ref="0x7e003af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7e023af0" loc="20:/opt/tinyos-2.x/tos/platforms/zigbex/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7e023af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e023cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7df80808" loc="91:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7df80808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df80be0"/>
        <function-ref name="isInput" scoped="" ref="0x7df80cc0"/>
        <function-ref name="toggle" scoped="" ref="0x7df80da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7df80e80"/>
        <function-ref name="get" scoped="" ref="0x7df73010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df730f0"/>
        <function-ref name="set" scoped="" ref="0x7df731d0"/>
        <function-ref name="clr" scoped="" ref="0x7df732b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7dfb3858" loc="65:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7dfb3858"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dfb3a30"/>
        <function-ref name="isInput" scoped="" ref="0x7dfb3b10"/>
        <function-ref name="toggle" scoped="" ref="0x7dfb3bf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dfb3cd0"/>
        <function-ref name="get" scoped="" ref="0x7dfb3db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dfb3e90"/>
        <function-ref name="set" scoped="" ref="0x7dfb2010"/>
        <function-ref name="clr" scoped="" ref="0x7dfb20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7dfa19d8" loc="76:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7dfa19d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dfa1bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7dfa1c90"/>
        <function-ref name="toggle" scoped="" ref="0x7dfa1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7dfa1e50"/>
        <function-ref name="get" scoped="" ref="0x7dfa0010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dfa00f0"/>
        <function-ref name="set" scoped="" ref="0x7dfa01d0"/>
        <function-ref name="clr" scoped="" ref="0x7dfa02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7df90808" loc="85:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7df90808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df909e0"/>
        <function-ref name="isInput" scoped="" ref="0x7df90ac0"/>
        <function-ref name="toggle" scoped="" ref="0x7df90ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7df90c80"/>
        <function-ref name="get" scoped="" ref="0x7df90d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df90e40"/>
        <function-ref name="set" scoped="" ref="0x7df90f20"/>
        <function-ref name="clr" scoped="" ref="0x7df83018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7dff0e78" loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7dff0e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dfe3070"/>
        <function-ref name="isInput" scoped="" ref="0x7dfe3150"/>
        <function-ref name="toggle" scoped="" ref="0x7dfe3230"/>
        <function-ref name="isOutput" scoped="" ref="0x7dfe3310"/>
        <function-ref name="get" scoped="" ref="0x7dfe33f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dfe34d0"/>
        <function-ref name="set" scoped="" ref="0x7dfe35b0"/>
        <function-ref name="clr" scoped="" ref="0x7dfe3690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7df91508" loc="83:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7df91508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df916e0"/>
        <function-ref name="isInput" scoped="" ref="0x7df917c0"/>
        <function-ref name="toggle" scoped="" ref="0x7df918a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7df91980"/>
        <function-ref name="get" scoped="" ref="0x7df91a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df91b40"/>
        <function-ref name="set" scoped="" ref="0x7df91c20"/>
        <function-ref name="clr" scoped="" ref="0x7df91d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7dfe2190" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7dfe2190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dfe2368"/>
        <function-ref name="isInput" scoped="" ref="0x7dfe2448"/>
        <function-ref name="toggle" scoped="" ref="0x7dfe2528"/>
        <function-ref name="isOutput" scoped="" ref="0x7dfe2608"/>
        <function-ref name="get" scoped="" ref="0x7dfe26e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dfe27c8"/>
        <function-ref name="set" scoped="" ref="0x7dfe28a8"/>
        <function-ref name="clr" scoped="" ref="0x7dfe2988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7dfc3348" loc="57:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7dfc3348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dfc3520"/>
        <function-ref name="isInput" scoped="" ref="0x7dfc3600"/>
        <function-ref name="toggle" scoped="" ref="0x7dfc36e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dfc37c0"/>
        <function-ref name="get" scoped="" ref="0x7dfc38a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dfc3980"/>
        <function-ref name="set" scoped="" ref="0x7dfc3a60"/>
        <function-ref name="clr" scoped="" ref="0x7dfc3b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7dfb15e8" loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7dfb15e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dfb17c0"/>
        <function-ref name="isInput" scoped="" ref="0x7dfb18a0"/>
        <function-ref name="toggle" scoped="" ref="0x7dfb1980"/>
        <function-ref name="isOutput" scoped="" ref="0x7dfb1a60"/>
        <function-ref name="get" scoped="" ref="0x7dfb1b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dfb1c20"/>
        <function-ref name="set" scoped="" ref="0x7dfb1d00"/>
        <function-ref name="clr" scoped="" ref="0x7dfb1de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7df937a8" loc="79:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7df937a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df93980"/>
        <function-ref name="isInput" scoped="" ref="0x7df93a60"/>
        <function-ref name="toggle" scoped="" ref="0x7df93b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7df93c20"/>
        <function-ref name="get" scoped="" ref="0x7df93d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df93de0"/>
        <function-ref name="set" scoped="" ref="0x7df93ec0"/>
        <function-ref name="clr" scoped="" ref="0x7df92010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7dff3e18" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7dff3e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dff2010"/>
        <function-ref name="isInput" scoped="" ref="0x7dff20f0"/>
        <function-ref name="toggle" scoped="" ref="0x7dff21d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dff22b0"/>
        <function-ref name="get" scoped="" ref="0x7dff2390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dff2470"/>
        <function-ref name="set" scoped="" ref="0x7dff2550"/>
        <function-ref name="clr" scoped="" ref="0x7dff2630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7dfe1e78" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7dfe1e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dfd3070"/>
        <function-ref name="isInput" scoped="" ref="0x7dfd3150"/>
        <function-ref name="toggle" scoped="" ref="0x7dfd3230"/>
        <function-ref name="isOutput" scoped="" ref="0x7dfd3310"/>
        <function-ref name="get" scoped="" ref="0x7dfd33f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dfd34d0"/>
        <function-ref name="set" scoped="" ref="0x7dfd35b0"/>
        <function-ref name="clr" scoped="" ref="0x7dfd3690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7dfc1068" loc="60:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7dfc1068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dfc1240"/>
        <function-ref name="isInput" scoped="" ref="0x7dfc1320"/>
        <function-ref name="toggle" scoped="" ref="0x7dfc1400"/>
        <function-ref name="isOutput" scoped="" ref="0x7dfc14e0"/>
        <function-ref name="get" scoped="" ref="0x7dfc15c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dfc16a0"/>
        <function-ref name="set" scoped="" ref="0x7dfc1780"/>
        <function-ref name="clr" scoped="" ref="0x7dfc1860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7dfa3348" loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7dfa3348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dfa3520"/>
        <function-ref name="isInput" scoped="" ref="0x7dfa3600"/>
        <function-ref name="toggle" scoped="" ref="0x7dfa36e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dfa37c0"/>
        <function-ref name="get" scoped="" ref="0x7dfa38a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dfa3980"/>
        <function-ref name="set" scoped="" ref="0x7dfa3a60"/>
        <function-ref name="clr" scoped="" ref="0x7dfa3b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7df82508" loc="88:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7df82508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df826e0"/>
        <function-ref name="isInput" scoped="" ref="0x7df827c0"/>
        <function-ref name="toggle" scoped="" ref="0x7df828a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7df82980"/>
        <function-ref name="get" scoped="" ref="0x7df82a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df82b40"/>
        <function-ref name="set" scoped="" ref="0x7df82c20"/>
        <function-ref name="clr" scoped="" ref="0x7df82d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7df727a8" loc="94:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7df727a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df72980"/>
        <function-ref name="isInput" scoped="" ref="0x7df72a60"/>
        <function-ref name="toggle" scoped="" ref="0x7df72b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7df72c20"/>
        <function-ref name="get" scoped="" ref="0x7df72d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df72de0"/>
        <function-ref name="set" scoped="" ref="0x7df72ec0"/>
        <function-ref name="clr" scoped="" ref="0x7df71010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7dfa26c8" loc="74:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7dfa26c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dfa28a0"/>
        <function-ref name="isInput" scoped="" ref="0x7dfa2980"/>
        <function-ref name="toggle" scoped="" ref="0x7dfa2a60"/>
        <function-ref name="isOutput" scoped="" ref="0x7dfa2b40"/>
        <function-ref name="get" scoped="" ref="0x7dfa2c20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dfa2d00"/>
        <function-ref name="set" scoped="" ref="0x7dfa2de0"/>
        <function-ref name="clr" scoped="" ref="0x7dfa2ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7dff1af8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7dff1af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dff1cd0"/>
        <function-ref name="isInput" scoped="" ref="0x7dff1db0"/>
        <function-ref name="toggle" scoped="" ref="0x7dff1e90"/>
        <function-ref name="isOutput" scoped="" ref="0x7dff0010"/>
        <function-ref name="get" scoped="" ref="0x7dff00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dff01d0"/>
        <function-ref name="set" scoped="" ref="0x7dff02b0"/>
        <function-ref name="clr" scoped="" ref="0x7dff0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7dfd2bd8" loc="52:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7dfd2bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dfd2db0"/>
        <function-ref name="isInput" scoped="" ref="0x7dfd2e90"/>
        <function-ref name="toggle" scoped="" ref="0x7dfd1010"/>
        <function-ref name="isOutput" scoped="" ref="0x7dfd10f0"/>
        <function-ref name="get" scoped="" ref="0x7dfd11d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dfd12b0"/>
        <function-ref name="set" scoped="" ref="0x7dfd1390"/>
        <function-ref name="clr" scoped="" ref="0x7dfd1470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7df73428" loc="92:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7df73428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df73600"/>
        <function-ref name="isInput" scoped="" ref="0x7df736e0"/>
        <function-ref name="toggle" scoped="" ref="0x7df737c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7df738a0"/>
        <function-ref name="get" scoped="" ref="0x7df73980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df73a60"/>
        <function-ref name="set" scoped="" ref="0x7df73b40"/>
        <function-ref name="clr" scoped="" ref="0x7df73c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7dfd0010" loc="55:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7dfd0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dfd01e8"/>
        <function-ref name="isInput" scoped="" ref="0x7dfd02c8"/>
        <function-ref name="toggle" scoped="" ref="0x7dfd03a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7dfd0488"/>
        <function-ref name="get" scoped="" ref="0x7dfd0568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dfd0648"/>
        <function-ref name="set" scoped="" ref="0x7dfd0728"/>
        <function-ref name="clr" scoped="" ref="0x7dfd0808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7dfb2268" loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7dfb2268"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dfb2440"/>
        <function-ref name="isInput" scoped="" ref="0x7dfb2520"/>
        <function-ref name="toggle" scoped="" ref="0x7dfb2600"/>
        <function-ref name="isOutput" scoped="" ref="0x7dfb26e0"/>
        <function-ref name="get" scoped="" ref="0x7dfb27c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dfb28a0"/>
        <function-ref name="set" scoped="" ref="0x7dfb2980"/>
        <function-ref name="clr" scoped="" ref="0x7dfb2a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7dfa0428" loc="77:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7dfa0428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dfa0600"/>
        <function-ref name="isInput" scoped="" ref="0x7dfa06e0"/>
        <function-ref name="toggle" scoped="" ref="0x7dfa07c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dfa08a0"/>
        <function-ref name="get" scoped="" ref="0x7dfa0980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dfa0a60"/>
        <function-ref name="set" scoped="" ref="0x7dfa0b40"/>
        <function-ref name="clr" scoped="" ref="0x7dfa0c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7df83190" loc="86:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7df83190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df83368"/>
        <function-ref name="isInput" scoped="" ref="0x7df83448"/>
        <function-ref name="toggle" scoped="" ref="0x7df83528"/>
        <function-ref name="isOutput" scoped="" ref="0x7df83608"/>
        <function-ref name="get" scoped="" ref="0x7df836e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df837c8"/>
        <function-ref name="set" scoped="" ref="0x7df838a8"/>
        <function-ref name="clr" scoped="" ref="0x7df83988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7dfe3808" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7dfe3808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dfe39e0"/>
        <function-ref name="isInput" scoped="" ref="0x7dfe3ac0"/>
        <function-ref name="toggle" scoped="" ref="0x7dfe3ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dfe3c80"/>
        <function-ref name="get" scoped="" ref="0x7dfe3d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dfe3e40"/>
        <function-ref name="set" scoped="" ref="0x7dfe3f20"/>
        <function-ref name="clr" scoped="" ref="0x7dfe2018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7dfe2b00" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7dfe2b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dfe2cd8"/>
        <function-ref name="isInput" scoped="" ref="0x7dfe2db8"/>
        <function-ref name="toggle" scoped="" ref="0x7dfe2e98"/>
        <function-ref name="isOutput" scoped="" ref="0x7dfe1010"/>
        <function-ref name="get" scoped="" ref="0x7dfe10f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dfe11d0"/>
        <function-ref name="set" scoped="" ref="0x7dfe12b0"/>
        <function-ref name="clr" scoped="" ref="0x7dfe1390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7dfc3cb8" loc="58:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7dfc3cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dfc3e90"/>
        <function-ref name="isInput" scoped="" ref="0x7dfc2010"/>
        <function-ref name="toggle" scoped="" ref="0x7dfc20f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dfc21d0"/>
        <function-ref name="get" scoped="" ref="0x7dfc22b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dfc2390"/>
        <function-ref name="set" scoped="" ref="0x7dfc2470"/>
        <function-ref name="clr" scoped="" ref="0x7dfc2550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7dfb0010" loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7dfb0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dfb01e8"/>
        <function-ref name="isInput" scoped="" ref="0x7dfb02c8"/>
        <function-ref name="toggle" scoped="" ref="0x7dfb03a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7dfb0488"/>
        <function-ref name="get" scoped="" ref="0x7dfb0568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dfb0648"/>
        <function-ref name="set" scoped="" ref="0x7dfb0728"/>
        <function-ref name="clr" scoped="" ref="0x7dfb0808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7df92188" loc="80:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7df92188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df92360"/>
        <function-ref name="isInput" scoped="" ref="0x7df92440"/>
        <function-ref name="toggle" scoped="" ref="0x7df92520"/>
        <function-ref name="isOutput" scoped="" ref="0x7df92600"/>
        <function-ref name="get" scoped="" ref="0x7df926e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df927c0"/>
        <function-ref name="set" scoped="" ref="0x7df928a0"/>
        <function-ref name="clr" scoped="" ref="0x7df92980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7dff27a8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7dff27a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dff2980"/>
        <function-ref name="isInput" scoped="" ref="0x7dff2a60"/>
        <function-ref name="toggle" scoped="" ref="0x7dff2b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7dff2c20"/>
        <function-ref name="get" scoped="" ref="0x7dff2d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dff2de0"/>
        <function-ref name="set" scoped="" ref="0x7dff2ec0"/>
        <function-ref name="clr" scoped="" ref="0x7dff1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7dfd3808" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7dfd3808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dfd3a60"/>
        <function-ref name="isInput" scoped="" ref="0x7dfd3b40"/>
        <function-ref name="toggle" scoped="" ref="0x7dfd3c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7dfd3d00"/>
        <function-ref name="get" scoped="" ref="0x7dfd3de0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dfd3ec0"/>
        <function-ref name="set" scoped="" ref="0x7dfd2010"/>
        <function-ref name="clr" scoped="" ref="0x7dfd20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7dfc19d8" loc="61:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7dfc19d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dfc1bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7dfc1c90"/>
        <function-ref name="toggle" scoped="" ref="0x7dfc1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7dfc1e50"/>
        <function-ref name="get" scoped="" ref="0x7dfc0010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dfc00f0"/>
        <function-ref name="set" scoped="" ref="0x7dfc01d0"/>
        <function-ref name="clr" scoped="" ref="0x7dfc02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7df82e78" loc="89:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7df82e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df80070"/>
        <function-ref name="isInput" scoped="" ref="0x7df80150"/>
        <function-ref name="toggle" scoped="" ref="0x7df80230"/>
        <function-ref name="isOutput" scoped="" ref="0x7df80310"/>
        <function-ref name="get" scoped="" ref="0x7df803f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df804d0"/>
        <function-ref name="set" scoped="" ref="0x7df805b0"/>
        <function-ref name="clr" scoped="" ref="0x7df80690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7dfc0d98" loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7dfc0d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dfb30c0"/>
        <function-ref name="isInput" scoped="" ref="0x7dfb31a0"/>
        <function-ref name="toggle" scoped="" ref="0x7dfb3280"/>
        <function-ref name="isOutput" scoped="" ref="0x7dfb3360"/>
        <function-ref name="get" scoped="" ref="0x7dfb3440"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dfb3520"/>
        <function-ref name="set" scoped="" ref="0x7dfb3600"/>
        <function-ref name="clr" scoped="" ref="0x7dfb36e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7dfa1068" loc="75:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7dfa1068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dfa1240"/>
        <function-ref name="isInput" scoped="" ref="0x7dfa1320"/>
        <function-ref name="toggle" scoped="" ref="0x7dfa1400"/>
        <function-ref name="isOutput" scoped="" ref="0x7dfa14e0"/>
        <function-ref name="get" scoped="" ref="0x7dfa15c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dfa16a0"/>
        <function-ref name="set" scoped="" ref="0x7dfa1780"/>
        <function-ref name="clr" scoped="" ref="0x7dfa1860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7df91e78" loc="84:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7df91e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df90070"/>
        <function-ref name="isInput" scoped="" ref="0x7df90150"/>
        <function-ref name="toggle" scoped="" ref="0x7df90230"/>
        <function-ref name="isOutput" scoped="" ref="0x7df90310"/>
        <function-ref name="get" scoped="" ref="0x7df903f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df904d0"/>
        <function-ref name="set" scoped="" ref="0x7df905b0"/>
        <function-ref name="clr" scoped="" ref="0x7df90690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7df71188" loc="95:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7df71188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df71360"/>
        <function-ref name="isInput" scoped="" ref="0x7df71440"/>
        <function-ref name="toggle" scoped="" ref="0x7df71520"/>
        <function-ref name="isOutput" scoped="" ref="0x7df71600"/>
        <function-ref name="get" scoped="" ref="0x7df716e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df717c0"/>
        <function-ref name="set" scoped="" ref="0x7df718a0"/>
        <function-ref name="clr" scoped="" ref="0x7df71980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7dff0508" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7dff0508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dff06e0"/>
        <function-ref name="isInput" scoped="" ref="0x7dff07c0"/>
        <function-ref name="toggle" scoped="" ref="0x7dff08a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dff0980"/>
        <function-ref name="get" scoped="" ref="0x7dff0a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dff0b40"/>
        <function-ref name="set" scoped="" ref="0x7dff0c20"/>
        <function-ref name="clr" scoped="" ref="0x7dff0d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7dfd15e8" loc="53:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7dfd15e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dfd17c0"/>
        <function-ref name="isInput" scoped="" ref="0x7dfd18a0"/>
        <function-ref name="toggle" scoped="" ref="0x7dfd1980"/>
        <function-ref name="isOutput" scoped="" ref="0x7dfd1a60"/>
        <function-ref name="get" scoped="" ref="0x7dfd1b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dfd1c20"/>
        <function-ref name="set" scoped="" ref="0x7dfd1d00"/>
        <function-ref name="clr" scoped="" ref="0x7dfd1de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7df92af8" loc="82:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7df92af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df92cd0"/>
        <function-ref name="isInput" scoped="" ref="0x7df92db0"/>
        <function-ref name="toggle" scoped="" ref="0x7df92e90"/>
        <function-ref name="isOutput" scoped="" ref="0x7df91010"/>
        <function-ref name="get" scoped="" ref="0x7df910f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df911d0"/>
        <function-ref name="set" scoped="" ref="0x7df912b0"/>
        <function-ref name="clr" scoped="" ref="0x7df91390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7dfd0980" loc="56:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7dfd0980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dfd0b58"/>
        <function-ref name="isInput" scoped="" ref="0x7dfd0c38"/>
        <function-ref name="toggle" scoped="" ref="0x7dfd0d18"/>
        <function-ref name="isOutput" scoped="" ref="0x7dfd0df8"/>
        <function-ref name="get" scoped="" ref="0x7dfd0ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dfc3010"/>
        <function-ref name="set" scoped="" ref="0x7dfc30f0"/>
        <function-ref name="clr" scoped="" ref="0x7dfc31d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7dfb2bd8" loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7dfb2bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dfb2db0"/>
        <function-ref name="isInput" scoped="" ref="0x7dfb2e90"/>
        <function-ref name="toggle" scoped="" ref="0x7dfb1010"/>
        <function-ref name="isOutput" scoped="" ref="0x7dfb10f0"/>
        <function-ref name="get" scoped="" ref="0x7dfb11d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dfb12b0"/>
        <function-ref name="set" scoped="" ref="0x7dfb1390"/>
        <function-ref name="clr" scoped="" ref="0x7dfb1470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7dfa0d98" loc="78:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7dfa0d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df93010"/>
        <function-ref name="isInput" scoped="" ref="0x7df930f0"/>
        <function-ref name="toggle" scoped="" ref="0x7df931d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7df932b0"/>
        <function-ref name="get" scoped="" ref="0x7df93390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df93470"/>
        <function-ref name="set" scoped="" ref="0x7df93550"/>
        <function-ref name="clr" scoped="" ref="0x7df93630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7df83b00" loc="87:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7df83b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df83cd8"/>
        <function-ref name="isInput" scoped="" ref="0x7df83db8"/>
        <function-ref name="toggle" scoped="" ref="0x7df83e98"/>
        <function-ref name="isOutput" scoped="" ref="0x7df82010"/>
        <function-ref name="get" scoped="" ref="0x7df820f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df821d0"/>
        <function-ref name="set" scoped="" ref="0x7df822b0"/>
        <function-ref name="clr" scoped="" ref="0x7df82390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7dff34a8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7dff34a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dff3680"/>
        <function-ref name="isInput" scoped="" ref="0x7dff3760"/>
        <function-ref name="toggle" scoped="" ref="0x7dff3840"/>
        <function-ref name="isOutput" scoped="" ref="0x7dff3920"/>
        <function-ref name="get" scoped="" ref="0x7dff3a00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dff3ae0"/>
        <function-ref name="set" scoped="" ref="0x7dff3bc0"/>
        <function-ref name="clr" scoped="" ref="0x7dff3ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7dfe1508" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7dfe1508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dfe16e0"/>
        <function-ref name="isInput" scoped="" ref="0x7dfe17c0"/>
        <function-ref name="toggle" scoped="" ref="0x7dfe18a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dfe1980"/>
        <function-ref name="get" scoped="" ref="0x7dfe1a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dfe1b40"/>
        <function-ref name="set" scoped="" ref="0x7dfe1c20"/>
        <function-ref name="clr" scoped="" ref="0x7dfe1d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7dfc26c8" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7dfc26c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dfc28a0"/>
        <function-ref name="isInput" scoped="" ref="0x7dfc2980"/>
        <function-ref name="toggle" scoped="" ref="0x7dfc2a60"/>
        <function-ref name="isOutput" scoped="" ref="0x7dfc2b40"/>
        <function-ref name="get" scoped="" ref="0x7dfc2c20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dfc2d00"/>
        <function-ref name="set" scoped="" ref="0x7dfc2de0"/>
        <function-ref name="clr" scoped="" ref="0x7dfc2ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7dfb0980" loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7dfb0980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dfb0b58"/>
        <function-ref name="isInput" scoped="" ref="0x7dfb0c38"/>
        <function-ref name="toggle" scoped="" ref="0x7dfb0d18"/>
        <function-ref name="isOutput" scoped="" ref="0x7dfb0df8"/>
        <function-ref name="get" scoped="" ref="0x7dfb0ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dfa3010"/>
        <function-ref name="set" scoped="" ref="0x7dfa30f0"/>
        <function-ref name="clr" scoped="" ref="0x7dfa31d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7df73d98" loc="93:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7df73d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df72010"/>
        <function-ref name="isInput" scoped="" ref="0x7df720f0"/>
        <function-ref name="toggle" scoped="" ref="0x7df721d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7df722b0"/>
        <function-ref name="get" scoped="" ref="0x7df72390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df72470"/>
        <function-ref name="set" scoped="" ref="0x7df72550"/>
        <function-ref name="clr" scoped="" ref="0x7df72630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7dfa3cb8" loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7dfa3cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dfa3e90"/>
        <function-ref name="isInput" scoped="" ref="0x7dfa2010"/>
        <function-ref name="toggle" scoped="" ref="0x7dfa20f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dfa21d0"/>
        <function-ref name="get" scoped="" ref="0x7dfa22b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dfa2390"/>
        <function-ref name="set" scoped="" ref="0x7dfa2470"/>
        <function-ref name="clr" scoped="" ref="0x7dfa2550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7dfc0428" loc="62:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7dfc0428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dfc0600"/>
        <function-ref name="isInput" scoped="" ref="0x7dfc06e0"/>
        <function-ref name="toggle" scoped="" ref="0x7dfc07c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dfc08a0"/>
        <function-ref name="get" scoped="" ref="0x7dfc0980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dfc0a60"/>
        <function-ref name="set" scoped="" ref="0x7dfc0b40"/>
        <function-ref name="clr" scoped="" ref="0x7dfc0c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7dff1188" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7dff1188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dff1360"/>
        <function-ref name="isInput" scoped="" ref="0x7dff1440"/>
        <function-ref name="toggle" scoped="" ref="0x7dff1520"/>
        <function-ref name="isOutput" scoped="" ref="0x7dff1600"/>
        <function-ref name="get" scoped="" ref="0x7dff16e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dff17c0"/>
        <function-ref name="set" scoped="" ref="0x7dff18a0"/>
        <function-ref name="clr" scoped="" ref="0x7dff1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7dfd2268" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7dfd2268"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dfd2440"/>
        <function-ref name="isInput" scoped="" ref="0x7dfd2520"/>
        <function-ref name="toggle" scoped="" ref="0x7dfd2600"/>
        <function-ref name="isOutput" scoped="" ref="0x7dfd26e0"/>
        <function-ref name="get" scoped="" ref="0x7dfd27c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dfd28a0"/>
        <function-ref name="set" scoped="" ref="0x7dfd2980"/>
        <function-ref name="clr" scoped="" ref="0x7dfd2a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7ded1030" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7ded1030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ded1208"/>
        <function-ref name="isInput" scoped="" ref="0x7ded12e8"/>
        <function-ref name="toggle" scoped="" ref="0x7ded13c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ded14a8"/>
        <function-ref name="get" scoped="" ref="0x7ded1588"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ded1668"/>
        <function-ref name="set" scoped="" ref="0x7ded1748"/>
        <function-ref name="clr" scoped="" ref="0x7ded1828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7ded0c88" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7ded0c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ded0e60"/>
        <function-ref name="isInput" scoped="" ref="0x7dec4010"/>
        <function-ref name="toggle" scoped="" ref="0x7dec40f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dec41d0"/>
        <function-ref name="get" scoped="" ref="0x7dec42b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dec4390"/>
        <function-ref name="set" scoped="" ref="0x7dec4470"/>
        <function-ref name="clr" scoped="" ref="0x7dec4550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7ded4d18" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7ded4d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ded4ef0"/>
        <function-ref name="isInput" scoped="" ref="0x7ded2010"/>
        <function-ref name="toggle" scoped="" ref="0x7ded20f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ded21d0"/>
        <function-ref name="get" scoped="" ref="0x7ded22b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ded2390"/>
        <function-ref name="set" scoped="" ref="0x7ded2470"/>
        <function-ref name="clr" scoped="" ref="0x7ded2550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7ded1988" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7ded1988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ded1b60"/>
        <function-ref name="isInput" scoped="" ref="0x7ded1c40"/>
        <function-ref name="toggle" scoped="" ref="0x7ded1d20"/>
        <function-ref name="isOutput" scoped="" ref="0x7ded1e00"/>
        <function-ref name="get" scoped="" ref="0x7ded1ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ded0010"/>
        <function-ref name="set" scoped="" ref="0x7ded00f0"/>
        <function-ref name="clr" scoped="" ref="0x7ded01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7dec46b0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7dec46b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dec4888"/>
        <function-ref name="isInput" scoped="" ref="0x7dec4968"/>
        <function-ref name="toggle" scoped="" ref="0x7dec4a48"/>
        <function-ref name="isOutput" scoped="" ref="0x7dec4b28"/>
        <function-ref name="get" scoped="" ref="0x7dec4c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dec4ce8"/>
        <function-ref name="set" scoped="" ref="0x7dec4dc8"/>
        <function-ref name="clr" scoped="" ref="0x7dec4ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7ded26b0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7ded26b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ded2888"/>
        <function-ref name="isInput" scoped="" ref="0x7ded2968"/>
        <function-ref name="toggle" scoped="" ref="0x7ded2a48"/>
        <function-ref name="isOutput" scoped="" ref="0x7ded2b28"/>
        <function-ref name="get" scoped="" ref="0x7ded2c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ded2ce8"/>
        <function-ref name="set" scoped="" ref="0x7ded2dc8"/>
        <function-ref name="clr" scoped="" ref="0x7ded2ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7ded0330" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7ded0330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ded0508"/>
        <function-ref name="isInput" scoped="" ref="0x7ded05e8"/>
        <function-ref name="toggle" scoped="" ref="0x7ded06c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ded07a8"/>
        <function-ref name="get" scoped="" ref="0x7ded0888"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ded0968"/>
        <function-ref name="set" scoped="" ref="0x7ded0a48"/>
        <function-ref name="clr" scoped="" ref="0x7ded0b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7dec3030" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7dec3030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dec3208"/>
        <function-ref name="isInput" scoped="" ref="0x7dec32e8"/>
        <function-ref name="toggle" scoped="" ref="0x7dec33c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7dec34a8"/>
        <function-ref name="get" scoped="" ref="0x7dec3588"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dec3668"/>
        <function-ref name="set" scoped="" ref="0x7dec3748"/>
        <function-ref name="clr" scoped="" ref="0x7dec3828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d9a5458" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d9a5458"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9a5630"/>
        <function-ref name="isInput" scoped="" ref="0x7d9a5710"/>
        <function-ref name="toggle" scoped="" ref="0x7d9a57f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9a58d0"/>
        <function-ref name="get" scoped="" ref="0x7d9a59b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9a5a90"/>
        <function-ref name="set" scoped="" ref="0x7d9a5b70"/>
        <function-ref name="clr" scoped="" ref="0x7d9a5c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d9a4e18" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d9a4e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9a3010"/>
        <function-ref name="isInput" scoped="" ref="0x7d9a30f0"/>
        <function-ref name="toggle" scoped="" ref="0x7d9a31d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9a32b0"/>
        <function-ref name="get" scoped="" ref="0x7d9a3390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9a3470"/>
        <function-ref name="set" scoped="" ref="0x7d9a3550"/>
        <function-ref name="clr" scoped="" ref="0x7d9a3630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d9a27f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d9a27f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9a29d0"/>
        <function-ref name="isInput" scoped="" ref="0x7d9a2ab0"/>
        <function-ref name="toggle" scoped="" ref="0x7d9a2b90"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9a2c70"/>
        <function-ref name="get" scoped="" ref="0x7d9a2d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9a2e30"/>
        <function-ref name="set" scoped="" ref="0x7d9a2f10"/>
        <function-ref name="clr" scoped="" ref="0x7d9a1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d9a0228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d9a0228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9a0400"/>
        <function-ref name="isInput" scoped="" ref="0x7d9a04e0"/>
        <function-ref name="toggle" scoped="" ref="0x7d9a05c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9a06a0"/>
        <function-ref name="get" scoped="" ref="0x7d9a0780"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9a0860"/>
        <function-ref name="set" scoped="" ref="0x7d9a0940"/>
        <function-ref name="clr" scoped="" ref="0x7d9a0a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d998c08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d998c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d998de0"/>
        <function-ref name="isInput" scoped="" ref="0x7d998ec0"/>
        <function-ref name="toggle" scoped="" ref="0x7d997010"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9970f0"/>
        <function-ref name="get" scoped="" ref="0x7d9971d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9972b0"/>
        <function-ref name="set" scoped="" ref="0x7d997390"/>
        <function-ref name="clr" scoped="" ref="0x7d997470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d9966c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d9966c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d996898"/>
        <function-ref name="isInput" scoped="" ref="0x7d996978"/>
        <function-ref name="toggle" scoped="" ref="0x7d996a58"/>
        <function-ref name="isOutput" scoped="" ref="0x7d996b38"/>
        <function-ref name="get" scoped="" ref="0x7d996c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d996cf8"/>
        <function-ref name="set" scoped="" ref="0x7d996dd8"/>
        <function-ref name="clr" scoped="" ref="0x7d996eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d9940b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d9940b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d994288"/>
        <function-ref name="isInput" scoped="" ref="0x7d994368"/>
        <function-ref name="toggle" scoped="" ref="0x7d994448"/>
        <function-ref name="isOutput" scoped="" ref="0x7d994528"/>
        <function-ref name="get" scoped="" ref="0x7d994608"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9946e8"/>
        <function-ref name="set" scoped="" ref="0x7d9947c8"/>
        <function-ref name="clr" scoped="" ref="0x7d9948a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d993a88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d993a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d993c60"/>
        <function-ref name="isInput" scoped="" ref="0x7d993d40"/>
        <function-ref name="toggle" scoped="" ref="0x7d993e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7d993f00"/>
        <function-ref name="get" scoped="" ref="0x7d992010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9920f0"/>
        <function-ref name="set" scoped="" ref="0x7d9921d0"/>
        <function-ref name="clr" scoped="" ref="0x7d9922b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7deb46b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7deb46b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7deb4888"/>
        <function-ref name="isInput" scoped="" ref="0x7deb4968"/>
        <function-ref name="toggle" scoped="" ref="0x7deb4a48"/>
        <function-ref name="isOutput" scoped="" ref="0x7deb4b28"/>
        <function-ref name="get" scoped="" ref="0x7deb4c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7deb4ce8"/>
        <function-ref name="set" scoped="" ref="0x7deb4dc8"/>
        <function-ref name="clr" scoped="" ref="0x7deb4ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7deb1330" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7deb1330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7deb1508"/>
        <function-ref name="isInput" scoped="" ref="0x7deb15e8"/>
        <function-ref name="toggle" scoped="" ref="0x7deb16c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7deb17a8"/>
        <function-ref name="get" scoped="" ref="0x7deb1888"/>
        <function-ref name="makeOutput" scoped="" ref="0x7deb1968"/>
        <function-ref name="set" scoped="" ref="0x7deb1a48"/>
        <function-ref name="clr" scoped="" ref="0x7deb1b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7dec03a0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7dec03a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dec0578"/>
        <function-ref name="isInput" scoped="" ref="0x7dec0658"/>
        <function-ref name="toggle" scoped="" ref="0x7dec0738"/>
        <function-ref name="isOutput" scoped="" ref="0x7dec0818"/>
        <function-ref name="get" scoped="" ref="0x7dec08f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dec09d8"/>
        <function-ref name="set" scoped="" ref="0x7dec0ab8"/>
        <function-ref name="clr" scoped="" ref="0x7dec0b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7deb3030" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7deb3030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7deb3208"/>
        <function-ref name="isInput" scoped="" ref="0x7deb32e8"/>
        <function-ref name="toggle" scoped="" ref="0x7deb33c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7deb34a8"/>
        <function-ref name="get" scoped="" ref="0x7deb3588"/>
        <function-ref name="makeOutput" scoped="" ref="0x7deb3668"/>
        <function-ref name="set" scoped="" ref="0x7deb3748"/>
        <function-ref name="clr" scoped="" ref="0x7deb3828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7deb1c88" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7deb1c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7deb1e60"/>
        <function-ref name="isInput" scoped="" ref="0x7deb0010"/>
        <function-ref name="toggle" scoped="" ref="0x7deb00f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7deb01d0"/>
        <function-ref name="get" scoped="" ref="0x7deb02b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7deb0390"/>
        <function-ref name="set" scoped="" ref="0x7deb0470"/>
        <function-ref name="clr" scoped="" ref="0x7deb0550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7dec0cf8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7dec0cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dec0ed0"/>
        <function-ref name="isInput" scoped="" ref="0x7deb4010"/>
        <function-ref name="toggle" scoped="" ref="0x7deb40f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7deb41d0"/>
        <function-ref name="get" scoped="" ref="0x7deb42b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7deb4390"/>
        <function-ref name="set" scoped="" ref="0x7deb4470"/>
        <function-ref name="clr" scoped="" ref="0x7deb4550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7deb3988" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7deb3988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7deb3b60"/>
        <function-ref name="isInput" scoped="" ref="0x7deb3c40"/>
        <function-ref name="toggle" scoped="" ref="0x7deb3d20"/>
        <function-ref name="isOutput" scoped="" ref="0x7deb3e00"/>
        <function-ref name="get" scoped="" ref="0x7deb3ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7deb1010"/>
        <function-ref name="set" scoped="" ref="0x7deb10f0"/>
        <function-ref name="clr" scoped="" ref="0x7deb11d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7deb06b0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7deb06b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7deb0888"/>
        <function-ref name="isInput" scoped="" ref="0x7deb0968"/>
        <function-ref name="toggle" scoped="" ref="0x7deb0a48"/>
        <function-ref name="isOutput" scoped="" ref="0x7deb0b28"/>
        <function-ref name="get" scoped="" ref="0x7deb0c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7deb0ce8"/>
        <function-ref name="set" scoped="" ref="0x7deb0dc8"/>
        <function-ref name="clr" scoped="" ref="0x7deb0ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d9487f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d9487f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9489d0"/>
        <function-ref name="isInput" scoped="" ref="0x7d948ab0"/>
        <function-ref name="toggle" scoped="" ref="0x7d948b90"/>
        <function-ref name="isOutput" scoped="" ref="0x7d948c70"/>
        <function-ref name="get" scoped="" ref="0x7d948d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d948e30"/>
        <function-ref name="set" scoped="" ref="0x7d948f10"/>
        <function-ref name="clr" scoped="" ref="0x7d947010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d946228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d946228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d946400"/>
        <function-ref name="isInput" scoped="" ref="0x7d9464e0"/>
        <function-ref name="toggle" scoped="" ref="0x7d9465c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9466a0"/>
        <function-ref name="get" scoped="" ref="0x7d946780"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d946860"/>
        <function-ref name="set" scoped="" ref="0x7d946940"/>
        <function-ref name="clr" scoped="" ref="0x7d946a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d945c08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d945c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d945de0"/>
        <function-ref name="isInput" scoped="" ref="0x7d945ec0"/>
        <function-ref name="toggle" scoped="" ref="0x7d944010"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9440f0"/>
        <function-ref name="get" scoped="" ref="0x7d9441d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9442b0"/>
        <function-ref name="set" scoped="" ref="0x7d944390"/>
        <function-ref name="clr" scoped="" ref="0x7d944470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d9436c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d9436c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d943898"/>
        <function-ref name="isInput" scoped="" ref="0x7d943978"/>
        <function-ref name="toggle" scoped="" ref="0x7d943a58"/>
        <function-ref name="isOutput" scoped="" ref="0x7d943b38"/>
        <function-ref name="get" scoped="" ref="0x7d943c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d943cf8"/>
        <function-ref name="set" scoped="" ref="0x7d943dd8"/>
        <function-ref name="clr" scoped="" ref="0x7d943eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d9410b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d9410b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d941288"/>
        <function-ref name="isInput" scoped="" ref="0x7d941368"/>
        <function-ref name="toggle" scoped="" ref="0x7d941448"/>
        <function-ref name="isOutput" scoped="" ref="0x7d941528"/>
        <function-ref name="get" scoped="" ref="0x7d941608"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9416e8"/>
        <function-ref name="set" scoped="" ref="0x7d9417c8"/>
        <function-ref name="clr" scoped="" ref="0x7d9418a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d940a88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d940a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d940c60"/>
        <function-ref name="isInput" scoped="" ref="0x7d940d40"/>
        <function-ref name="toggle" scoped="" ref="0x7d940e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7d940f00"/>
        <function-ref name="get" scoped="" ref="0x7d937010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9370f0"/>
        <function-ref name="set" scoped="" ref="0x7d9371d0"/>
        <function-ref name="clr" scoped="" ref="0x7d9372b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d936538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d936538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d936710"/>
        <function-ref name="isInput" scoped="" ref="0x7d9367f0"/>
        <function-ref name="toggle" scoped="" ref="0x7d9368d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9369b0"/>
        <function-ref name="get" scoped="" ref="0x7d936a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d936b70"/>
        <function-ref name="set" scoped="" ref="0x7d936c50"/>
        <function-ref name="clr" scoped="" ref="0x7d936d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d934010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d934010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9341e8"/>
        <function-ref name="isInput" scoped="" ref="0x7d9342c8"/>
        <function-ref name="toggle" scoped="" ref="0x7d9343a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7d934488"/>
        <function-ref name="get" scoped="" ref="0x7d934568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d934648"/>
        <function-ref name="set" scoped="" ref="0x7d934728"/>
        <function-ref name="clr" scoped="" ref="0x7d934808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7dea1f28" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7dea1f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dea0110"/>
        <function-ref name="isInput" scoped="" ref="0x7dea01f0"/>
        <function-ref name="toggle" scoped="" ref="0x7dea02d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dea03b0"/>
        <function-ref name="get" scoped="" ref="0x7dea0490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dea0570"/>
        <function-ref name="set" scoped="" ref="0x7dea0650"/>
        <function-ref name="clr" scoped="" ref="0x7dea0730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7de94ba8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7de94ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de94d80"/>
        <function-ref name="isInput" scoped="" ref="0x7de94e60"/>
        <function-ref name="toggle" scoped="" ref="0x7de93010"/>
        <function-ref name="isOutput" scoped="" ref="0x7de930f0"/>
        <function-ref name="get" scoped="" ref="0x7de931d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de932b0"/>
        <function-ref name="set" scoped="" ref="0x7de93390"/>
        <function-ref name="clr" scoped="" ref="0x7de93470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7dea2bc0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7dea2bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dea2d98"/>
        <function-ref name="isInput" scoped="" ref="0x7dea2e78"/>
        <function-ref name="toggle" scoped="" ref="0x7dea1010"/>
        <function-ref name="isOutput" scoped="" ref="0x7dea10f0"/>
        <function-ref name="get" scoped="" ref="0x7dea11d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dea12b0"/>
        <function-ref name="set" scoped="" ref="0x7dea1390"/>
        <function-ref name="clr" scoped="" ref="0x7dea1470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7dea0890" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7dea0890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dea0a68"/>
        <function-ref name="isInput" scoped="" ref="0x7dea0b48"/>
        <function-ref name="toggle" scoped="" ref="0x7dea0c28"/>
        <function-ref name="isOutput" scoped="" ref="0x7dea0d08"/>
        <function-ref name="get" scoped="" ref="0x7dea0de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dea0ec8"/>
        <function-ref name="set" scoped="" ref="0x7de94010"/>
        <function-ref name="clr" scoped="" ref="0x7de940f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7de935d0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7de935d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de937a8"/>
        <function-ref name="isInput" scoped="" ref="0x7de93888"/>
        <function-ref name="toggle" scoped="" ref="0x7de93968"/>
        <function-ref name="isOutput" scoped="" ref="0x7de93a48"/>
        <function-ref name="get" scoped="" ref="0x7de93b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de93c08"/>
        <function-ref name="set" scoped="" ref="0x7de93ce8"/>
        <function-ref name="clr" scoped="" ref="0x7de93dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7dea15d0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7dea15d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dea17a8"/>
        <function-ref name="isInput" scoped="" ref="0x7dea1888"/>
        <function-ref name="toggle" scoped="" ref="0x7dea1968"/>
        <function-ref name="isOutput" scoped="" ref="0x7dea1a48"/>
        <function-ref name="get" scoped="" ref="0x7dea1b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dea1c08"/>
        <function-ref name="set" scoped="" ref="0x7dea1ce8"/>
        <function-ref name="clr" scoped="" ref="0x7dea1dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7de94250" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7de94250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de94428"/>
        <function-ref name="isInput" scoped="" ref="0x7de94508"/>
        <function-ref name="toggle" scoped="" ref="0x7de945e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7de946c8"/>
        <function-ref name="get" scoped="" ref="0x7de947a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de94888"/>
        <function-ref name="set" scoped="" ref="0x7de94968"/>
        <function-ref name="clr" scoped="" ref="0x7de94a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7de93f28" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7de93f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de92110"/>
        <function-ref name="isInput" scoped="" ref="0x7de921f0"/>
        <function-ref name="toggle" scoped="" ref="0x7de922d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7de923b0"/>
        <function-ref name="get" scoped="" ref="0x7de92490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de92570"/>
        <function-ref name="set" scoped="" ref="0x7de92650"/>
        <function-ref name="clr" scoped="" ref="0x7de92730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8f3d08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8f3d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8f3ee0"/>
        <function-ref name="isInput" scoped="" ref="0x7d8f0010"/>
        <function-ref name="toggle" scoped="" ref="0x7d8f00f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8f01d0"/>
        <function-ref name="get" scoped="" ref="0x7d8f02b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8f0390"/>
        <function-ref name="set" scoped="" ref="0x7d8f0470"/>
        <function-ref name="clr" scoped="" ref="0x7d8f0550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8e8718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8e8718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8e88f0"/>
        <function-ref name="isInput" scoped="" ref="0x7d8e89d0"/>
        <function-ref name="toggle" scoped="" ref="0x7d8e8ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8e8b90"/>
        <function-ref name="get" scoped="" ref="0x7d8e8c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8e8d50"/>
        <function-ref name="set" scoped="" ref="0x7d8e8e30"/>
        <function-ref name="clr" scoped="" ref="0x7d8e8f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8e60f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8e60f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8e62d0"/>
        <function-ref name="isInput" scoped="" ref="0x7d8e63b0"/>
        <function-ref name="toggle" scoped="" ref="0x7d8e6490"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8e6570"/>
        <function-ref name="get" scoped="" ref="0x7d8e6650"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8e6730"/>
        <function-ref name="set" scoped="" ref="0x7d8e6810"/>
        <function-ref name="clr" scoped="" ref="0x7d8e68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8e5ac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8e5ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8e5ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7d8e5d80"/>
        <function-ref name="toggle" scoped="" ref="0x7d8e5e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8e4010"/>
        <function-ref name="get" scoped="" ref="0x7d8e40f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8e41d0"/>
        <function-ref name="set" scoped="" ref="0x7d8e42b0"/>
        <function-ref name="clr" scoped="" ref="0x7d8e4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8e3570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8e3570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8e3748"/>
        <function-ref name="isInput" scoped="" ref="0x7d8e3828"/>
        <function-ref name="toggle" scoped="" ref="0x7d8e3908"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8e39e8"/>
        <function-ref name="get" scoped="" ref="0x7d8e3ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8e3ba8"/>
        <function-ref name="set" scoped="" ref="0x7d8e3c88"/>
        <function-ref name="clr" scoped="" ref="0x7d8e3d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8e1010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8e1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8e11e8"/>
        <function-ref name="isInput" scoped="" ref="0x7d8e12c8"/>
        <function-ref name="toggle" scoped="" ref="0x7d8e13a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8e1488"/>
        <function-ref name="get" scoped="" ref="0x7d8e1568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8e1648"/>
        <function-ref name="set" scoped="" ref="0x7d8e1728"/>
        <function-ref name="clr" scoped="" ref="0x7d8e1808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8e09e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8e09e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8e0bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7d8e0ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7d8e0d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8e0e60"/>
        <function-ref name="get" scoped="" ref="0x7d8d8010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8d80f0"/>
        <function-ref name="set" scoped="" ref="0x7d8d81d0"/>
        <function-ref name="clr" scoped="" ref="0x7d8d82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8d7538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8d7538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8d7710"/>
        <function-ref name="isInput" scoped="" ref="0x7d8d77f0"/>
        <function-ref name="toggle" scoped="" ref="0x7d8d78d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8d79b0"/>
        <function-ref name="get" scoped="" ref="0x7d8d7a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8d7b70"/>
        <function-ref name="set" scoped="" ref="0x7d8d7c50"/>
        <function-ref name="clr" scoped="" ref="0x7d8d7d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7de825d0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7de825d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de827a8"/>
        <function-ref name="isInput" scoped="" ref="0x7de82888"/>
        <function-ref name="toggle" scoped="" ref="0x7de82968"/>
        <function-ref name="isOutput" scoped="" ref="0x7de82a48"/>
        <function-ref name="get" scoped="" ref="0x7de82b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de82c08"/>
        <function-ref name="set" scoped="" ref="0x7de82ce8"/>
        <function-ref name="clr" scoped="" ref="0x7de82dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7de80250" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7de80250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de80428"/>
        <function-ref name="isInput" scoped="" ref="0x7de80508"/>
        <function-ref name="toggle" scoped="" ref="0x7de805e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7de806c8"/>
        <function-ref name="get" scoped="" ref="0x7de807a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de80888"/>
        <function-ref name="set" scoped="" ref="0x7de80968"/>
        <function-ref name="clr" scoped="" ref="0x7de80a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7de832a0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7de832a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de83478"/>
        <function-ref name="isInput" scoped="" ref="0x7de83558"/>
        <function-ref name="toggle" scoped="" ref="0x7de83638"/>
        <function-ref name="isOutput" scoped="" ref="0x7de83718"/>
        <function-ref name="get" scoped="" ref="0x7de837f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de838d8"/>
        <function-ref name="set" scoped="" ref="0x7de839b8"/>
        <function-ref name="clr" scoped="" ref="0x7de83a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7de82f28" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7de82f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de81110"/>
        <function-ref name="isInput" scoped="" ref="0x7de811f0"/>
        <function-ref name="toggle" scoped="" ref="0x7de812d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7de813b0"/>
        <function-ref name="get" scoped="" ref="0x7de81490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de81570"/>
        <function-ref name="set" scoped="" ref="0x7de81650"/>
        <function-ref name="clr" scoped="" ref="0x7de81730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7de80ba8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7de80ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de80d80"/>
        <function-ref name="isInput" scoped="" ref="0x7de80e60"/>
        <function-ref name="toggle" scoped="" ref="0x7de74010"/>
        <function-ref name="isOutput" scoped="" ref="0x7de740f0"/>
        <function-ref name="get" scoped="" ref="0x7de741d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de742b0"/>
        <function-ref name="set" scoped="" ref="0x7de74390"/>
        <function-ref name="clr" scoped="" ref="0x7de74470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7de83bf8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7de83bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de83dd0"/>
        <function-ref name="isInput" scoped="" ref="0x7de83eb0"/>
        <function-ref name="toggle" scoped="" ref="0x7de82010"/>
        <function-ref name="isOutput" scoped="" ref="0x7de820f0"/>
        <function-ref name="get" scoped="" ref="0x7de821d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de822b0"/>
        <function-ref name="set" scoped="" ref="0x7de82390"/>
        <function-ref name="clr" scoped="" ref="0x7de82470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7de81890" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7de81890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de81a68"/>
        <function-ref name="isInput" scoped="" ref="0x7de81b48"/>
        <function-ref name="toggle" scoped="" ref="0x7de81c28"/>
        <function-ref name="isOutput" scoped="" ref="0x7de81d08"/>
        <function-ref name="get" scoped="" ref="0x7de81de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de81ec8"/>
        <function-ref name="set" scoped="" ref="0x7de80010"/>
        <function-ref name="clr" scoped="" ref="0x7de800f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7de745d0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7de745d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de747a8"/>
        <function-ref name="isInput" scoped="" ref="0x7de74888"/>
        <function-ref name="toggle" scoped="" ref="0x7de74968"/>
        <function-ref name="isOutput" scoped="" ref="0x7de74a48"/>
        <function-ref name="get" scoped="" ref="0x7de74b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de74c08"/>
        <function-ref name="set" scoped="" ref="0x7de74ce8"/>
        <function-ref name="clr" scoped="" ref="0x7de74dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8952b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8952b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d895488"/>
        <function-ref name="isInput" scoped="" ref="0x7d895568"/>
        <function-ref name="toggle" scoped="" ref="0x7d895648"/>
        <function-ref name="isOutput" scoped="" ref="0x7d895728"/>
        <function-ref name="get" scoped="" ref="0x7d895808"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8958e8"/>
        <function-ref name="set" scoped="" ref="0x7d8959c8"/>
        <function-ref name="clr" scoped="" ref="0x7d895aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d894c78" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d894c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d894e50"/>
        <function-ref name="isInput" scoped="" ref="0x7d893010"/>
        <function-ref name="toggle" scoped="" ref="0x7d8930f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8931d0"/>
        <function-ref name="get" scoped="" ref="0x7d8932b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d893390"/>
        <function-ref name="set" scoped="" ref="0x7d893470"/>
        <function-ref name="clr" scoped="" ref="0x7d893550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d892718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d892718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8928f0"/>
        <function-ref name="isInput" scoped="" ref="0x7d8929d0"/>
        <function-ref name="toggle" scoped="" ref="0x7d892ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d892b90"/>
        <function-ref name="get" scoped="" ref="0x7d892c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d892d50"/>
        <function-ref name="set" scoped="" ref="0x7d892e30"/>
        <function-ref name="clr" scoped="" ref="0x7d892f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8900f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8900f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8902d0"/>
        <function-ref name="isInput" scoped="" ref="0x7d8903b0"/>
        <function-ref name="toggle" scoped="" ref="0x7d890490"/>
        <function-ref name="isOutput" scoped="" ref="0x7d890570"/>
        <function-ref name="get" scoped="" ref="0x7d890650"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d890730"/>
        <function-ref name="set" scoped="" ref="0x7d890810"/>
        <function-ref name="clr" scoped="" ref="0x7d8908f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d889ac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d889ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d889ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7d889d80"/>
        <function-ref name="toggle" scoped="" ref="0x7d889e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7d888010"/>
        <function-ref name="get" scoped="" ref="0x7d8880f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8881d0"/>
        <function-ref name="set" scoped="" ref="0x7d8882b0"/>
        <function-ref name="clr" scoped="" ref="0x7d888390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d887570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d887570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d887748"/>
        <function-ref name="isInput" scoped="" ref="0x7d887828"/>
        <function-ref name="toggle" scoped="" ref="0x7d887908"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8879e8"/>
        <function-ref name="get" scoped="" ref="0x7d887ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d887ba8"/>
        <function-ref name="set" scoped="" ref="0x7d887c88"/>
        <function-ref name="clr" scoped="" ref="0x7d887d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d885010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d885010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8851e8"/>
        <function-ref name="isInput" scoped="" ref="0x7d8852c8"/>
        <function-ref name="toggle" scoped="" ref="0x7d8853a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7d885488"/>
        <function-ref name="get" scoped="" ref="0x7d885568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d885648"/>
        <function-ref name="set" scoped="" ref="0x7d885728"/>
        <function-ref name="clr" scoped="" ref="0x7d885808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8849e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8849e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d884bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7d884ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7d884d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7d884e60"/>
        <function-ref name="get" scoped="" ref="0x7d883010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8830f0"/>
        <function-ref name="set" scoped="" ref="0x7d8831d0"/>
        <function-ref name="clr" scoped="" ref="0x7d8832b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7de64c88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7de64c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de64e60"/>
        <function-ref name="isInput" scoped="" ref="0x7de63010"/>
        <function-ref name="toggle" scoped="" ref="0x7de630f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7de631d0"/>
        <function-ref name="get" scoped="" ref="0x7de632b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de63390"/>
        <function-ref name="set" scoped="" ref="0x7de63470"/>
        <function-ref name="clr" scoped="" ref="0x7de63550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7de62988" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7de62988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de62b60"/>
        <function-ref name="isInput" scoped="" ref="0x7de62c40"/>
        <function-ref name="toggle" scoped="" ref="0x7de62d20"/>
        <function-ref name="isOutput" scoped="" ref="0x7de62e00"/>
        <function-ref name="get" scoped="" ref="0x7de62ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de61010"/>
        <function-ref name="set" scoped="" ref="0x7de610f0"/>
        <function-ref name="clr" scoped="" ref="0x7de611d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7de709c0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7de709c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de70b98"/>
        <function-ref name="isInput" scoped="" ref="0x7de70c78"/>
        <function-ref name="toggle" scoped="" ref="0x7de70d58"/>
        <function-ref name="isOutput" scoped="" ref="0x7de70e38"/>
        <function-ref name="get" scoped="" ref="0x7de70f18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de64010"/>
        <function-ref name="set" scoped="" ref="0x7de640f0"/>
        <function-ref name="clr" scoped="" ref="0x7de641d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7de636b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7de636b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de63888"/>
        <function-ref name="isInput" scoped="" ref="0x7de63968"/>
        <function-ref name="toggle" scoped="" ref="0x7de63a48"/>
        <function-ref name="isOutput" scoped="" ref="0x7de63b28"/>
        <function-ref name="get" scoped="" ref="0x7de63c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de63ce8"/>
        <function-ref name="set" scoped="" ref="0x7de63dc8"/>
        <function-ref name="clr" scoped="" ref="0x7de63ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7de61330" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7de61330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de61508"/>
        <function-ref name="isInput" scoped="" ref="0x7de615e8"/>
        <function-ref name="toggle" scoped="" ref="0x7de616c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7de617a8"/>
        <function-ref name="get" scoped="" ref="0x7de61888"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de61968"/>
        <function-ref name="set" scoped="" ref="0x7de61a48"/>
        <function-ref name="clr" scoped="" ref="0x7de61b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7de64330" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7de64330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de64508"/>
        <function-ref name="isInput" scoped="" ref="0x7de645e8"/>
        <function-ref name="toggle" scoped="" ref="0x7de646c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7de647a8"/>
        <function-ref name="get" scoped="" ref="0x7de64888"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de64968"/>
        <function-ref name="set" scoped="" ref="0x7de64a48"/>
        <function-ref name="clr" scoped="" ref="0x7de64b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7de62030" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7de62030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de62208"/>
        <function-ref name="isInput" scoped="" ref="0x7de622e8"/>
        <function-ref name="toggle" scoped="" ref="0x7de623c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7de624a8"/>
        <function-ref name="get" scoped="" ref="0x7de62588"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de62668"/>
        <function-ref name="set" scoped="" ref="0x7de62748"/>
        <function-ref name="clr" scoped="" ref="0x7de62828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7de61c88" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7de61c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de61e60"/>
        <function-ref name="isInput" scoped="" ref="0x7de60010"/>
        <function-ref name="toggle" scoped="" ref="0x7de600f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7de601d0"/>
        <function-ref name="get" scoped="" ref="0x7de602b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de60390"/>
        <function-ref name="set" scoped="" ref="0x7de60470"/>
        <function-ref name="clr" scoped="" ref="0x7de60550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8447f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8447f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8449d0"/>
        <function-ref name="isInput" scoped="" ref="0x7d844ab0"/>
        <function-ref name="toggle" scoped="" ref="0x7d844b90"/>
        <function-ref name="isOutput" scoped="" ref="0x7d844c70"/>
        <function-ref name="get" scoped="" ref="0x7d844d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d844e30"/>
        <function-ref name="set" scoped="" ref="0x7d844f10"/>
        <function-ref name="clr" scoped="" ref="0x7d843010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d842228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d842228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d842400"/>
        <function-ref name="isInput" scoped="" ref="0x7d8424e0"/>
        <function-ref name="toggle" scoped="" ref="0x7d8425c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8426a0"/>
        <function-ref name="get" scoped="" ref="0x7d842780"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d842860"/>
        <function-ref name="set" scoped="" ref="0x7d842940"/>
        <function-ref name="clr" scoped="" ref="0x7d842a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d841c08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d841c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d841de0"/>
        <function-ref name="isInput" scoped="" ref="0x7d841ec0"/>
        <function-ref name="toggle" scoped="" ref="0x7d840010"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8400f0"/>
        <function-ref name="get" scoped="" ref="0x7d8401d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8402b0"/>
        <function-ref name="set" scoped="" ref="0x7d840390"/>
        <function-ref name="clr" scoped="" ref="0x7d840470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8396c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8396c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d839898"/>
        <function-ref name="isInput" scoped="" ref="0x7d839978"/>
        <function-ref name="toggle" scoped="" ref="0x7d839a58"/>
        <function-ref name="isOutput" scoped="" ref="0x7d839b38"/>
        <function-ref name="get" scoped="" ref="0x7d839c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d839cf8"/>
        <function-ref name="set" scoped="" ref="0x7d839dd8"/>
        <function-ref name="clr" scoped="" ref="0x7d839eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8370b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8370b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d837288"/>
        <function-ref name="isInput" scoped="" ref="0x7d837368"/>
        <function-ref name="toggle" scoped="" ref="0x7d837448"/>
        <function-ref name="isOutput" scoped="" ref="0x7d837528"/>
        <function-ref name="get" scoped="" ref="0x7d837608"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8376e8"/>
        <function-ref name="set" scoped="" ref="0x7d8377c8"/>
        <function-ref name="clr" scoped="" ref="0x7d8378a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d836a88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d836a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d836c60"/>
        <function-ref name="isInput" scoped="" ref="0x7d836d40"/>
        <function-ref name="toggle" scoped="" ref="0x7d836e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7d836f00"/>
        <function-ref name="get" scoped="" ref="0x7d834010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8340f0"/>
        <function-ref name="set" scoped="" ref="0x7d8341d0"/>
        <function-ref name="clr" scoped="" ref="0x7d8342b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d833538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d833538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d833710"/>
        <function-ref name="isInput" scoped="" ref="0x7d8337f0"/>
        <function-ref name="toggle" scoped="" ref="0x7d8338d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8339b0"/>
        <function-ref name="get" scoped="" ref="0x7d833a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d833b70"/>
        <function-ref name="set" scoped="" ref="0x7d833c50"/>
        <function-ref name="clr" scoped="" ref="0x7d833d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d831010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d831010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8311e8"/>
        <function-ref name="isInput" scoped="" ref="0x7d8312c8"/>
        <function-ref name="toggle" scoped="" ref="0x7d8313a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7d831488"/>
        <function-ref name="get" scoped="" ref="0x7d831568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d831648"/>
        <function-ref name="set" scoped="" ref="0x7d831728"/>
        <function-ref name="clr" scoped="" ref="0x7d831808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7de50250" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7de50250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de50428"/>
        <function-ref name="isInput" scoped="" ref="0x7de50508"/>
        <function-ref name="toggle" scoped="" ref="0x7de505e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7de506c8"/>
        <function-ref name="get" scoped="" ref="0x7de507a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de50888"/>
        <function-ref name="set" scoped="" ref="0x7de50968"/>
        <function-ref name="clr" scoped="" ref="0x7de50a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7de44f28" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7de44f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de43110"/>
        <function-ref name="isInput" scoped="" ref="0x7de431f0"/>
        <function-ref name="toggle" scoped="" ref="0x7de432d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7de433b0"/>
        <function-ref name="get" scoped="" ref="0x7de43490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de43570"/>
        <function-ref name="set" scoped="" ref="0x7de43650"/>
        <function-ref name="clr" scoped="" ref="0x7de43730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7de53eb0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7de53eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de510c0"/>
        <function-ref name="isInput" scoped="" ref="0x7de511a0"/>
        <function-ref name="toggle" scoped="" ref="0x7de51280"/>
        <function-ref name="isOutput" scoped="" ref="0x7de51360"/>
        <function-ref name="get" scoped="" ref="0x7de51440"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de51520"/>
        <function-ref name="set" scoped="" ref="0x7de51600"/>
        <function-ref name="clr" scoped="" ref="0x7de516e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7de50ba8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7de50ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de50d80"/>
        <function-ref name="isInput" scoped="" ref="0x7de50e60"/>
        <function-ref name="toggle" scoped="" ref="0x7de44010"/>
        <function-ref name="isOutput" scoped="" ref="0x7de440f0"/>
        <function-ref name="get" scoped="" ref="0x7de441d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de442b0"/>
        <function-ref name="set" scoped="" ref="0x7de44390"/>
        <function-ref name="clr" scoped="" ref="0x7de44470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7de43890" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7de43890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de43a68"/>
        <function-ref name="isInput" scoped="" ref="0x7de43b48"/>
        <function-ref name="toggle" scoped="" ref="0x7de43c28"/>
        <function-ref name="isOutput" scoped="" ref="0x7de43d08"/>
        <function-ref name="get" scoped="" ref="0x7de43de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de43ec8"/>
        <function-ref name="set" scoped="" ref="0x7de42010"/>
        <function-ref name="clr" scoped="" ref="0x7de420f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7de51840" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7de51840"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de51a18"/>
        <function-ref name="isInput" scoped="" ref="0x7de51af8"/>
        <function-ref name="toggle" scoped="" ref="0x7de51bd8"/>
        <function-ref name="isOutput" scoped="" ref="0x7de51cb8"/>
        <function-ref name="get" scoped="" ref="0x7de51d98"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de51e78"/>
        <function-ref name="set" scoped="" ref="0x7de50010"/>
        <function-ref name="clr" scoped="" ref="0x7de500f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7de445d0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7de445d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de447a8"/>
        <function-ref name="isInput" scoped="" ref="0x7de44888"/>
        <function-ref name="toggle" scoped="" ref="0x7de44968"/>
        <function-ref name="isOutput" scoped="" ref="0x7de44a48"/>
        <function-ref name="get" scoped="" ref="0x7de44b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de44c08"/>
        <function-ref name="set" scoped="" ref="0x7de44ce8"/>
        <function-ref name="clr" scoped="" ref="0x7de44dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7de42250" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7de42250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de42428"/>
        <function-ref name="isInput" scoped="" ref="0x7de42508"/>
        <function-ref name="toggle" scoped="" ref="0x7de425e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7de426c8"/>
        <function-ref name="get" scoped="" ref="0x7de427a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de42888"/>
        <function-ref name="set" scoped="" ref="0x7de42968"/>
        <function-ref name="clr" scoped="" ref="0x7de42a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d7f4d08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d7f4d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d7f4ee0"/>
        <function-ref name="isInput" scoped="" ref="0x7d7f1010"/>
        <function-ref name="toggle" scoped="" ref="0x7d7f10f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d7f11d0"/>
        <function-ref name="get" scoped="" ref="0x7d7f12b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d7f1390"/>
        <function-ref name="set" scoped="" ref="0x7d7f1470"/>
        <function-ref name="clr" scoped="" ref="0x7d7f1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d7f0718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d7f0718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d7f08f0"/>
        <function-ref name="isInput" scoped="" ref="0x7d7f09d0"/>
        <function-ref name="toggle" scoped="" ref="0x7d7f0ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d7f0b90"/>
        <function-ref name="get" scoped="" ref="0x7d7f0c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d7f0d50"/>
        <function-ref name="set" scoped="" ref="0x7d7f0e30"/>
        <function-ref name="clr" scoped="" ref="0x7d7f0f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d7e90f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d7e90f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d7e92d0"/>
        <function-ref name="isInput" scoped="" ref="0x7d7e93b0"/>
        <function-ref name="toggle" scoped="" ref="0x7d7e9490"/>
        <function-ref name="isOutput" scoped="" ref="0x7d7e9570"/>
        <function-ref name="get" scoped="" ref="0x7d7e9650"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d7e9730"/>
        <function-ref name="set" scoped="" ref="0x7d7e9810"/>
        <function-ref name="clr" scoped="" ref="0x7d7e98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d7e8ac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d7e8ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d7e8ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7d7e8d80"/>
        <function-ref name="toggle" scoped="" ref="0x7d7e8e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7d7e7010"/>
        <function-ref name="get" scoped="" ref="0x7d7e70f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d7e71d0"/>
        <function-ref name="set" scoped="" ref="0x7d7e72b0"/>
        <function-ref name="clr" scoped="" ref="0x7d7e7390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d7e6570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d7e6570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d7e6748"/>
        <function-ref name="isInput" scoped="" ref="0x7d7e6828"/>
        <function-ref name="toggle" scoped="" ref="0x7d7e6908"/>
        <function-ref name="isOutput" scoped="" ref="0x7d7e69e8"/>
        <function-ref name="get" scoped="" ref="0x7d7e6ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d7e6ba8"/>
        <function-ref name="set" scoped="" ref="0x7d7e6c88"/>
        <function-ref name="clr" scoped="" ref="0x7d7e6d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d7e4010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d7e4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d7e41e8"/>
        <function-ref name="isInput" scoped="" ref="0x7d7e42c8"/>
        <function-ref name="toggle" scoped="" ref="0x7d7e43a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7d7e4488"/>
        <function-ref name="get" scoped="" ref="0x7d7e4568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d7e4648"/>
        <function-ref name="set" scoped="" ref="0x7d7e4728"/>
        <function-ref name="clr" scoped="" ref="0x7d7e4808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d7e39e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d7e39e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d7e3bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7d7e3ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7d7e3d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7d7e3e60"/>
        <function-ref name="get" scoped="" ref="0x7d7e2010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d7e20f0"/>
        <function-ref name="set" scoped="" ref="0x7d7e21d0"/>
        <function-ref name="clr" scoped="" ref="0x7d7e22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d7e1538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d7e1538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d7e1710"/>
        <function-ref name="isInput" scoped="" ref="0x7d7e17f0"/>
        <function-ref name="toggle" scoped="" ref="0x7d7e18d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d7e19b0"/>
        <function-ref name="get" scoped="" ref="0x7d7e1a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d7e1b70"/>
        <function-ref name="set" scoped="" ref="0x7d7e1c50"/>
        <function-ref name="clr" scoped="" ref="0x7d7e1d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7de338f0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7de338f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de33ac8"/>
        <function-ref name="isInput" scoped="" ref="0x7de33ba8"/>
        <function-ref name="toggle" scoped="" ref="0x7de33c88"/>
        <function-ref name="isOutput" scoped="" ref="0x7de33d68"/>
        <function-ref name="get" scoped="" ref="0x7de33e48"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de33f28"/>
        <function-ref name="set" scoped="" ref="0x7de32018"/>
        <function-ref name="clr" scoped="" ref="0x7de320f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7de10cb8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7de10cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de10e90"/>
        <function-ref name="isInput" scoped="" ref="0x7de04010"/>
        <function-ref name="toggle" scoped="" ref="0x7de040f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7de041d0"/>
        <function-ref name="get" scoped="" ref="0x7de042b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de04390"/>
        <function-ref name="set" scoped="" ref="0x7de04470"/>
        <function-ref name="clr" scoped="" ref="0x7de04550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7de01148" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7de01148"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de01320"/>
        <function-ref name="isInput" scoped="" ref="0x7de01400"/>
        <function-ref name="toggle" scoped="" ref="0x7de014e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7de015c0"/>
        <function-ref name="get" scoped="" ref="0x7de016a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de01780"/>
        <function-ref name="set" scoped="" ref="0x7de01860"/>
        <function-ref name="clr" scoped="" ref="0x7de01940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ddf4538" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ddf4538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ddf4710"/>
        <function-ref name="isInput" scoped="" ref="0x7ddf47f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ddf48d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ddf49b0"/>
        <function-ref name="get" scoped="" ref="0x7ddf4a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ddf4b70"/>
        <function-ref name="set" scoped="" ref="0x7ddf4c50"/>
        <function-ref name="clr" scoped="" ref="0x7ddf4d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ddf2978" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ddf2978"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ddf2b50"/>
        <function-ref name="isInput" scoped="" ref="0x7ddf2c30"/>
        <function-ref name="toggle" scoped="" ref="0x7ddf2d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7ddf2df0"/>
        <function-ref name="get" scoped="" ref="0x7ddf2ed0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ddf0010"/>
        <function-ref name="set" scoped="" ref="0x7ddf00f0"/>
        <function-ref name="clr" scoped="" ref="0x7ddf01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dde4d70" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dde4d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dde3010"/>
        <function-ref name="isInput" scoped="" ref="0x7dde30f0"/>
        <function-ref name="toggle" scoped="" ref="0x7dde31d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dde32b0"/>
        <function-ref name="get" scoped="" ref="0x7dde3390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dde3470"/>
        <function-ref name="set" scoped="" ref="0x7dde3550"/>
        <function-ref name="clr" scoped="" ref="0x7dde3630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dde12b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dde12b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dde1488"/>
        <function-ref name="isInput" scoped="" ref="0x7dde1568"/>
        <function-ref name="toggle" scoped="" ref="0x7dde1648"/>
        <function-ref name="isOutput" scoped="" ref="0x7dde1728"/>
        <function-ref name="get" scoped="" ref="0x7dde1808"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dde18e8"/>
        <function-ref name="set" scoped="" ref="0x7dde19c8"/>
        <function-ref name="clr" scoped="" ref="0x7dde1aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ddd36c0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ddd36c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ddd3898"/>
        <function-ref name="isInput" scoped="" ref="0x7ddd3978"/>
        <function-ref name="toggle" scoped="" ref="0x7ddd3a58"/>
        <function-ref name="isOutput" scoped="" ref="0x7ddd3b38"/>
        <function-ref name="get" scoped="" ref="0x7ddd3c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ddd3cf8"/>
        <function-ref name="set" scoped="" ref="0x7ddd3dd8"/>
        <function-ref name="clr" scoped="" ref="0x7ddd3eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ddd1998" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ddd1998"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ddd1b70"/>
        <function-ref name="isInput" scoped="" ref="0x7ddd1c50"/>
        <function-ref name="toggle" scoped="" ref="0x7ddd1d30"/>
        <function-ref name="isOutput" scoped="" ref="0x7ddd1e10"/>
        <function-ref name="get" scoped="" ref="0x7ddd1ef0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ddd0010"/>
        <function-ref name="set" scoped="" ref="0x7ddd00f0"/>
        <function-ref name="clr" scoped="" ref="0x7ddd01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ddc3cb8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ddc3cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ddc3e90"/>
        <function-ref name="isInput" scoped="" ref="0x7ddc2010"/>
        <function-ref name="toggle" scoped="" ref="0x7ddc20f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ddc21d0"/>
        <function-ref name="get" scoped="" ref="0x7ddc22b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ddc2390"/>
        <function-ref name="set" scoped="" ref="0x7ddc2470"/>
        <function-ref name="clr" scoped="" ref="0x7ddc2550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ddc0050" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ddc0050"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ddc0228"/>
        <function-ref name="isInput" scoped="" ref="0x7ddc0308"/>
        <function-ref name="toggle" scoped="" ref="0x7ddc03e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ddc04c8"/>
        <function-ref name="get" scoped="" ref="0x7ddc05a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ddc0688"/>
        <function-ref name="set" scoped="" ref="0x7ddc0768"/>
        <function-ref name="clr" scoped="" ref="0x7ddc0848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ddb33b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ddb33b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ddb3588"/>
        <function-ref name="isInput" scoped="" ref="0x7ddb3668"/>
        <function-ref name="toggle" scoped="" ref="0x7ddb3748"/>
        <function-ref name="isOutput" scoped="" ref="0x7ddb3828"/>
        <function-ref name="get" scoped="" ref="0x7ddb3908"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ddb39e8"/>
        <function-ref name="set" scoped="" ref="0x7ddb3ac8"/>
        <function-ref name="clr" scoped="" ref="0x7ddb3ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ddb06c0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ddb06c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ddb0898"/>
        <function-ref name="isInput" scoped="" ref="0x7ddb0978"/>
        <function-ref name="toggle" scoped="" ref="0x7ddb0a58"/>
        <function-ref name="isOutput" scoped="" ref="0x7ddb0b38"/>
        <function-ref name="get" scoped="" ref="0x7ddb0c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ddb0cf8"/>
        <function-ref name="set" scoped="" ref="0x7ddb0dd8"/>
        <function-ref name="clr" scoped="" ref="0x7ddb0eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dd40d58" loc="27:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dd40d58"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7e350308"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7e350308"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dd34010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7dd34160" loc="28:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7dd34160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7dd34338"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7dd34418"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7dd344f8"/>
        <function-ref name="actualMicro" scoped="" ref="0x7dd345d8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7dd346b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7dd04ee8" loc="49:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7dd04ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dd030e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7dd04300" loc="46:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7dd04300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7dd044d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7dd04b78" loc="48:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7dd04b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dd04d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7dd04648" loc="47:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7dd04648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dd04820"/>
        <function-ref name="taskLoop" scoped="" ref="0x7dd04900"/>
        <function-ref name="runNextTask" scoped="" ref="0x7dd049e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7e3109b8" loc="37:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7e3109b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e310b90"/>
        <function-ref name="runTask" scoped="" ref="0x7e310c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7e330970" loc="36:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7e330970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e330b48"/>
        <function-ref name="taskLoop" scoped="" ref="0x7e330c28"/>
        <function-ref name="runNextTask" scoped="" ref="0x7e330d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7e162120" loc="45:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7e162120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e1622f8"/>
        <function-ref name="runTask" scoped="" ref="0x7e1623d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7e151540" loc="46:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7e151540"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7e151718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7e170960" loc="44:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7e170960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e170b38"/>
        <function-ref name="taskLoop" scoped="" ref="0x7e170c18"/>
        <function-ref name="runNextTask" scoped="" ref="0x7e170cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7e0e01a0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7e0e01a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7e0e0378"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7e302c20" loc="42:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7e302c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7e302df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7e0f0078" loc="43:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7e0f0078"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7e0f0250"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7dcf41e0" loc="22:BlinkTimerM.nc">
      <component-ref qname="BlinkTimerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7dcf41e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7dcf43b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7dcc4190" loc="24:BlinkTimerM.nc">
      <component-ref qname="BlinkTimerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7dcc4190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7dcc4368"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7dcc4448"/>
        <function-ref name="led1On" scoped="" ref="0x7dcc4528"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7dcc4608"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7dcc46e8"/>
        <function-ref name="get" scoped="" ref="0x7dcc47c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7dcc48a8"/>
        <function-ref name="led2Off" scoped="" ref="0x7dcc4c28"/>
        <function-ref name="set" scoped="" ref="0x7dcc4988"/>
        <function-ref name="led0On" scoped="" ref="0x7dcc4a68"/>
        <function-ref name="led2On" scoped="" ref="0x7dcc4b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7dcf2010" loc="23:BlinkTimerM.nc">
      <component-ref qname="BlinkTimerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7dcf2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7dcf1928"/>
        <function-ref name="fired" scoped="" ref="0x7dcf2d18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7dcf12e8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7dcf1108"/>
        <function-ref name="getdt" scoped="" ref="0x7dcf1ce8"/>
        <function-ref name="gett0" scoped="" ref="0x7dcf1b08"/>
        <function-ref name="isRunning" scoped="" ref="0x7dcf2ef8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7dcf2638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7dcf1608"/>
        <function-ref name="startOneShot" scoped="" ref="0x7dcf28b8"/>
        <function-ref name="stop" scoped="" ref="0x7dcf2b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7dcc15e8" loc="35:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7dcc15e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7dcc17c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7dcc18a0"/>
        <function-ref name="led1On" scoped="" ref="0x7dcc1980"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7dcc1a60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7dcc1b40"/>
        <function-ref name="get" scoped="" ref="0x7dcc1c20"/>
        <function-ref name="led1Off" scoped="" ref="0x7dcc1d00"/>
        <function-ref name="led2Off" scoped="" ref="0x7dcc00f0"/>
        <function-ref name="set" scoped="" ref="0x7dcc1de0"/>
        <function-ref name="led0On" scoped="" ref="0x7dcc1ec0"/>
        <function-ref name="led2On" scoped="" ref="0x7dcc0010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7dcb1010" loc="39:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7dcb1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dcb11e8"/>
        <function-ref name="isInput" scoped="" ref="0x7dcb12c8"/>
        <function-ref name="toggle" scoped="" ref="0x7dcb13a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7dcb1488"/>
        <function-ref name="get" scoped="" ref="0x7dcb1568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dcb1648"/>
        <function-ref name="set" scoped="" ref="0x7dcb1728"/>
        <function-ref name="clr" scoped="" ref="0x7dcb1808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dcb2010" loc="35:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dcb2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dcb21e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7dcb1980" loc="40:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7dcb1980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dcb1b58"/>
        <function-ref name="isInput" scoped="" ref="0x7dcb1c38"/>
        <function-ref name="toggle" scoped="" ref="0x7dcb1d18"/>
        <function-ref name="isOutput" scoped="" ref="0x7dcb1df8"/>
        <function-ref name="get" scoped="" ref="0x7dcb1ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dcb0010"/>
        <function-ref name="set" scoped="" ref="0x7dcb00f0"/>
        <function-ref name="clr" scoped="" ref="0x7dcb01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7dcb2330" loc="36:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7dcb2330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7dcb2508"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7dcb25e8"/>
        <function-ref name="led1On" scoped="" ref="0x7dcb26c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7dcb27a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7dcb2888"/>
        <function-ref name="get" scoped="" ref="0x7dcb2968"/>
        <function-ref name="led1Off" scoped="" ref="0x7dcb2a48"/>
        <function-ref name="led2Off" scoped="" ref="0x7dcb2dc8"/>
        <function-ref name="set" scoped="" ref="0x7dcb2b28"/>
        <function-ref name="led0On" scoped="" ref="0x7dcb2c08"/>
        <function-ref name="led2On" scoped="" ref="0x7dcb2ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7dcb0348" loc="41:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7dcb0348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dcb0520"/>
        <function-ref name="isInput" scoped="" ref="0x7dcb0600"/>
        <function-ref name="toggle" scoped="" ref="0x7dcb06e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dcb07c0"/>
        <function-ref name="get" scoped="" ref="0x7dcb08a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dcb0980"/>
        <function-ref name="set" scoped="" ref="0x7dcb0a60"/>
        <function-ref name="clr" scoped="" ref="0x7dcb0b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7dc82cf0" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7dc82cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dc82ec8"/>
        <function-ref name="isInput" scoped="" ref="0x7dc81010"/>
        <function-ref name="toggle" scoped="" ref="0x7dc810f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dc811d0"/>
        <function-ref name="get" scoped="" ref="0x7dc812b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dc81390"/>
        <function-ref name="set" scoped="" ref="0x7dc81470"/>
        <function-ref name="clr" scoped="" ref="0x7dc81550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7dc816e8" loc="36:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7dc816e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dc818c0"/>
        <function-ref name="isInput" scoped="" ref="0x7dc819a0"/>
        <function-ref name="toggle" scoped="" ref="0x7dc81a80"/>
        <function-ref name="isOutput" scoped="" ref="0x7dc81b60"/>
        <function-ref name="get" scoped="" ref="0x7dc81c40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dc81d20"/>
        <function-ref name="set" scoped="" ref="0x7dc81e00"/>
        <function-ref name="clr" scoped="" ref="0x7dc81ee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7dc809e8" loc="38:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dc809e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dc80bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7dc80088" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7dc80088"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dc80260"/>
        <function-ref name="isInput" scoped="" ref="0x7dc80340"/>
        <function-ref name="toggle" scoped="" ref="0x7dc80420"/>
        <function-ref name="isOutput" scoped="" ref="0x7dc80500"/>
        <function-ref name="get" scoped="" ref="0x7dc805e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dc806c0"/>
        <function-ref name="set" scoped="" ref="0x7dc807a0"/>
        <function-ref name="clr" scoped="" ref="0x7dc80880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7dc73a40" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkTimer.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7dc73a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d9f5368"/>
        <function-ref name="fired" scoped="" ref="0x7dc72768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7dc72d08"/>
        <function-ref name="isOneShot" scoped="" ref="0x7dc72b28"/>
        <function-ref name="getdt" scoped="" ref="0x7d9f5728"/>
        <function-ref name="gett0" scoped="" ref="0x7d9f5548"/>
        <function-ref name="isRunning" scoped="" ref="0x7dc72948"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7dc72088"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d9f5048"/>
        <function-ref name="startOneShot" scoped="" ref="0x7dc72308"/>
        <function-ref name="stop" scoped="" ref="0x7dc72588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7dc60630" loc="38:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7dc60630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7dc53010"/>
        <function-ref name="fired" scoped="" ref="0x7dc55350"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7dc558f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7dc55710"/>
        <function-ref name="getdt" scoped="" ref="0x7dc533d0"/>
        <function-ref name="gett0" scoped="" ref="0x7dc531f0"/>
        <function-ref name="isRunning" scoped="" ref="0x7dc55530"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7dc60c58"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7dc55c10"/>
        <function-ref name="startOneShot" scoped="" ref="0x7dc60ed8"/>
        <function-ref name="stop" scoped="" ref="0x7dc55170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7dc45eb0" loc="35:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7dc45eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7dc43830"/>
        <function-ref name="fired" scoped="" ref="0x7dc44bc8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7dc431f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7dc43010"/>
        <function-ref name="getdt" scoped="" ref="0x7dc43bf0"/>
        <function-ref name="gett0" scoped="" ref="0x7dc43a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7dc44da8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7dc444e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7dc43510"/>
        <function-ref name="startOneShot" scoped="" ref="0x7dc44768"/>
        <function-ref name="stop" scoped="" ref="0x7dc449e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7dc336f0" loc="36:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7dc336f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7dc33d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dc45818" loc="34:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dc45818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dc459f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7dc05e38" loc="26:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7dc05e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7dc125a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7dc129a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7dc127a0"/>
        <function-ref name="overflow" scoped="" ref="0x7dc12ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dc30478" loc="24:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dc30478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dc30650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7dc24070" loc="25:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7dc24070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7dc143c8"/>
        <function-ref name="fired" scoped="" ref="0x7dc24c60"/>
        <function-ref name="startAt" scoped="" ref="0x7dc14088"/>
        <function-ref name="isRunning" scoped="" ref="0x7dc24e60"/>
        <function-ref name="getAlarm" scoped="" ref="0x7dc145c8"/>
        <function-ref name="start" scoped="" ref="0x7dc247c0"/>
        <function-ref name="stop" scoped="" ref="0x7dc24a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7dbd5b40" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7dbd5b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7dbd5d18"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7dbd5df8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7dbd5ed8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7dbe2010"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7dbe20f0"/>
        <function-ref name="setControl" scoped="" ref="0x7dbe21d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dc00340" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dc00340"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7e3500e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7e3500e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dc00518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7dbd4010" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7dbd4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7dbd3328"/>
        <function-ref name="fired" scoped="" ref="0x7dbd4af8"/>
        <function-ref name="get" scoped="" ref="0x7dbd4658"/>
        <function-ref name="reset" scoped="" ref="0x7dbd4cf8"/>
        <function-ref name="isOn" scoped="" ref="0x7dbd3528"/>
        <function-ref name="set" scoped="" ref="0x7dbd4858"/>
        <function-ref name="start" scoped="" ref="0x7dbd4ef8"/>
        <function-ref name="stop" scoped="" ref="0x7dbd3128"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7dbe4258" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7dbe4258"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7dbf4a10"/>
        <function-ref name="test" scoped="" ref="0x7dbf4610"/>
        <function-ref name="get" scoped="" ref="0x7dbe48a0"/>
        <function-ref name="setScale" scoped="" ref="0x7dbf4c10"/>
        <function-ref name="getScale" scoped="" ref="0x7dbf4eb0"/>
        <function-ref name="reset" scoped="" ref="0x7dbf4010"/>
        <function-ref name="overflow" scoped="" ref="0x7dbe4d40"/>
        <function-ref name="isOn" scoped="" ref="0x7dbf4810"/>
        <function-ref name="set" scoped="" ref="0x7dbe4aa0"/>
        <function-ref name="start" scoped="" ref="0x7dbf4210"/>
        <function-ref name="stop" scoped="" ref="0x7dbf4410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7db732f0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliInit"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7db732f0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7e3500e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7e3500e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7db734c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7db736d8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliInit"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7db736d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7db62dd8"/>
        <function-ref name="test" scoped="" ref="0x7db629d8"/>
        <function-ref name="get" scoped="" ref="0x7db73d20"/>
        <function-ref name="setScale" scoped="" ref="0x7db61010"/>
        <function-ref name="getScale" scoped="" ref="0x7db612b0"/>
        <function-ref name="reset" scoped="" ref="0x7db623d8"/>
        <function-ref name="overflow" scoped="" ref="0x7db621d8"/>
        <function-ref name="isOn" scoped="" ref="0x7db62bd8"/>
        <function-ref name="set" scoped="" ref="0x7db73f20"/>
        <function-ref name="start" scoped="" ref="0x7db625d8"/>
        <function-ref name="stop" scoped="" ref="0x7db627d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7db56c80" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7db56c80"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7e351f28"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7e351f28"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7db26010"/>
        <function-ref name="fired" scoped="" ref="0x7db55890"/>
        <function-ref name="startAt" scoped="" ref="0x7db55c90"/>
        <function-ref name="isRunning" scoped="" ref="0x7db55a90"/>
        <function-ref name="getAlarm" scoped="" ref="0x7db26210"/>
        <function-ref name="start" scoped="" ref="0x7db553f0"/>
        <function-ref name="stop" scoped="" ref="0x7db55690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7db24320" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7db24320"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7db22648"/>
        <function-ref name="fired" scoped="" ref="0x7db24e08"/>
        <function-ref name="get" scoped="" ref="0x7db24968"/>
        <function-ref name="reset" scoped="" ref="0x7db22048"/>
        <function-ref name="isOn" scoped="" ref="0x7db22848"/>
        <function-ref name="set" scoped="" ref="0x7db24b68"/>
        <function-ref name="start" scoped="" ref="0x7db22248"/>
        <function-ref name="stop" scoped="" ref="0x7db22448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7db26458" loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7db26458"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7db25c10"/>
        <function-ref name="test" scoped="" ref="0x7db25810"/>
        <function-ref name="get" scoped="" ref="0x7db26aa0"/>
        <function-ref name="setScale" scoped="" ref="0x7db25e10"/>
        <function-ref name="getScale" scoped="" ref="0x7db240d8"/>
        <function-ref name="reset" scoped="" ref="0x7db25210"/>
        <function-ref name="overflow" scoped="" ref="0x7db25010"/>
        <function-ref name="isOn" scoped="" ref="0x7db25a10"/>
        <function-ref name="set" scoped="" ref="0x7db26ca0"/>
        <function-ref name="start" scoped="" ref="0x7db25410"/>
        <function-ref name="stop" scoped="" ref="0x7db25610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7db16990" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7db16990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7db030f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7db034f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7db032f8"/>
        <function-ref name="overflow" scoped="" ref="0x7db036f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7db03960" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7db03960"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7db000d8"/>
        <function-ref name="test" scoped="" ref="0x7db02cb0"/>
        <function-ref name="get" scoped="" ref="0x7db02010"/>
        <function-ref name="setScale" scoped="" ref="0x7db002d8"/>
        <function-ref name="getScale" scoped="" ref="0x7db00578"/>
        <function-ref name="reset" scoped="" ref="0x7db026b0"/>
        <function-ref name="overflow" scoped="" ref="0x7db024b0"/>
        <function-ref name="isOn" scoped="" ref="0x7db02eb0"/>
        <function-ref name="set" scoped="" ref="0x7db02210"/>
        <function-ref name="start" scoped="" ref="0x7db028b0"/>
        <function-ref name="stop" scoped="" ref="0x7db02ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7daf3010" loc="61:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
      <component-ref qname="AlarmCounterMilliP.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7daf3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7daa6350"/>
        <function-ref name="fired" scoped="" ref="0x7daf3c00"/>
        <function-ref name="startAt" scoped="" ref="0x7daa6010"/>
        <function-ref name="isRunning" scoped="" ref="0x7daf3e00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7daa6550"/>
        <function-ref name="start" scoped="" ref="0x7daf3760"/>
        <function-ref name="stop" scoped="" ref="0x7daf3a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7daa4908" loc="63:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
      <component-ref qname="AlarmCounterMilliP.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7daa4908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7daa3068"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7daa3468"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7daa3268"/>
        <function-ref name="overflow" scoped="" ref="0x7daa3668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7daa6848" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
      <component-ref qname="AlarmCounterMilliP.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7daa6848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7daa4010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7daa4410"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7daa4210"/>
        <function-ref name="overflow" scoped="" ref="0x7daa4610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7daa3960" loc="64:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
      <component-ref qname="AlarmCounterMilliP.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x7daa3960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7daa1cb8"/>
        <function-ref name="fired" scoped="" ref="0x7daa1578"/>
        <function-ref name="startAt" scoped="" ref="0x7daa1978"/>
        <function-ref name="isRunning" scoped="" ref="0x7daa1778"/>
        <function-ref name="getAlarm" scoped="" ref="0x7daa1eb8"/>
        <function-ref name="start" scoped="" ref="0x7daa10d8"/>
        <function-ref name="stop" scoped="" ref="0x7daa1378"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7da632d0" loc="63:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7da632d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7da634a8"/>
        <function-ref name="runTask" scoped="" ref="0x7da63588"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7da66b60" loc="38:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7da66b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7da65ee8"/>
        <function-ref name="fired" scoped="" ref="0x7da657a8"/>
        <function-ref name="startAt" scoped="" ref="0x7da65ba8"/>
        <function-ref name="isRunning" scoped="" ref="0x7da659a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7da630f8"/>
        <function-ref name="start" scoped="" ref="0x7da65308"/>
        <function-ref name="stop" scoped="" ref="0x7da655a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7da93b60" loc="37:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7da93b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7da664c8"/>
        <function-ref name="fired" scoped="" ref="0x7da678c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7da67e60"/>
        <function-ref name="isOneShot" scoped="" ref="0x7da67c80"/>
        <function-ref name="getdt" scoped="" ref="0x7da66888"/>
        <function-ref name="gett0" scoped="" ref="0x7da666a8"/>
        <function-ref name="isRunning" scoped="" ref="0x7da67aa0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7da671e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7da661a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7da67460"/>
        <function-ref name="stop" scoped="" ref="0x7da676e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7da11c90" loc="60:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7da11c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7da11e68"/>
        <function-ref name="runTask" scoped="" ref="0x7da10010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7da14dc0" loc="38:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7da14dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7da116f8"/>
        <function-ref name="fired" scoped="" ref="0x7da12ae8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7da110b8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7da12ea8"/>
        <function-ref name="getdt" scoped="" ref="0x7da11ab8"/>
        <function-ref name="gett0" scoped="" ref="0x7da118d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7da12cc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7da12408"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7da113d8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7da12688"/>
        <function-ref name="stop" scoped="" ref="0x7da12908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7da60da8" loc="37:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7da60da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7da14768"/>
        <function-ref name="fired" scoped="" ref="0x7da57b00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7da14108"/>
        <function-ref name="isOneShot" scoped="" ref="0x7da57ee0"/>
        <function-ref name="getdt" scoped="" ref="0x7da14b48"/>
        <function-ref name="gett0" scoped="" ref="0x7da14958"/>
        <function-ref name="isRunning" scoped="" ref="0x7da57cf0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7da573f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7da14438"/>
        <function-ref name="startOneShot" scoped="" ref="0x7da57680"/>
        <function-ref name="stop" scoped="" ref="0x7da57910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7da064c8" loc="37:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7da064c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7da06b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7da06de8" loc="38:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7da06de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7e220878"/>
            <typename><typedef-ref name="TMilli" ref="0x7e2209f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7d9f7570"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7d9f7970"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7d9f7770"/>
        <function-ref name="overflow" scoped="" ref="0x7d9f7b70"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="40:/opt/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Init.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.1.2.13 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7e0804f8" loc="51:/opt/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10;</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7e091d78" loc="49:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7e052268" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7e052010" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7e061c98" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.&#10;</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7eea0238"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7e060288" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10;</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7e060010" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7e060860" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10;</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7e0605e0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7e060c48" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10;</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10;</short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7e0107e0" loc="33:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7e010af8" loc="34:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7e0101b0" loc="31:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7e003140" loc="36:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7e0104c8" loc="32:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7e010e10" loc="35:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7e013b80" loc="29:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="clr" ref="0x7e013e90" loc="30:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.&#10;&#10;</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7e330010" loc="46:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7e3307f8" loc="61:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7e330428" loc="54:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10;</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7e310198" loc="56:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7e312df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7e3105a0" loc="64:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7e1513c8" loc="59:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep. </short>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.1.2.11 2006/09/22 19:23:59 idgay Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7e0e0028" loc="54:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7e252338"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7e101ee8" loc="44:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <short>&#10; Constants for manipulating LEDs.&#10;&#10;</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7dcd1a08" loc="50:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7dcd1de0" loc="56:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7dcd01a0" loc="61:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7dcd08e8" loc="72:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7dcc53e8" loc="89:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7dcc5928" loc="106:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LED_LED0, LED_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7dcd0510" loc="66:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7dcc4018" loc="123:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask. </short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7dcc5c60" loc="123:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7dcd1698" loc="45:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7dcd0c58" loc="78:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7dcc5010" loc="83:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7dcf0688" loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7dcf0688"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7dce25b8" loc="125:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.&#10;</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7dce5970" loc="72:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7dce49a8" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7dce4418" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7dce45a8" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7dce40f0" loc="87:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.&#10;</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7dce2dd0" loc="140:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7dce29f8" loc="133:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7dce5d40" loc="81:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7dcf0d40" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7dcf0a98" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7dce2260" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7dce4cd0" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7dce4e60" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7dce5330" loc="62:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7dce5088" loc="62:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7dce5638" loc="67:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7dc33010" loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7dc33010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7dc334d0" loc="50:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7eea06c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10;</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7dc10a18" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7dc10a18"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7dc10b30" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dc10b30"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7dc05018" loc="53:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dc10b30"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7dc05778" loc="65:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7dc05438" loc="60:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits. </short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7dc05b48" loc="71:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed. </short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10;</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7dc229e0" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7dc229e0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7dc22af8" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dc22af8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7dc15908" loc="98:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.&#10;</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dc22af8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7dc208c0" loc="67:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7dc15590" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dc22af8"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dc22af8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7dc15068" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dc22af8"/></type-var>
          </variable>
          <variable name="dt" ref="0x7dc151f8" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dc22af8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7dc20cf8" loc="77:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7dc15d40" loc="105:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10;</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dc22af8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="start" ref="0x7dc201d0" loc="55:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dc22af8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7dc22f20" loc="55:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dc22af8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7dc20588" loc="62:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10;</short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x7dbe03e0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7e2015c0"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7e201810"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7dbd54d0" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7e1e16f0"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7e1e1940"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7dbe0bf0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7e1f03a8"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7e1f05f8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7dbd5178" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7e1f03a8"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7e1f05f8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7dbd5010" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7e1f03a8"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7e1f05f8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7dbd5988" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7e1e16f0"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7e1e1940"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7dbd5820" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7e1e16f0"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7e1e1940"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7dbe0898" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7e2015c0"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7e201810"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7dbe0730" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7e2015c0"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7e201810"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.&#10;</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7dbd2010" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dbd2010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7dbd1a20" loc="65:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10;</short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7dbd2cd8" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7dbd2488" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.&#10;</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dbd2010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="reset" ref="0x7dbd1028" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7dbd1da8" loc="71:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10;</short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7dbd29a8" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.&#10;</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dbd2010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7dbd27c8" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7dbd2010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7dbd1358" loc="56:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7dbd1688" loc="59:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.  &#10;</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7dbf2588" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7dbf2588"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7dbf06c8" loc="89:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="test" ref="0x7dbf0010" loc="78:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10;</short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7dbf29e8" loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.&#10;</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7dbf2588"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7dbf0be0" loc="95:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.&#10;</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7dbf0a08" loc="95:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7dbe4010" loc="101:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.&#10;</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7eeb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="reset" ref="0x7dbf1580" loc="66:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7dbf1248" loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7dbf03a0" loc="84:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10;</short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7e3513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7dbf2ee8" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.&#10;</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7dbf2588"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7dbf2d28" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7dbf2588"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7dbf18b8" loc="69:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7dbf1be8" loc="72:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
